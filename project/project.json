{"name":"Tracker","components":[{"name":"/#Avatar Components/[Logic] Name Abbreviation","id":"1d88a297-b59a-bab8-6e00-c289205d9c46","graph":{"connections":[{"fromId":"e550f2b6-9969-8471-6693-3dca55edef7e","fromProperty":"Name","toId":"8d786ded-e310-bb3b-be0a-64b090e6847f","toProperty":"in-Name"},{"fromId":"8d786ded-e310-bb3b-be0a-64b090e6847f","fromProperty":"out-Abbreviation","toId":"0c6b261c-de7c-3afe-83b9-8b2b1179d5f2","toProperty":"Abbreviation"}],"roots":[{"id":"e550f2b6-9969-8471-6693-3dca55edef7e","type":"Component Inputs","x":-98,"y":0,"parameters":{},"ports":[{"name":"Name","plug":"output","type":"*","index":0}],"dynamicports":[],"children":[]},{"id":"0c6b261c-de7c-3afe-83b9-8b2b1179d5f2","type":"Component Outputs","x":544,"y":-10,"parameters":{},"ports":[{"name":"Abbreviation","plug":"input","type":"*","index":0}],"dynamicports":[],"children":[]},{"id":"8d786ded-e310-bb3b-be0a-64b090e6847f","type":"JavaScriptFunction","x":220,"y":-3,"parameters":{"functionScript":"function _split(name) {\n  const bySpace = name.split(\" \");\n  const byDot = name.split(\".\");\n  return bySpace.length > byDot.length ? bySpace : byDot;\n}\n\nfunction _makeBadge(first, second) {\n  if (first === undefined) return undefined;\n  else if (second === undefined) return (first + first).toUpperCase();\n  else return (first + second).toUpperCase();\n}\n\n// ---\n\nconst name = Inputs.Name;\n\nlet badge = undefined;\ntry {\n  const chars = _split(name);\n  if (chars.length === 1) {\n    badge = _makeBadge(chars[0][0], chars[0][1]);\n  } else if (chars.length >= 2) {\n    badge = _makeBadge(chars[0][0], chars[1][0]);\n  }\n} catch (e) { }\n\nOutputs.Abbreviation = badge;\n","scriptInputs":[{"id":"vhre","label":"Name"}],"intype-Name":"string","scriptOutputs":[{"id":"osit","label":"Abbreviation"}],"outtype-Abbreviation":"string"},"ports":[],"dynamicports":[{"name":"outtype-Abbreviation","displayName":"Type","editorName":"Abbreviation | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"},{"value":"signal","label":"Signal"}],"allowEditOnly":true},"default":"string","parent":"scriptOutputs","parentItemId":"osit","index":4},{"name":"out-Abbreviation","displayName":"Abbreviation","plug":"output","type":"string","group":"Outputs","index":5},{"name":"intype-Name","displayName":"Type","editorName":"Name | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"vhre","index":6},{"name":"in-Name","displayName":"Name","plug":"input","type":"string","group":"Inputs","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":[]},"metadata":{"canvasPos":{"x":-260,"y":0}}},{"name":"/#Avatar Components/Avatar Group","id":"8df97d57-c328-bb2b-b111-97392c48d8ff","graph":{"connections":[{"fromId":"b59c3a60-46c3-e1bb-8388-8be212cbe37d","fromProperty":"out-Remapped","toId":"02cf2cd1-5f50-7153-85b0-0db3867a51cc","toProperty":"items"},{"fromId":"75a179a8-9f12-6219-2e0c-de954275fe3e","fromProperty":"Items","toId":"b59c3a60-46c3-e1bb-8388-8be212cbe37d","toProperty":"in-Items"},{"fromId":"75a179a8-9f12-6219-2e0c-de954275fe3e","fromProperty":"Max Items","toId":"f6d08329-ade2-5070-652b-ac8b090b8be5","toProperty":"value"},{"fromId":"f6d08329-ade2-5070-652b-ac8b090b8be5","fromProperty":"savedValue","toId":"b59c3a60-46c3-e1bb-8388-8be212cbe37d","toProperty":"in-MaxItems"},{"fromId":"b59c3a60-46c3-e1bb-8388-8be212cbe37d","fromProperty":"out-OverflowCount","toId":"280d9f28-9930-f149-d316-84473e611c1b","toProperty":"overflowCount"},{"fromId":"280d9f28-9930-f149-d316-84473e611c1b","fromProperty":"result","toId":"c6c20877-cd92-37da-45fa-aaad90e77aa1","toProperty":"text"},{"fromId":"75a179a8-9f12-6219-2e0c-de954275fe3e","fromProperty":"Item Spacing","toId":"f5d211a3-4588-119c-4f33-04d8c56d0615","toProperty":"value"},{"fromId":"f5d211a3-4588-119c-4f33-04d8c56d0615","fromProperty":"savedValue","toId":"b59c3a60-46c3-e1bb-8388-8be212cbe37d","toProperty":"in-ItemSpacing"}],"roots":[{"id":"e76ffaf4-c1d3-21ec-7aab-e010a3230db3","type":"Group","label":"Group","x":-79,"y":-23,"parameters":{"flexDirection":"row","sizeMode":"contentSize","paddingBottom":{"value":2,"unit":"px"},"paddingTop":{"value":2,"unit":"px"},"paddingRight":{"value":2,"unit":"px"},"paddingLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"02cf2cd1-5f50-7153-85b0-0db3867a51cc","type":"For Each","parameters":{"template":"/#Avatar Components/Avatar Group Item"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n\t'Text': 'Text',\n\t'Image': 'Image',\n\t'ItemSpacing': 'ItemSpacing',\n})\n","plug":"input","index":6}],"children":[]},{"id":"d7623b54-9d53-905b-7ec6-c9e929cb3ad8","type":"Group","parameters":{"sizeMode":"contentSize"},"ports":[],"dynamicports":[],"children":[{"id":"70af46aa-8993-0117-de4b-42a5ce550a04","type":"Avatar","parameters":{"borderWidth":{"value":2,"unit":"px"},"appearance":"circle","borderColor":"#FFFFFF","backgroundColor":"#BDBDBD","outlineWidth":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c6c20877-cd92-37da-45fa-aaad90e77aa1","type":"Text","parameters":{"text":"+","textAlignX":"center","fontFamily":"Arial"},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"75a179a8-9f12-6219-2e0c-de954275fe3e","type":"Component Inputs","x":-1262.2008497987267,"y":-23.856390870720546,"parameters":{},"ports":[{"name":"Item Spacing","plug":"output","type":{"name":"*"},"index":1},{"name":"Items","plug":"output","type":{"name":"*"},"index":2},{"name":"Max Items","plug":"output","type":{"name":"*"},"index":3}],"dynamicports":[],"children":[]},{"id":"b59c3a60-46c3-e1bb-8388-8be212cbe37d","type":"JavaScriptFunction","x":-735.8916041551244,"y":-20.49150467371831,"parameters":{"functionScript":"const itemSpacing = Inputs.ItemSpacing;\nconst items = Inputs.Items;\nconst maxItems = Inputs.MaxItems;\n\nOutputs.Remapped = items.slice(0, maxItems).map((x) => ({\n    ...x,\n    ItemSpacing: itemSpacing,    \n}));\n\nOutputs.OverflowCount = Math.max(items.length - maxItems, 0);\n","scriptInputs":[{"id":"tm21","label":"ItemSpacing"},{"id":"4zm5","label":"Items"},{"id":"v0ou","label":"MaxItems"}],"intype-ItemSpacing":"number","intype-Items":"array","intype-MaxItems":"number"},"ports":[],"dynamicports":[{"name":"intype-ItemSpacing","displayName":"Type","editorName":"ItemSpacing | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"tm21","index":4},{"name":"in-ItemSpacing","displayName":"ItemSpacing","plug":"input","type":"number","group":"Inputs","index":5},{"name":"intype-Items","displayName":"Type","editorName":"Items | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"4zm5","index":6},{"name":"in-Items","displayName":"Items","plug":"input","type":"array","group":"Inputs","index":7},{"name":"intype-MaxItems","displayName":"Type","editorName":"MaxItems | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"v0ou","index":8},{"name":"in-MaxItems","displayName":"MaxItems","plug":"input","type":"number","group":"Inputs","index":9},{"name":"out-Remapped","displayName":"Remapped","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-OverflowCount","displayName":"OverflowCount","plug":"output","type":"*","group":"Outputs","index":11}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"f6d08329-ade2-5070-652b-ac8b090b8be5","type":"Number","x":-992.1178716625934,"y":145.1181560323293,"parameters":{"value":5},"ports":[],"dynamicports":[],"children":[]},{"id":"280d9f28-9930-f149-d316-84473e611c1b","type":"Expression","x":-432.79467795726384,"y":184.17703827432157,"parameters":{"expression":"overflowCount > 0 ? overflowCount : 0"},"ports":[],"dynamicports":[{"group":"Parameters","name":"overflowCount","type":{"name":"*","editAsType":"string"},"plug":"input","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["expression"]}}},{"id":"f5d211a3-4588-119c-4f33-04d8c56d0615","type":"Number","x":-993.6802269522736,"y":-104.85869031642179,"parameters":{"value":0.8},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":["e76ffaf4-c1d3-21ec-7aab-e010a3230db3"]},"metadata":{"canvasPos":{"x":1119,"y":0}}},{"name":"/#Avatar Components/Avatar Group Item","id":"615f77f8-bc04-3bdf-ef85-802b421849a4","graph":{"connections":[{"fromId":"eae5f571-d284-759a-e5c2-65f2828cf306","fromProperty":"outDesiredSize","toId":"0b1f9fa3-65e0-2a53-99ce-d24377cd7438","toProperty":"width"},{"fromId":"0b1f9fa3-65e0-2a53-99ce-d24377cd7438","fromProperty":"result","toId":"689af21a-2ad4-fead-442a-3b4537d752d5","toProperty":"width"},{"fromId":"b6e93bb7-372b-bd9a-12cb-8384530fab65","fromProperty":"Text","toId":"eae5f571-d284-759a-e5c2-65f2828cf306","toProperty":"text"},{"fromId":"b6e93bb7-372b-bd9a-12cb-8384530fab65","fromProperty":"Image","toId":"eae5f571-d284-759a-e5c2-65f2828cf306","toProperty":"src"},{"fromId":"b6e93bb7-372b-bd9a-12cb-8384530fab65","fromProperty":"ItemSpacing","toId":"b995e770-f313-befa-ced7-c441a380f946","toProperty":"value"},{"fromId":"b995e770-f313-befa-ced7-c441a380f946","fromProperty":"savedValue","toId":"0b1f9fa3-65e0-2a53-99ce-d24377cd7438","toProperty":"scale"}],"roots":[{"id":"689af21a-2ad4-fead-442a-3b4537d752d5","type":"Group","x":-25,"y":-6,"parameters":{"sizeMode":"contentHeight","width":{"value":20,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"eae5f571-d284-759a-e5c2-65f2828cf306","type":"Avatar","parameters":{"borderWidth":{"value":2,"unit":"px"},"outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#FFFFFF"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"0b1f9fa3-65e0-2a53-99ce-d24377cd7438","type":"Expression","x":-318,"y":-119,"parameters":{"expression":"width * scale"},"ports":[],"dynamicports":[{"group":"Parameters","name":"width","type":{"name":"*","editAsType":"string"},"plug":"input","index":7},{"group":"Parameters","name":"scale","type":{"name":"*","editAsType":"string"},"plug":"input","index":8}],"children":[],"metadata":{"merge":{"soureCodePorts":["expression"]}}},{"id":"b6e93bb7-372b-bd9a-12cb-8384530fab65","type":"Component Inputs","x":-823,"y":25,"parameters":{},"ports":[{"name":"Text","plug":"output","type":{"name":"*"},"index":1},{"name":"Image","plug":"output","type":{"name":"*"},"index":2},{"name":"ItemSpacing","plug":"output","type":{"name":"*"},"index":3}],"dynamicports":[],"children":[]},{"id":"b995e770-f313-befa-ced7-c441a380f946","type":"Number","x":-566,"y":-102,"parameters":{"value":0.8},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":["689af21a-2ad4-fead-442a-3b4537d752d5"]},"metadata":{"canvasPos":{"x":1119.2317221873564,"y":46.9460150211732}}},{"name":"/#Avatar Components/Sample","id":"76205675-cbb7-2b11-b419-5dd0cd3067e2","graph":{"connections":[{"fromId":"bdc610a3-b85c-bc6a-388d-ed91b5281b30","fromProperty":"Rotation","toId":"4ef9511c-5716-10ce-b978-0ceb5b49fb2f","toProperty":"profileRotation"},{"fromId":"4ef9511c-5716-10ce-b978-0ceb5b49fb2f","fromProperty":"onMouseEnter","toId":"bdc610a3-b85c-bc6a-388d-ed91b5281b30","toProperty":"to-Hover"},{"fromId":"4ef9511c-5716-10ce-b978-0ceb5b49fb2f","fromProperty":"onMouseLeave","toId":"bdc610a3-b85c-bc6a-388d-ed91b5281b30","toProperty":"to-Default"},{"fromId":"4ef9511c-5716-10ce-b978-0ceb5b49fb2f","fromProperty":"onMouseEnter","toId":"a377f8dd-52c6-ec15-8395-de02809fb2b8","toProperty":"Play"},{"fromId":"bdc610a3-b85c-bc6a-388d-ed91b5281b30","fromProperty":"reached-Default","toId":"a377f8dd-52c6-ec15-8395-de02809fb2b8","toProperty":"Stop"},{"fromId":"e54668d1-af25-386e-1ef4-cebd78dd617e","fromProperty":"didMount","toId":"dc1e3beb-354d-b662-34be-0a6687342271","toProperty":"start"},{"fromId":"dc1e3beb-354d-b662-34be-0a6687342271","fromProperty":"timerStarted","toId":"a0481690-1008-fe82-fc05-14102df2fbc9","toProperty":"to-Default"},{"fromId":"a0481690-1008-fe82-fc05-14102df2fbc9","fromProperty":"PosX","toId":"e54668d1-af25-386e-1ef4-cebd78dd617e","toProperty":"profilePositionX"},{"fromId":"a0481690-1008-fe82-fc05-14102df2fbc9","fromProperty":"Rot","toId":"e54668d1-af25-386e-1ef4-cebd78dd617e","toProperty":"profileRotation"},{"fromId":"fa65c755-5796-31a1-e1be-3b404136516b","fromProperty":"onFocus","toId":"c27207a1-dec3-1dbd-c931-4c85b90b0021","toProperty":"to-Focused"},{"fromId":"fa65c755-5796-31a1-e1be-3b404136516b","fromProperty":"onBlur","toId":"c27207a1-dec3-1dbd-c931-4c85b90b0021","toProperty":"to-Not Focused"},{"fromId":"c27207a1-dec3-1dbd-c931-4c85b90b0021","fromProperty":"Text","toId":"b85ec27b-5b5a-fd09-d031-b204ba6d3c9c","toProperty":"text"},{"fromId":"e055ef90-66f0-6cf9-e6ca-0819d02800eb","fromProperty":"Abbreviation","toId":"c4ac1a4a-28a0-3617-0fad-959538d8c472","toProperty":"text"},{"fromId":"b686203e-d866-c028-9895-63443dec4aac","fromProperty":"out-Items","toId":"434394d2-138a-5d1b-ad46-119c1061e153","toProperty":"Items"},{"fromId":"cf68bed5-25b2-4082-8f97-cffcbe7078f8","fromProperty":"out-Items","toId":"c66b89e2-0afa-5c5d-49d4-2eae60fc872c","toProperty":"Items"},{"fromId":"cf68bed5-25b2-4082-8f97-cffcbe7078f8","fromProperty":"out-Items","toId":"561b4d5d-7c4b-268a-96c0-2a0aaf4fc86d","toProperty":"Items"},{"fromId":"cf68bed5-25b2-4082-8f97-cffcbe7078f8","fromProperty":"out-Items","toId":"f3339f4e-81b7-e346-3ca7-18c798553a1c","toProperty":"Items"},{"fromId":"cf68bed5-25b2-4082-8f97-cffcbe7078f8","fromProperty":"out-Items","toId":"ad01ad45-ae50-162e-2767-b03ed16f0978","toProperty":"Items"}],"roots":[{"id":"659d0c1a-f13a-22b6-9a20-be071720903c","type":"Group","label":"Group","x":393.6181058182896,"y":383.5,"parameters":{"backgroundColor":"#FFFFFF","scrollEnabled":true},"ports":[],"dynamicports":[],"children":[{"id":"db3bd86f-29cb-d949-0a09-f0b27d4ac49d","type":"Group","parameters":{"sizeMode":"contentSize","marginTop":{"value":0,"unit":"px"},"paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7a40da59-4853-5601-c814-41dbc8a5d6ba","type":"Text","parameters":{"text":"Testing","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"edd3e6b3-84a4-50d8-213a-39f97639e02f","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentSize","paddingLeft":{"value":6,"unit":"px"},"alignX":"left","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c4ac1a4a-28a0-3617-0fad-959538d8c472","type":"Avatar","parameters":{"sizeCustom":{"value":400,"unit":"px"},"size":"xxlarge","borderColor":"#61FF00","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Primary Light","text":"","label":"I am a label","tooltip":"Tooltip Ya!","appearance":"square","outlineWidth":{"value":2,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e54668d1-af25-386e-1ef4-cebd78dd617e","type":"Avatar","parameters":{"size":"xxlarge","borderColor":"#61FF00","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Primary Light","text":"ET","label":"I am a label","tooltip":"Tooltip Ya!","appearance":"square","src":"avatars/avatar-XHVpWcr5grQ.jpg","profileRotation":{"value":45,"unit":"deg"},"outlineWidth":{"value":5,"unit":"px"},"outlineColor":"#41F800","marginBottom":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"4ef9511c-5716-10ce-b978-0ceb5b49fb2f","type":"Avatar","parameters":{"sizeCustom":{"value":600,"unit":"px"},"size":"xxlarge","borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"src":"avatars/avatar-XHVpWcr5grQ.jpg","appearance":"circle","borderInset":false,"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"079ef04b-4819-d8ad-4682-75c9aec053dd","type":"Group","parameters":{"sizeMode":"contentSize","paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"71d909ed-cae8-248b-c204-2f1825080dfe","type":"Text","parameters":{"text":"Styling","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a44b5aff-6004-53c0-910a-fb1c47e293f5","type":"Group","parameters":{"sizeMode":"contentSize","flexDirection":"row","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ba9c94f6-084c-2d0e-4205-e422dc2ea6da","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"src":"avatars/avatar-TW_z_iUD_bQ.jpg","size":"large","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"9fabc492-95cb-a4f3-39a6-024c076e9c7a","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"src":"avatars/avatar-ZHvM3XIOHoE.jpg","appearance":"square","size":"large","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"00e1eee4-54e7-e75d-ce40-fc254ff5c838","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"src":"avatars/avatar-WNoLnJo7tS8.jpg","size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#FF0000","marginTop":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"326933df-73d8-b45a-c84d-5f3bb74655a7","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"src":"avatars/avatar-n4KewLKFOZw.jpg","size":"large","borderInset":false,"outlineStyle":"dashed","outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#FF0000","marginLeft":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"77389fdf-ffec-4312-4a2f-36d367ec6577","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"src":"avatars/avatar-TW_z_iUD_bQ.jpg","size":"large","borderInset":false,"outlineStyle":"dashed","outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#48CE27","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"3b5490be-0316-3f2e-7df9-1800b2240ae3","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"src":"avatars/avatar-XHVpWcr5grQ.jpg","size":"large","borderInset":false,"outlineWidth":{"value":1,"unit":"px"},"outlineColor":"#F10000","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"6efcba0c-472a-3eff-5522-890f729983bb","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#1300FF","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"appearance":"square"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"09d378b9-48c2-ce8b-0a56-c65e63011d0f","type":"Group","parameters":{"sizeMode":"contentSize","flexDirection":"row","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d0bf55cc-3510-4939-160e-a907b9087687","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":1,"unit":"px"},"outlineColor":"#F10000","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"backgroundColor":"#FFBBBB","text":"AA"},"ports":[],"dynamicports":[],"children":[]},{"id":"029bdac1-0f11-46f4-9ed3-aaf74ef792f4","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":1,"unit":"px"},"outlineColor":"#48CE27","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"backgroundColor":"#C5FFBB","text":"BB"},"ports":[],"dynamicports":[],"children":[]},{"id":"5cdc8938-0e23-b9b3-58f3-312b0a0dbc2c","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":1,"unit":"px"},"outlineColor":"#1300FF","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"backgroundColor":"#C0BBFF","text":"CC"},"ports":[],"dynamicports":[],"children":[]},{"id":"cbc81148-c596-fbfc-ea44-aa6520f2cde3","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#F10000","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"68677751-af48-858d-04aa-b0a5f7c33933","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#48CE27","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e8e5b135-f929-7cd7-c865-c38c0b90115f","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#1300FF","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"c6ff87a2-9b32-6576-d836-3ac17d5c6f0a","type":"Avatar","parameters":{"size":"large","marginTop":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"outlineColor":"#FF0000","outlineWidth":{"value":2,"unit":"px"},"outlineStyle":"dashed","outlineSpacing":5},"ports":[],"dynamicports":[],"children":[]},{"id":"dcd9c9f8-5b39-ea97-0e79-901f67abac3f","type":"Avatar","parameters":{"size":"large","marginTop":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"outlineColor":"#FF0000","outlineWidth":{"value":2,"unit":"px"},"outlineStyle":"dashed"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"02a68f84-8c7a-b787-b303-e55f70514220","type":"Group","parameters":{"sizeMode":"contentSize","paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"50299856-9c5a-38f0-984b-e7b0f7a76ee0","type":"Text","parameters":{"text":"Styling with Visual States","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e03b613d-3387-fe54-9d19-680270703c18","type":"Group","parameters":{"sizeMode":"contentSize","flexDirection":"row","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d7b524d3-04e4-d9e0-944d-c67d77f7da1e","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineColor":"#F10000","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"outlineWidth":{"value":2,"unit":"px"}},"stateParameters":{"hover":{"outlineColor":"#00F118"}},"stateTransitions":{"neutral":{"outlineColor":{"curve":[0.42,0,0.58,1],"dur":300,"delay":0}}},"ports":[],"dynamicports":[],"children":[]},{"id":"a1c05e46-25ff-cea3-42d8-d5e959516698","type":"Avatar","label":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#48CE27","marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"stateParameters":{"hover":{"outlineWidth":{"value":10,"unit":"px"}}},"stateTransitions":{"hover":{"outlineColor":{"curve":[0,0,0.58,1],"dur":1000,"delay":0}},"neutral":{"outlineWidth":{"curve":[0,0,0.58,1],"dur":1000,"delay":0}}},"ports":[],"dynamicports":[],"children":[]},{"id":"d4722d4c-ddfd-7dd0-74f4-d5056b7ddb55","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"outlineColor":"#477DCE"},"stateParameters":{"hover":{"outlineStyle":"dashed"}},"ports":[],"dynamicports":[],"children":[]},{"id":"703665c7-6374-88fc-370f-18478920e923","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"outlineColor":"#1300FF"},"stateParameters":{"hover":{"appearance":"square"}},"ports":[],"dynamicports":[],"children":[]},{"id":"c627aa2b-5cf0-7f0e-0bd9-7ddfe7ba3efa","type":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":2,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"outlineColor":"#1300FF","text":"AA","backgroundColor":"Light Gray"},"stateParameters":{"hover":{"textScale":0.25}},"ports":[],"dynamicports":[],"children":[]},{"id":"959c0087-5982-a066-1703-47314c2e5afa","type":"Avatar","label":"Avatar","parameters":{"borderColor":"#C71818","borderWidth":{"value":5,"unit":"px"},"size":"large","borderInset":false,"outlineWidth":{"value":3,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"outlineColor":"#FF00C7","src":"avatars/avatar-TW_z_iUD_bQ.jpg"},"stateParameters":{"hover":{"profileGrayscale":{"value":100,"unit":"%"}}},"stateTransitions":{"neutral":{"profileGrayscale":{"curve":[0,0,0.58,1],"dur":1000,"delay":0}}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"f105ba79-0f50-9e5a-4e12-d848a19034c8","type":"Group","parameters":{"sizeMode":"contentSize","paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"58995255-2909-bfa7-5110-3c4bb8716526","type":"Text","parameters":{"text":"Custom Children","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"be016a39-bb2d-5db5-26a5-9c1c8eb77716","type":"Group","parameters":{"sizeMode":"contentSize","flexDirection":"row","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c55f84ed-e18b-b751-3426-900b39ae3512","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"medium","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7e107783-0ee4-5e56-bb90-459c399d28a4","type":"net.noodl.visual.icon","parameters":{"iconIconSource":{"class":"material-icons","code":"health_and_safety"},"iconColor":"#000000"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"01d2939e-90f6-24db-52d4-c5152aab018e","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"large","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0a73f109-8933-23d8-be36-2a5b3fc5c12e","type":"Image","parameters":{"src":"avatars/emoticon-kiss-outline.png","sizeMode":"explicit","width":{"value":80,"unit":"%"},"height":{"value":80,"unit":"%"},"alignY":"center","alignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ff28402d-efc0-809a-1550-cd25028f8378","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"large","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"efee0c77-8683-3f5f-62e7-f726ede28aee","type":"Image","parameters":{"src":"avatars/emoticon-cool.png","sizeMode":"explicit","width":{"value":80,"unit":"%"},"height":{"value":80,"unit":"%"},"alignY":"center","alignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"7ecbaf82-ed2b-c07f-fbbd-1d7ceb31b0e7","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"large","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ea0a540d-1b91-d63a-9fc5-7b2c9b243bae","type":"Text","parameters":{"text":"Hi","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"de5c3a83-25f3-3923-8c2f-ad5a452ba73a","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xlarge","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d1c999f3-9a91-d5da-9d3a-daa6500b32f8","type":"Text","parameters":{"text":"Hi","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a9d81877-b23f-0083-f349-c1e3f14defb8","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xlarge","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"fbb425b2-df60-6877-46b5-b90fec4ccfb9","type":"Text","parameters":{"text":"Hi 1","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"4c01eeb6-1f44-f84f-4664-544f92d681f3","type":"Text","parameters":{"text":"Hi 2","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"462bd98c-5277-374e-5dfe-286ceb4994be","type":"Group","parameters":{"sizeMode":"contentSize","paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e6b7e6b6-2e76-20b0-c6ce-1804cccda171","type":"Text","parameters":{"text":"Sizes","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"d193ba6a-61dc-0d5a-758e-4e738857824f","type":"Group","parameters":{"sizeMode":"contentSize","flexDirection":"row","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"958f2095-9767-ff5c-b9f0-1dfcd7fd70fa","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xsmall","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"3e1fe1ec-afda-e376-1d9a-dae7ac340c6b","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"small","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"23eb89c9-4a50-1746-0a20-10aa42c52745","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"medium","backgroundColor":"Light Gray","marginRight":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"37d5bf59-75b7-93f5-b93d-71007c87549d","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"large","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a2cc30f7-99a6-463e-4edd-6b2813f95cfc","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xlarge","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"72db8a48-d58d-224f-1a13-ba700ff6f60e","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xxlarge","backgroundColor":"Light Gray","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"82a462e6-94d3-9909-fd41-dda0a3cb6c9d","type":"Group","parameters":{"sizeMode":"contentSize","paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"94986cee-a465-933f-c440-aaa7812c3eb8","type":"Text","parameters":{"text":"Sizes with Text","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"90f601d2-9136-a2bb-123c-c0f7eff0203b","type":"Group","parameters":{"sizeMode":"contentSize","flexDirection":"row","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c21fc33d-4969-8b15-f888-c976e9eeb0aa","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xsmall","backgroundColor":"Light Gray","text":"AA","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"97387bbf-73bd-1ae8-71a6-afcffb8d9255","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"small","backgroundColor":"Light Gray","text":"AA","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"67f8b2d4-c133-e78d-8aca-9203c0122c54","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"medium","backgroundColor":"Light Gray","text":"AA","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"f946125e-bc4a-9c98-e32e-f7a858c70393","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"large","backgroundColor":"Light Gray","text":"AA","marginLeft":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"02195ef2-adfa-860a-f192-36f257d26e44","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xlarge","backgroundColor":"Light Gray","text":"AA","marginTop":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"89d91eaf-2329-0304-42e5-f68c24e52f8e","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xxlarge","backgroundColor":"Light Gray","text":"AA","marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"9faace42-c6cb-ce8f-3276-cb499955aef5","type":"Group","parameters":{"sizeMode":"contentSize","paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b85ec27b-5b5a-fd09-d031-b204ba6d3c9c","type":"Text","parameters":{"text":"Has Focus","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"96d7c3fd-a155-d1ae-ce57-67282aee7bd8","type":"Group","parameters":{"sizeMode":"contentSize","flexDirection":"row","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"713e6ced-8262-9e58-33b9-13632e45ea23","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xlarge","backgroundColor":"Light Gray","text":"AA","marginLeft":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"fa65c755-5796-31a1-e1be-3b404136516b","type":"Avatar","parameters":{"borderColor":"#51D400","borderWidth":{"value":0,"unit":"px"},"appearance":"circle","size":"xlarge","backgroundColor":"Light Gray","text":"Focus Me","marginLeft":{"value":6,"unit":"px"},"marginRight":{"value":6,"unit":"px"},"marginBottom":{"value":6,"unit":"px"},"marginTop":{"value":6,"unit":"px"},"textScale":0.2},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"7cf5e535-20a2-182d-1a67-4f8e0cbcfafe","type":"Group","parameters":{"sizeMode":"contentSize","paddingTop":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b21aec28-627c-0563-2a13-17d60032657a","type":"Text","parameters":{"text":"Group","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"bfcecbc7-a40b-5bc5-bf2d-758a2611965d","type":"Group","parameters":{"sizeMode":"contentSize","paddingBottom":{"value":6,"unit":"px"},"paddingTop":{"value":6,"unit":"px"},"paddingRight":{"value":6,"unit":"px"},"paddingLeft":{"value":6,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"434394d2-138a-5d1b-ad46-119c1061e153","type":"/#Avatar Components/Avatar Group","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"561b4d5d-7c4b-268a-96c0-2a0aaf4fc86d","type":"/#Avatar Components/Avatar Group","parameters":{"Item Spacing":0.6},"ports":[],"dynamicports":[],"children":[]},{"id":"f3339f4e-81b7-e346-3ca7-18c798553a1c","type":"/#Avatar Components/Avatar Group","parameters":{"Item Spacing":0.4},"ports":[],"dynamicports":[],"children":[]},{"id":"c66b89e2-0afa-5c5d-49d4-2eae60fc872c","type":"/#Avatar Components/Avatar Group","parameters":{},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"63dc63bc-b44b-4d1f-ef5d-8879653d79ea","type":"Group","label":"Preview","parameters":{"flexDirection":"row","marginTop":{"value":32,"unit":"px"},"marginLeft":{"value":32,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"5fc3b12b-8ea9-8441-c35e-66b5a252f1c3","type":"Group","parameters":{"sizeMode":"contentSize","paddingRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0ed6c9c3-0f5a-c6e8-c4d0-ddcf8b9f5a5c","type":"Avatar","parameters":{"src":"avatars/avatar-TW_z_iUD_bQ.jpg","outlineWidth":{"value":2,"unit":"px"},"outlineColor":"#F5BC41","marginBottom":{"value":2,"unit":"px"},"marginTop":{"value":2,"unit":"px"},"marginLeft":{"value":2,"unit":"px"},"marginRight":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"2541df05-de52-7d6a-344e-aa6451d33c0e","type":"Group","parameters":{"sizeMode":"contentSize"},"ports":[],"dynamicports":[],"children":[{"id":"ad01ad45-ae50-162e-2767-b03ed16f0978","type":"/#Avatar Components/Avatar Group","parameters":{},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"bdc610a3-b85c-bc6a-388d-ed91b5281b30","type":"States","x":882.9558726649685,"y":857.2186555505518,"parameters":{"states":"Default,Hover","values":"Rotation","type-Rotation":"number","value-Default-Rotation":0,"value-Hover-Rotation":180},"ports":[],"dynamicports":[{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"Rotation","index":6},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"Rotation","name":"type-Rotation","index":7},{"plug":"input","type":"number","group":"Default Values","name":"value-Default-Rotation","displayName":"Rotation","editorName":"Default|Rotation","index":8},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Default Transitions","name":"transitiondef-Default","index":9},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Default Transitions","name":"transition-Default-Rotation","displayName":"Rotation","editorName":"Transition Default|Rotation","index":10},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To Default","name":"to-Default","group":"Go to state","index":11},{"plug":"output","type":"boolean","displayName":"At Default","name":"at-Default","group":"Current state","index":12},{"plug":"output","type":"signal","displayName":"Has Reached Default","name":"reached-Default","group":"Current state","index":13},{"plug":"input","type":"number","group":"Hover Values","name":"value-Hover-Rotation","displayName":"Rotation","editorName":"Hover|Rotation","index":14},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Hover Transitions","name":"transitiondef-Hover","index":15},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Hover Transitions","name":"transition-Hover-Rotation","displayName":"Rotation","editorName":"Transition Hover|Rotation","index":16},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To Hover","name":"to-Hover","group":"Go to state","index":17},{"plug":"output","type":"boolean","displayName":"At Hover","name":"at-Hover","group":"Current state","index":18},{"plug":"output","type":"signal","displayName":"Has Reached Hover","name":"reached-Hover","group":"Current state","index":19},{"plug":"input","type":{"name":"enum","enums":["Default","Hover"]},"group":"States","displayName":"State","name":"currentState","default":"Default","index":20}],"children":[]},{"id":"a377f8dd-52c6-ec15-8395-de02809fb2b8","type":"Javascript2","label":"Play Audio","x":880.2368682488906,"y":1024.3065438169892,"parameters":{"code":"Node.Inputs = {\r\n    Url: \"string\",\r\n}\r\n\r\nNode.Outputs = {}\r\n\r\nlet audio;\r\n\r\nNode.Signals = {\r\n    Play() {\r\n        if (audio) {\r\n            audio.pause();\r\n        }\r\n\r\n        audio = new Audio(Node.Inputs.Url);\r\n        audio.playbackRate = 2; // 1 + Math.random() * 3;\r\n        audio.loop = true;\r\n        audio.play();\r\n    },\r\n    Stop() {\r\n        if (audio) {\r\n            audio.pause();\r\n        }\r\n    }\r\n}\r\n","Url":"https://freesound.org/data/previews/205/205982_3219995-lq.mp3"},"ports":[],"dynamicports":[{"name":"Url","plug":"input","type":{"name":"string"},"group":"Inputs","index":5},{"name":"Play","plug":"input","type":{"name":"signal"},"group":"Inputs","index":6},{"name":"Stop","plug":"input","type":{"name":"signal"},"group":"Inputs","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["code"]}}},{"id":"dc1e3beb-354d-b662-34be-0a6687342271","type":"Timer","x":885.6581652480975,"y":571.0435398728189,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"a0481690-1008-fe82-fc05-14102df2fbc9","type":"States","x":886.2248419207815,"y":673.7219219760252,"parameters":{"states":"Start,Default","values":"PosX,Rot","type-PosX":"number","value-Start-PosX":-100,"value-Default-PosX":0,"type-Rot":"number","value-Start-Rot":-45,"value-Default-Rot":45,"transition-Start-Rot":{"curve":[0,0,0.76,1.69],"dur":300,"delay":0},"transition-Start-PosX":{"curve":[0,0,0.65,1.7],"dur":300,"delay":0}},"ports":[],"dynamicports":[{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"PosX","index":6},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"PosX","name":"type-PosX","index":7},{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"Rot","index":8},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"Rot","name":"type-Rot","index":9},{"plug":"input","type":"number","group":"Start Values","name":"value-Start-PosX","displayName":"PosX","editorName":"Start|PosX","index":10},{"plug":"input","type":"number","group":"Start Values","name":"value-Start-Rot","displayName":"Rot","editorName":"Start|Rot","index":11},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Start Transitions","name":"transitiondef-Start","index":12},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Start Transitions","name":"transition-Start-PosX","displayName":"PosX","editorName":"Transition Start|PosX","index":13},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Start Transitions","name":"transition-Start-Rot","displayName":"Rot","editorName":"Transition Start|Rot","index":14},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To Start","name":"to-Start","group":"Go to state","index":15},{"plug":"output","type":"boolean","displayName":"At Start","name":"at-Start","group":"Current state","index":16},{"plug":"output","type":"signal","displayName":"Has Reached Start","name":"reached-Start","group":"Current state","index":17},{"plug":"input","type":"number","group":"Default Values","name":"value-Default-PosX","displayName":"PosX","editorName":"Default|PosX","index":18},{"plug":"input","type":"number","group":"Default Values","name":"value-Default-Rot","displayName":"Rot","editorName":"Default|Rot","index":19},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Default Transitions","name":"transitiondef-Default","index":20},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Default Transitions","name":"transition-Default-PosX","displayName":"PosX","editorName":"Transition Default|PosX","index":21},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"Default Transitions","name":"transition-Default-Rot","displayName":"Rot","editorName":"Transition Default|Rot","index":22},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To Default","name":"to-Default","group":"Go to state","index":23},{"plug":"output","type":"boolean","displayName":"At Default","name":"at-Default","group":"Current state","index":24},{"plug":"output","type":"signal","displayName":"Has Reached Default","name":"reached-Default","group":"Current state","index":25},{"plug":"input","type":{"name":"enum","enums":["Start","Default"]},"group":"States","displayName":"State","name":"currentState","default":"Start","index":26}],"children":[]},{"id":"c27207a1-dec3-1dbd-c931-4c85b90b0021","type":"States","x":756.621527876972,"y":3512.8451771496234,"parameters":{"states":"Not Focused,Focused","values":"Text","useTransitions":false,"type-Text":"string","value-Not Focused-Text":"Has Focus (false)","value-Focused-Text":"Has Focus (true)"},"ports":[],"dynamicports":[{"type":{"name":"string","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"Text","index":6},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"Text","name":"type-Text","index":7},{"plug":"input","type":"string","group":"Not Focused Values","name":"value-Not Focused-Text","displayName":"Text","editorName":"Not Focused|Text","index":8},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To Not Focused","name":"to-Not Focused","group":"Go to state","index":9},{"plug":"output","type":"boolean","displayName":"At Not Focused","name":"at-Not Focused","group":"Current state","index":10},{"plug":"output","type":"signal","displayName":"Has Reached Not Focused","name":"reached-Not Focused","group":"Current state","index":11},{"plug":"input","type":"string","group":"Focused Values","name":"value-Focused-Text","displayName":"Text","editorName":"Focused|Text","index":12},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To Focused","name":"to-Focused","group":"Go to state","index":13},{"plug":"output","type":"boolean","displayName":"At Focused","name":"at-Focused","group":"Current state","index":14},{"plug":"output","type":"signal","displayName":"Has Reached Focused","name":"reached-Focused","group":"Current state","index":15},{"plug":"input","type":{"name":"enum","enums":["Not Focused","Focused"]},"group":"States","displayName":"State","name":"currentState","default":"Not Focused","index":16}],"children":[]},{"id":"e055ef90-66f0-6cf9-e6ca-0819d02800eb","type":"/#Avatar Components/[Logic] Name Abbreviation","x":72.20488699585871,"y":548.2511494916077,"parameters":{"Name":"Eric Tuvesson"},"ports":[],"dynamicports":[],"children":[]},{"id":"b686203e-d866-c028-9895-63443dec4aac","type":"JavaScriptFunction","x":133.64630419403926,"y":3920.573713176965,"parameters":{"functionScript":"Outputs.Items = [\n    {\n        Text: \"AA\",\n        Image: undefined,\n    },\n    {\n        Text: \"AA\",\n    },\n    {\n        Text: \"AA\",\n    },\n    {\n        Text: \"AA\",\n    },\n    {\n        Text: \"AA\",\n    },\n    {\n        Text: \"AA\",\n    },\n    {\n        Text: \"AA\",\n    },\n]"},"ports":[],"dynamicports":[{"name":"out-Items","displayName":"Items","plug":"output","type":"*","group":"Outputs","index":4}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"cf68bed5-25b2-4082-8f97-cffcbe7078f8","type":"JavaScriptFunction","x":-6.811628707897739,"y":4104.357509591015,"parameters":{"functionScript":"Outputs.Items = [\n    {\n        Text: \"AA\",\n        Image: \"avatars/avatar-n4KewLKFOZw.jpg\",\n    },\n    {\n        Text: \"AA\",\n        Image: \"avatars/avatar-TW_z_iUD_bQ.jpg\",\n    },\n    {\n        Text: \"AA\",\n        Image: \"avatars/avatar-WNoLnJo7tS8.jpg\",\n    },\n    {\n        Text: \"AA\",\n        Image: \"avatars/avatar-XHVpWcr5grQ.jpg\",\n    },\n    {\n        Text: \"AA\",\n        Image: \"avatars/avatar-ZHvM3XIOHoE.jpg\",\n    },\n    {\n        Text: \"AA\",\n        Image: \"avatars/avatar-TW_z_iUD_bQ.jpg\",\n    },\n    {\n        Text: \"AA\",\n        Image: \"avatars/avatar-ZHvM3XIOHoE.jpg\",\n    },\n]"},"ports":[],"dynamicports":[{"name":"out-Items","displayName":"Items","plug":"output","type":"*","group":"Outputs","index":4}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["659d0c1a-f13a-22b6-9a20-be071720903c"]},"metadata":{"canvasPos":{"x":277.5472369707204,"y":-1657.7164028916382},"canvasSize":{"width":"675px","height":"1446px"}}},{"name":"/App","graph":{"connections":[],"roots":[{"id":"246f9453-a119-ac78-171e-3806cf596ecc","type":"Group","x":-20.468191530129104,"y":322.4376377651178,"parameters":{"styleCss":"overflow: auto;\r\nheight: 100%;"},"ports":[],"dynamicports":[],"children":[{"id":"16773a13-3529-e352-0c1e-c6a0b9a5aeb0","type":"module.inlineHtml","label":"Android Redirect","parameters":{"html":"<!DOCTYPE html>\r\n<html>\r\n<body>\r\n    <script>\r\n        function redirectAndroidUsers() {\r\n            var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n\r\n            // Check if the user agent is Android\r\n            var isAndroid = /android/i.test(userAgent);\r\n\r\n            // Redirect if the user is on Android\r\n            if (isAndroid) {\r\n                window.location.href = \"https://groups.google.com/g/sternerdigital\";\r\n            }\r\n        }\r\n\r\n        // Call the redirect function on page load\r\n        redirectAndroidUsers();\r\n    </script>\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"777fbd5e-cbc3-2ec8-098a-c4c379618f0e","type":"noodl.googleAnalyticsModule.analyticsLoader","parameters":{"allowTracking":true,"measurementId":"G-VXNZSKW0TN"},"ports":[],"dynamicports":[],"children":[]},{"id":"1657787a-055d-fdfd-ac25-856511a03e08","type":"Group","parameters":{"height":{"value":95,"unit":"%","isFixed":true},"alignItems":"center","alignX":"center","maxWidth":{"value":500,"unit":"px"},"minWidth":{"value":50,"unit":"px"},"alignY":"center","scrollEnabled":true,"styleCss":"user-select: none;"},"ports":[],"dynamicports":[],"children":[{"id":"e5b2e6b4-37e4-2ff8-29d8-e5f2a35ae2eb","type":"Router","parameters":{"pages":{"routes":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"startPage":"/Pages/Home"},"name":"Main","clip":"scroll"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"53fe8914-89aa-c50b-7c3d-17da2eed7713","type":"Group","parameters":{"height":{"value":5,"unit":"%","isFixed":true}},"ports":[],"dynamicports":[],"children":[{"id":"b9e5b7c6-32a3-951f-63f0-54062bbc576c","type":"/Navbar 2.0/navbar2.0","parameters":{},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"a7b7b653-0669-638d-b963-b79a2161925f","type":"CSS Definition","label":"CSS Pop","x":-292.46819153012916,"y":236.4376377651178,"parameters":{"style":".animated {\r\n  opacity: 0;\r\n  transform: scale(0);\r\n  animation: pop-in 0.75s forwards;\r\n}\r\n\r\n@keyframes pop-in {\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n"},"ports":[],"dynamicports":[],"children":[],"metadata":{"merge":{"soureCodePorts":["style"]}}},{"id":"69609786-85e8-8d53-1e11-7c97025b7034","type":"CSS Definition","label":"CSS Fade","x":-290,"y":425,"parameters":{"style":".fade {\r\n  opacity: 0;\r\n  background-color: transparent;  /* Start with a transparent background */\r\n  animation: fade-in 0.5s forwards, background-fade-in 0.5s forwards;\r\n}\r\n\r\n@keyframes fade-in {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes background-fade-in {\r\n  0% {\r\n    background-color: transparent;\r\n  }\r\n  100% {\r\n    background-color: your-desired-color;  /* Replace with your desired background color */\r\n  }\r\n}\r\n"},"ports":[],"dynamicports":[],"children":[],"metadata":{"merge":{"soureCodePorts":["style"]}}},{"id":"580475c7-3907-388a-3241-363f91e89470","type":"CSS Definition","label":"Slide Up","x":-294.3511436475969,"y":341.3282283238384,"parameters":{"style":".slideup {\r\n  opacity: 0;\r\n  transform: translateY(2500px); /* Start with the element positioned below its normal position */\r\n  animation: slide-up 1s forwards;\r\n  animation-delay: 1500ms; /* Add a delay before the animation starts */\r\n}\r\n\r\n@keyframes slide-up {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(100%); /* Start from below */\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0); /* End at its normal position */\r\n  }\r\n}\r\n"},"ports":[],"dynamicports":[],"children":[],"metadata":{"merge":{"soureCodePorts":["style"]}}}],"visualRoots":["246f9453-a119-ac78-171e-3806cf596ecc"]},"metadata":{"canvasSize":{"width":"1039px","height":"751px"},"canvasPos":{"x":0,"y":0}}},{"name":"/Collection Pages/Bugs/bug-splash","id":"3bb6982e-fadd-ddc1-a87c-bf78f317dd4d","graph":{"connections":[{"fromId":"b61be554-9b90-a3c1-8018-2741bc78da8e","fromProperty":"out-Success","toId":"31b69489-677b-b14b-3ee0-846834a65ae2","toProperty":"play"}],"roots":[{"id":"4af82c80-4d49-3142-876b-575e87c92dcf","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"c8768c63-430f-e99b-63a1-32a566ee068e","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"ab889d95-3538-b4a8-07e2-3c3eba1c4b5f","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #e9cb68; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/bugs.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"7b6f9543-8d43-368b-a1f6-4adb1479831a","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"31b69489-677b-b14b-3ee0-846834a65ae2","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"b61be554-9b90-a3c1-8018-2741bc78da8e","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["4af82c80-4d49-3142-876b-575e87c92dcf"]}},{"name":"/Collection Pages/Bugs/Bugs","id":"87051c85-6c88-4d57-dc98-b2d011a095f0","graph":{"connections":[{"fromId":"23ddd92c-30c5-3df0-e1b6-dc650b98af44","fromProperty":"items","toId":"e9f5d1e5-1217-0b89-101a-984c8874972b","toProperty":"items"},{"fromId":"103736ef-2c7f-4539-0ddd-1fd1caec9227","fromProperty":"out-CountText","toId":"7098f862-cae9-644c-427f-ae3ccc516dc2","toProperty":"text"},{"fromId":"0f9b8942-80d3-5dfa-7ff9-df288ed04986","fromProperty":"onClick","toId":"f75c2e2d-ac39-9e2c-c1e8-4d5df2a363c2","toProperty":"navigate"},{"fromId":"41f13078-879f-713e-b94e-7fbf32e21cf1","fromProperty":"onClick","toId":"58b1a823-354f-a194-ab82-99dd38361bc6","toProperty":"navigate"},{"fromId":"403b577d-d858-6884-a640-6a2eca525fe1","fromProperty":"onClick","toId":"60f803dd-6a60-ddd7-695e-b2027adac164","toProperty":"navigate"},{"fromId":"e6aa2778-5dde-1fc7-1445-967915ba6b26","fromProperty":"onClick","toId":"8e222082-b480-db51-0425-180921a11f3c","toProperty":"navigate"},{"fromId":"0f9b8942-80d3-5dfa-7ff9-df288ed04986","fromProperty":"onClick","toId":"4a8aef2e-7909-5dad-b613-7e768235ea8b","toProperty":"run"},{"fromId":"41f13078-879f-713e-b94e-7fbf32e21cf1","fromProperty":"onClick","toId":"4a8aef2e-7909-5dad-b613-7e768235ea8b","toProperty":"run"},{"fromId":"403b577d-d858-6884-a640-6a2eca525fe1","fromProperty":"onClick","toId":"4a8aef2e-7909-5dad-b613-7e768235ea8b","toProperty":"run"}],"roots":[{"id":"c081394a-b310-21e4-b8e0-57aaf84b9f3e","type":"Page","x":0,"y":0,"parameters":{"cssClassName":""},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Bugs","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"bugs","index":32}],"children":[{"id":"1651ceff-1378-b37f-e8aa-720a46c0a3d1","type":"Group","parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"876df58a-600e-865b-9227-3453b0419e4a","type":"/Collection Pages/Bugs/bug-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a014d958-2443-11e1-95be-7cebe544f8e0","type":"Group","parameters":{"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"e35c6a96-cf5a-48fb-fe9a-f2b46dc10054","type":"module.inlineHtml","label":"Bugs Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/bugs.png'),\r\n    url('/images/background/bugs.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"7da6d925-2ab4-e4be-2b33-fd7d59b8dedc","type":"Group","label":"Bugs Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"7098f862-cae9-644c-427f-ae3ccc516dc2","type":"Text","label":"","parameters":{"text":"Bugs Progress","textStyle":"Title Medium","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#d4e2bf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"5b573841-d803-2fcf-8d6f-a5b4dc87e06e","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":20,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#d4e2bf","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"664c0d76-a39f-7391-d9be-a42f07f8f82f","type":"Group","label":"Bugs Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d0b194c5-b9a9-a9c5-2d75-d3aef8685a83","type":"Image","label":"Bugs","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/swallow_tail_butterfly.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"17b2a107-728d-d597-51d7-20bfcb2c0971","type":"Text","label":"","parameters":{"text":"All Bugs","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ddcf9531-1b6b-bfe4-b76a-cb73be81777f","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"0f9b8942-80d3-5dfa-7ff9-df288ed04986","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"41f13078-879f-713e-b94e-7fbf32e21cf1","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"403b577d-d858-6884-a640-6a2eca525fe1","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e6aa2778-5dde-1fc7-1445-967915ba6b26","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e9f5d1e5-1217-0b89-101a-984c8874972b","type":"For Each","parameters":{"template":"/Collection Pages/Bugs/Bugs Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"1f0caf2a-44d3-dbe3-f11a-6f643683ac44","type":"PageInputs","x":-427,"y":220,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"23ddd92c-30c5-3df0-e1b6-dc650b98af44","type":"Collection2","label":"Bugs Array","x":-283,"y":479,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"bugs-0001\",\r\n    \"Label\": \"Ant\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ant_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0002\",\r\n    \"Label\": \"Bagworm\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bagworm_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"OC-MR\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0003\",\r\n    \"Label\": \"Banded dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Banded_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"4,500\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0004\",\r\n    \"Label\": \"Bee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bee_PG_Icon.png\",\r\n    \"Price\": \"4,500\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0005\",\r\n    \"Label\": \"Bell cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bell_Cricket_PG_Icon.png\",\r\n    \"Price\": \"430\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"5PM–8AM\",\r\n    \"Months\": \"SE-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0006\",\r\n    \"Label\": \"Brown cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Brown_Cicada_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0007\",\r\n    \"Label\": \"Cockroach\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Cockroach_PG_Icon.png\",\r\n    \"Price\": \"5\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0008\",\r\n    \"Label\": \"Common butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Common_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0009\",\r\n    \"Label\": \"Common dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Common_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MA-JL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0010\",\r\n    \"Label\": \"Cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Cricket_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"5PM–8AM\",\r\n    \"Months\": \"SE-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0011\",\r\n    \"Label\": \"Darner dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Darner_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0012\",\r\n    \"Label\": \"Drone beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Drone_Beetle_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0013\",\r\n    \"Label\": \"Dynastid beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Dynastid_Beetle_PG_Icon.png\",\r\n    \"Price\": \"1,350\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0014\",\r\n    \"Label\": \"Evening cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Evening_Cicada_PG_Icon.png\",\r\n    \"Price\": \"850\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"4AM–8AM & 4PM–7PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0015\",\r\n    \"Label\": \"Firefly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Firefly_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"7PM–4AM\",\r\n    \"Months\": \"JN\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0016\",\r\n    \"Label\": \"Flat Stag Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Flat_Stag_Beetle_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM-8AM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0017\",\r\n    \"Label\": \"Giant beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Giant_Beetle_PG_Icon.png\",\r\n    \"Price\": \"10,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"11PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0018\",\r\n    \"Label\": \"Grasshopper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Grasshopper_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0019\",\r\n    \"Label\": \"Jewel Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Jewel_Beetle_PG_Icon.png\",\r\n    \"Price\": \"3,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0020\",\r\n    \"Label\": \"Ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0021\",\r\n    \"Label\": \"Long locust\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Long_Locust_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0022\",\r\n    \"Label\": \"Longhorn beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Longhorn_Beetle_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0023\",\r\n    \"Label\": \"Mantis\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mantis_PG_Icon.png\",\r\n    \"Price\": \"430\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"bugs-0024\",\r\n    \"Label\": \"Migratory locust\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Migratory_Locust_PG_Icon.png\",\r\n    \"Price\": \"1,350\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"SE-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0025\",\r\n    \"Label\": \"Mole cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mole_Cricket_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NO-MA\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0026\",\r\n    \"Label\": \"Mosquito\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mosquito_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"5PM–11PM\",\r\n    \"Months\": \"MA-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0027\",\r\n    \"Label\": \"Mountain Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mountain_Beetle_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0028\",\r\n    \"Label\": \"Pill bug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pill_Bug_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0029\",\r\n    \"Label\": \"Pine Cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pine_Cricket_PG_Icon.png\",\r\n    \"Price\": \"100\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"5PM–8AM\",\r\n    \"Months\": \"SE-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0030\",\r\n    \"Label\": \"Pond skater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pond_Skater_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–7PM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0031\",\r\n    \"Label\": \"Purple Butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Purple_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0032\",\r\n    \"Label\": \"Red dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Red_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM-7PM\",\r\n    \"Months\": \"SE-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0033\",\r\n    \"Label\": \"Robust cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Robust_Cicada_PG_Icon.png\",\r\n    \"Price\": \"300\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0034\",\r\n    \"Label\": \"Saw Stag Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Saw_Stag_Beetle_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0035\",\r\n    \"Label\": \"Snail\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Snail_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Rain only\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0036\",\r\n    \"Label\": \"Spider\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Spider_PG_Icon.png\",\r\n    \"Price\": \"300\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0037\",\r\n    \"Label\": \"Spotted ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Spotted_Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0038\",\r\n    \"Label\": \"Tiger butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Tiger_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"AP-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0039\",\r\n    \"Label\": \"Walker cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Walker_Cicada_PG_Icon.png\",\r\n    \"Price\": \"400\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"JL-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0040\",\r\n    \"Label\": \"Yellow butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Yellow_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"103736ef-2c7f-4539-0ddd-1fd1caec9227","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-267,"y":102,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('bugs-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"f75c2e2d-ac39-9e2c-c1e8-4d5df2a363c2","type":"RouterNavigate","x":335,"y":561,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Spring Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"58b1a823-354f-a194-ab82-99dd38361bc6","type":"RouterNavigate","x":339,"y":655,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Summer Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"60f803dd-6a60-ddd7-695e-b2027adac164","type":"RouterNavigate","x":335,"y":753,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Fall Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"8e222082-b480-db51-0425-180921a11f3c","type":"RouterNavigate","x":336,"y":849,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Winter Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"4af4881c-75eb-0dee-25a7-6c6251946141","type":"JavaScriptFunction","label":"Play Audio File","x":-275,"y":-95,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4a8aef2e-7909-5dad-b613-7e768235ea8b","type":"JavaScriptFunction","label":"Play Audio File","x":-362,"y":789,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["c081394a-b310-21e4-b8e0-57aaf84b9f3e"]}},{"name":"/Collection Pages/Bugs/Bugs Logic","id":"36f92cbf-2c29-2105-0c9d-caa3ce638d21","graph":{"connections":[{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-ID","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-ID"},{"fromId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","fromProperty":"out-ID","toId":"334b7234-d034-11d3-c0e1-1dda392a5c5d","toProperty":"modelId"},{"fromId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","fromProperty":"out-Checked","toId":"334b7234-d034-11d3-c0e1-1dda392a5c5d","toProperty":"prop-Checked"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Label","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Label"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"id","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-ID"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"prop-Label","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-Label"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"prop-Image","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-Icon"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Label","toId":"db724bfa-eb62-17b5-6e80-ed0d78d59b10","toProperty":"text"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Icon","toId":"9a868cd6-9a32-c40f-b900-1631c2dfb8fb","toProperty":"src"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Price","toId":"8cb5b4cb-c7f0-37c1-24ca-0ec4b6549526","toProperty":"text"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"prop-Checked","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-Checked"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"prop-Price","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-Price"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Weather","toId":"0fcc9937-55e2-9e4d-4cd7-0ed737cd891a","toProperty":"text"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Time","toId":"c9514192-d99e-c017-a93e-3156a0d72a4c","toProperty":"text"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Months","toId":"e8be92e7-7360-9381-f6fd-db8d4860ee0b","toProperty":"text"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Price","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Price"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Icon","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Icon"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"prop-Weather","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-Weather"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"prop-Time","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-Time"},{"fromId":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","fromProperty":"prop-Months","toId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","toProperty":"in-Months"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Weather","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Weather"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Time","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Time"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Months","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Months"},{"fromId":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","fromProperty":"out-Checked","toId":"ec603129-b169-e42c-76e8-8539e7620c4c","toProperty":"checked"},{"fromId":"ec603129-b169-e42c-76e8-8539e7620c4c","fromProperty":"checked","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Checked"},{"fromId":"ec603129-b169-e42c-76e8-8539e7620c4c","fromProperty":"onChange","toId":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","toProperty":"in-Changed"},{"fromId":"ec603129-b169-e42c-76e8-8539e7620c4c","fromProperty":"onChange","toId":"334b7234-d034-11d3-c0e1-1dda392a5c5d","toProperty":"store"},{"fromId":"ec603129-b169-e42c-76e8-8539e7620c4c","fromProperty":"onChange","toId":"31c1652a-d09b-126a-54fa-1ab7552e2dca","toProperty":"run"}],"roots":[{"id":"361cbe1c-36d2-355d-5557-51507c45fe12","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1770bd68-9af9-ff35-480e-ca3131be426a","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7cf61120-7291-92d5-430a-632bbed034db","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"4d241888-81a3-2ba9-05ea-82b37865666e","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"63dee25b-2c1f-7f0c-444b-92d5ff0fed29","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"93770f1a-fda2-7055-6e3b-1c43b3bd10c6","type":"Text","parameters":{"text":"Donated","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f6badb8e-2a24-19ad-e629-bd856593b319","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2f1984a3-c17b-a81f-7119-dc6b320f93ad","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"9a868cd6-9a32-c40f-b900-1631c2dfb8fb","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":32,"unit":"px"},"maxWidth":{"value":32,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"alignX":"center","marginTop":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"db724bfa-eb62-17b5-6e80-ed0d78d59b10","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"marginTop":{"value":4,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"8cb5b4cb-c7f0-37c1-24ca-0ec4b6549526","type":"Text","parameters":{"text":"Price","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"textAlignX":"center","marginTop":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"9e89dfb8-d53a-fc00-d62d-d51b6089f563","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":75,"unit":"px"},"marginTop":{"value":-10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ec603129-b169-e42c-76e8-8539e7620c4c","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/owl.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"8c4eff16-4d5b-2852-b02e-e7806fb8996c","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b3b0ec79-0875-2774-0a0b-d9e3043b64d0","type":"Text","parameters":{"text":"Time","textAlignX":"center","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"c153de75-b542-9834-8c89-a02fee013ac6","type":"Text","parameters":{"text":"Months","textAlignX":"center","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"15a0edb6-149a-a573-8a37-8c846c278d25","type":"Text","parameters":{"text":"Weather","textAlignX":"center","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"60a9655a-6140-69ca-4b04-71c5c7048cea","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c9514192-d99e-c017-a93e-3156a0d72a4c","type":"Text","parameters":{"text":"Time","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"alignX":"center","textAlignX":"center","marginTop":{"value":10,"unit":"px"},"wordBreak":"break-all"},"ports":[],"dynamicports":[],"children":[]},{"id":"e8be92e7-7360-9381-f6fd-db8d4860ee0b","type":"Text","parameters":{"text":"Months","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"alignX":"center","alignY":"top","marginTop":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"0fcc9937-55e2-9e4d-4cd7-0ed737cd891a","type":"Text","parameters":{"text":"Weather","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"alignX":"center","marginTop":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"9aa4b6c5-13fd-1f52-08fb-78f90f075e8b","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,Weather,Time,Months,Season"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Weather","displayName":"Weather","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Weather Changed","name":"changed-Weather","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Time","displayName":"Time","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Time Changed","name":"changed-Time","index":20},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Months","displayName":"Months","index":21},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Months Changed","name":"changed-Months","index":22},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Season","displayName":"Season","index":23},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Season Changed","name":"changed-Season","index":24}],"children":[]},{"id":"334b7234-d034-11d3-c0e1-1dda392a5c5d","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"f999b6af-8c97-d18f-822a-64bc3cd57bbb","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Weather","displayName":"Weather","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Weather","displayName":"Weather","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d1cd3541-0fff-57fa-a3ff-2b22bad211c4","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst weather = Inputs.Weather || ''; // Added weather\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\nconst season = Inputs.Season || ''; // Added season\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.weather !== selection.weather ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months ||\r\n                    existingItem.season !== selection.season) { // Added season check\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Weather = weather; // Added weather\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Season = season; // Added season\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, weather, time, months, season }; // Added season\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Weather","displayName":"Weather","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":12},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":13},{"name":"in-Season","displayName":"Season","plug":"input","type":"*","group":"Inputs","index":14},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":15},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":16},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":24},{"name":"out-Weather","displayName":"Weather","plug":"output","type":"*","group":"Outputs","index":25},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":26},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":27},{"name":"out-Season","displayName":"Season","plug":"output","type":"*","group":"Outputs","index":28}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"31c1652a-d09b-126a-54fa-1ab7552e2dca","type":"JavaScriptFunction","label":"Play Audio File","x":467,"y":781,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["361cbe1c-36d2-355d-5557-51507c45fe12"]}},{"name":"/Collection Pages/Bugs/Bugs Logic/Options","id":"2da1498b-f0bd-1f61-3d74-4a6956bcaf86","graph":{"connections":[{"fromId":"2b40a527-e9c7-52b0-01e3-8cce097fb7f4","fromProperty":"id","toId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","toProperty":"in-ID"},{"fromId":"2b40a527-e9c7-52b0-01e3-8cce097fb7f4","fromProperty":"prop-Label","toId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","toProperty":"in-Label"},{"fromId":"2b40a527-e9c7-52b0-01e3-8cce097fb7f4","fromProperty":"prop-Checked","toId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","toProperty":"in-Checked"},{"fromId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","fromProperty":"out-ID","toId":"85a7c883-b307-cbd5-bc03-401f63f39b66","toProperty":"in-ID"},{"fromId":"85a7c883-b307-cbd5-bc03-401f63f39b66","fromProperty":"out-ID","toId":"e4dba217-2ff8-62fb-bc88-f6f37d5e1247","toProperty":"modelId"},{"fromId":"85a7c883-b307-cbd5-bc03-401f63f39b66","fromProperty":"out-Checked","toId":"e4dba217-2ff8-62fb-bc88-f6f37d5e1247","toProperty":"prop-Checked"},{"fromId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","fromProperty":"out-Label","toId":"85a7c883-b307-cbd5-bc03-401f63f39b66","toProperty":"in-Label"},{"fromId":"2b40a527-e9c7-52b0-01e3-8cce097fb7f4","fromProperty":"prop-Icon","toId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","toProperty":"in-Icon"},{"fromId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","fromProperty":"out-Icon","toId":"85a7c883-b307-cbd5-bc03-401f63f39b66","toProperty":"in-Icon"},{"fromId":"e4dba217-2ff8-62fb-bc88-f6f37d5e1247","fromProperty":"stored","toId":"8707d727-4fde-4c09-d515-0b9abe653cc1","toProperty":"Selection Changed"},{"fromId":"9c387371-9b91-f6e3-1c0f-bca78260f3d3","fromProperty":"onChange","toId":"e4dba217-2ff8-62fb-bc88-f6f37d5e1247","toProperty":"store"},{"fromId":"9c387371-9b91-f6e3-1c0f-bca78260f3d3","fromProperty":"onChange","toId":"85a7c883-b307-cbd5-bc03-401f63f39b66","toProperty":"in-Changed"},{"fromId":"9c387371-9b91-f6e3-1c0f-bca78260f3d3","fromProperty":"checked","toId":"85a7c883-b307-cbd5-bc03-401f63f39b66","toProperty":"in-Checked"},{"fromId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","fromProperty":"out-Checked","toId":"9c387371-9b91-f6e3-1c0f-bca78260f3d3","toProperty":"checked"},{"fromId":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","fromProperty":"out-Label","toId":"9c387371-9b91-f6e3-1c0f-bca78260f3d3","toProperty":"label"}],"roots":[{"id":"a2716655-2805-1782-a132-a52d015381bf","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"9c387371-9b91-f6e3-1c0f-bca78260f3d3","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"2b40a527-e9c7-52b0-01e3-8cce097fb7f4","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"e4dba217-2ff8-62fb-bc88-f6f37d5e1247","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"e8cf0d92-2f45-e17a-5ac9-6aacc2c2215c","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"85a7c883-b307-cbd5-bc03-401f63f39b66","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"8707d727-4fde-4c09-d515-0b9abe653cc1","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["a2716655-2805-1782-a132-a52d015381bf"]}},{"name":"/Collection Pages/Bugs/Fall Bugs","id":"1639eeeb-abbe-25bb-1e4e-b3f65ee50b42","graph":{"connections":[{"fromId":"e1228e15-f513-fafb-ea8e-907b6ab54bf1","fromProperty":"items","toId":"08a6b09e-e98f-7cfa-a65b-5dd9562648a7","toProperty":"items"},{"fromId":"48c74d7b-209f-7425-d4f8-6bb794b4d9b5","fromProperty":"out-CountText","toId":"7aa021a3-ff3d-cbbe-b394-819abaea6247","toProperty":"text"},{"fromId":"04f40b5e-a753-7024-8e33-365eede19706","fromProperty":"onClick","toId":"5a76a3e6-767e-637e-fe26-591a4dac81b5","toProperty":"navigate"},{"fromId":"dd61fe18-d16e-bd56-9138-497ebb0c190a","fromProperty":"onClick","toId":"b3751fa3-a2af-5569-23c6-f0e20fa35ef9","toProperty":"navigate"},{"fromId":"bb6fd2d3-b863-ae5f-a2a7-0d554442121f","fromProperty":"onClick","toId":"96d572d7-d4cb-3e24-7ea4-fc35bb9b32d9","toProperty":"navigate"},{"fromId":"04f40b5e-a753-7024-8e33-365eede19706","fromProperty":"onClick","toId":"58cb2bed-5d34-b2dc-d1db-276715e77c3d","toProperty":"run"},{"fromId":"dd61fe18-d16e-bd56-9138-497ebb0c190a","fromProperty":"onClick","toId":"58cb2bed-5d34-b2dc-d1db-276715e77c3d","toProperty":"run"},{"fromId":"bb6fd2d3-b863-ae5f-a2a7-0d554442121f","fromProperty":"onClick","toId":"58cb2bed-5d34-b2dc-d1db-276715e77c3d","toProperty":"run"},{"fromId":"b9cac0f7-ddec-e7e6-509f-34b692e9d26c","fromProperty":"onClick","toId":"37da69d4-f836-8367-1ef3-58be10ca7174","toProperty":"navigate"},{"fromId":"b9cac0f7-ddec-e7e6-509f-34b692e9d26c","fromProperty":"onClick","toId":"58cb2bed-5d34-b2dc-d1db-276715e77c3d","toProperty":"run"}],"roots":[{"id":"b3d6eac0-86ee-82a1-71c9-6fe9879bcdfd","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Fall Bugs","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"fall-bugs","index":32}],"children":[{"id":"6f7ab03d-13cb-234b-6520-6cce19d72fbb","type":"module.inlineHtml","label":"Bugs Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/bugs.png'),\r\n    url('/images/background/bugs.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"8175593d-5954-f7f0-c7ea-ca723b444768","type":"Group","label":"Bugs Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"7aa021a3-ff3d-cbbe-b394-819abaea6247","type":"Text","label":"","parameters":{"text":"Bugs Progress","textStyle":"Title Medium","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#d4e2bf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b6661848-0e90-d17d-a5dd-9c1b6d8f1a97","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":20,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#d4e2bf","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c95ac06c-0206-02f2-e489-05823643dae3","type":"Group","label":"Bugs Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"68f77e59-d682-28d3-c7d7-106d0505602e","type":"Image","label":"Bugs","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/swallow_tail_butterfly.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"3bf28ef2-83de-5725-7887-557d51cc2e59","type":"Text","label":"","parameters":{"text":"Fall Bugs","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"18235ab4-8e5e-2c52-85a1-0ecb1d8ed1a9","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"04f40b5e-a753-7024-8e33-365eede19706","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"dd61fe18-d16e-bd56-9138-497ebb0c190a","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"b9cac0f7-ddec-e7e6-509f-34b692e9d26c","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderRadius":{"value":0,"unit":"px"},"enabled":true},"ports":[],"dynamicports":[],"children":[]},{"id":"bb6fd2d3-b863-ae5f-a2a7-0d554442121f","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"08a6b09e-e98f-7cfa-a65b-5dd9562648a7","type":"For Each","parameters":{"template":"/Collection Pages/Bugs/Bugs Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]},{"id":"b21a1d98-e8fa-3aef-d073-4458a9728f90","type":"PageInputs","x":-427,"y":220,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"e1228e15-f513-fafb-ea8e-907b6ab54bf1","type":"Collection2","label":"Fall Bugs","x":-283,"y":479,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"bugs-0001\",\r\n    \"Label\": \"Ant\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ant_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0002\",\r\n    \"Label\": \"Bagworm\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bagworm_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"OC-MR\",\r\n    \"Season\": \"Autumn, Winter, Spring\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0004\",\r\n    \"Label\": \"Bee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bee_PG_Icon.png\",\r\n    \"Price\": \"4,500\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0005\",\r\n    \"Label\": \"Bell cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bell_Cricket_PG_Icon.png\",\r\n    \"Price\": \"430\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"5PM–8AM\",\r\n    \"Months\": \"SE-OC\",\r\n    \"Season\": \"Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0007\",\r\n    \"Label\": \"Cockroach\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Cockroach_PG_Icon.png\",\r\n    \"Price\": \"5\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0008\",\r\n    \"Label\": \"Common butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Common_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0010\",\r\n    \"Label\": \"Cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Cricket_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"5PM–8AM\",\r\n    \"Months\": \"SE-NO\",\r\n    \"Season\": \"Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0018\",\r\n    \"Label\": \"Grasshopper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Grasshopper_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-SE\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0020\",\r\n    \"Label\": \"Ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0021\",\r\n    \"Label\": \"Long locust\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Long_Locust_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-NO\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0023\",\r\n    \"Label\": \"Mantis\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mantis_PG_Icon.png\",\r\n    \"Price\": \"430\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-OC\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0024\",\r\n    \"Label\": \"Migratory locust\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Migratory_Locust_PG_Icon.png\",\r\n    \"Price\": \"1,350\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"SE-NO\",\r\n    \"Season\": \"Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0025\",\r\n    \"Label\": \"Mole cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mole_Cricket_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NO-MA\",\r\n    \"Season\": \"Autumn, Winter, Spring\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0026\",\r\n    \"Label\": \"Mosquito\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mosquito_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"5PM–11PM\",\r\n    \"Months\": \"MA-SE\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0028\",\r\n    \"Label\": \"Pill bug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pill_Bug_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0029\",\r\n    \"Label\": \"Pine Cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pine_Cricket_PG_Icon.png\",\r\n    \"Price\": \"100\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"5PM–8AM\",\r\n    \"Months\": \"SE-OC\",\r\n    \"Season\": \"Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0030\",\r\n    \"Label\": \"Pond skater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pond_Skater_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–7PM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0032\",\r\n    \"Label\": \"Red dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Red_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM-7PM\",\r\n    \"Months\": \"SE-OC\",\r\n    \"Season\": \"Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0037\",\r\n    \"Label\": \"Spotted ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Spotted_Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0038\",\r\n    \"Label\": \"Tiger butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Tiger_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"AP-SE\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0039\",\r\n    \"Label\": \"Walker cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Walker_Cicada_PG_Icon.png\",\r\n    \"Price\": \"400\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"JL-SE\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0040\",\r\n    \"Label\": \"Yellow butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Yellow_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"48c74d7b-209f-7425-d4f8-6bb794b4d9b5","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-277,"y":39,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('bugs-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5a76a3e6-767e-637e-fe26-591a4dac81b5","type":"RouterNavigate","x":335,"y":561,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Spring Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"b3751fa3-a2af-5569-23c6-f0e20fa35ef9","type":"RouterNavigate","x":339,"y":655,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Summer Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"96d572d7-d4cb-3e24-7ea4-fc35bb9b32d9","type":"RouterNavigate","x":336,"y":849,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Winter Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"58cb2bed-5d34-b2dc-d1db-276715e77c3d","type":"JavaScriptFunction","label":"Play Audio File","x":-260,"y":732,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"37da69d4-f836-8367-1ef3-58be10ca7174","type":"RouterNavigate","x":344,"y":760,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["b3d6eac0-86ee-82a1-71c9-6fe9879bcdfd"]}},{"name":"/Collection Pages/Bugs/Spring Bugs","id":"79ea4086-b134-226a-e80c-fe91c447f868","graph":{"connections":[{"fromId":"31db75fa-71ce-f376-0a41-1a708a6e5172","fromProperty":"items","toId":"51ed7943-85bf-6a04-cfd3-2ece0fb77e46","toProperty":"items"},{"fromId":"a7a4c000-27da-ab5f-3c6f-426953c80b0a","fromProperty":"out-CountText","toId":"9cd9dd55-b324-55bd-09c2-22a808f2c44c","toProperty":"text"},{"fromId":"d288ce83-7aa6-1206-91f4-8a6031aa1d62","fromProperty":"onClick","toId":"0ef7507a-2254-40ef-f5c8-490f616be2d2","toProperty":"navigate"},{"fromId":"fb836366-0cbf-d03a-ed7a-c609ea1ac2ad","fromProperty":"onClick","toId":"08ff4948-caf9-8763-5958-af84fe51e4ff","toProperty":"navigate"},{"fromId":"f9889c28-1339-e63d-e799-3e22250f54db","fromProperty":"onClick","toId":"c0bc70bb-b042-97a9-d142-7b2135ec8c6a","toProperty":"navigate"},{"fromId":"d288ce83-7aa6-1206-91f4-8a6031aa1d62","fromProperty":"onClick","toId":"45d6fc0b-92ca-0072-c2a1-5bd8c694d894","toProperty":"run"},{"fromId":"fb836366-0cbf-d03a-ed7a-c609ea1ac2ad","fromProperty":"onClick","toId":"45d6fc0b-92ca-0072-c2a1-5bd8c694d894","toProperty":"run"},{"fromId":"f9889c28-1339-e63d-e799-3e22250f54db","fromProperty":"onClick","toId":"45d6fc0b-92ca-0072-c2a1-5bd8c694d894","toProperty":"run"},{"fromId":"8a51c372-352a-cdda-bbc4-355d298ab7fb","fromProperty":"onClick","toId":"df8b6a13-6838-49e9-7fce-e3cf7e07f7c0","toProperty":"navigate"},{"fromId":"8a51c372-352a-cdda-bbc4-355d298ab7fb","fromProperty":"onClick","toId":"45d6fc0b-92ca-0072-c2a1-5bd8c694d894","toProperty":"run"}],"roots":[{"id":"21e4cc88-648a-d7e8-7df8-63efbc27098a","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Spring Bugs","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"spring-bugs","index":32}],"children":[{"id":"69c3c3a3-c608-9311-2588-b273485dcea5","type":"module.inlineHtml","label":"Bugs Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/bugs.png'),\r\n    url('/images/background/bugs.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"353f0af6-1ba8-e6ed-6d02-fbe3aac45fd7","type":"Group","label":"Bugs Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"9cd9dd55-b324-55bd-09c2-22a808f2c44c","type":"Text","label":"","parameters":{"text":"Bugs Progress","textStyle":"Title Medium","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#d4e2bf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e31959f8-c0d2-01da-9d62-7359fca32b62","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":20,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#d4e2bf","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1add257c-97a3-edad-981a-40a635fb277f","type":"Group","label":"Bugs Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"028aa172-f0bd-965b-da1d-f2be0d8dbec0","type":"Image","label":"Bugs","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/swallow_tail_butterfly.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"a0dc8009-4294-d0c9-7a8d-11521ea23f26","type":"Text","label":"","parameters":{"text":"Spring Bugs","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"40389c26-4507-1d8e-593e-ae66da380071","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"8a51c372-352a-cdda-bbc4-355d298ab7fb","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"},"enabled":true},"ports":[],"dynamicports":[],"children":[]},{"id":"d288ce83-7aa6-1206-91f4-8a6031aa1d62","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"fb836366-0cbf-d03a-ed7a-c609ea1ac2ad","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"f9889c28-1339-e63d-e799-3e22250f54db","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"51ed7943-85bf-6a04-cfd3-2ece0fb77e46","type":"For Each","parameters":{"template":"/Collection Pages/Bugs/Bugs Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]},{"id":"751525cd-5c53-6742-f234-be35a757d7b0","type":"PageInputs","x":-427,"y":220,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"31db75fa-71ce-f376-0a41-1a708a6e5172","type":"Collection2","label":"Spring Bugs","x":-287,"y":889,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"bugs-0001\",\r\n    \"Label\": \"Ant\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ant_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0002\",\r\n    \"Label\": \"Bagworm\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bagworm_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"OC-MR\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0004\",\r\n    \"Label\": \"Bee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bee_PG_Icon.png\",\r\n    \"Price\": \"4,500\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0007\",\r\n    \"Label\": \"Cockroach\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Cockroach_PG_Icon.png\",\r\n    \"Price\": \"5\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0008\",\r\n    \"Label\": \"Common butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Common_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0009\",\r\n    \"Label\": \"Common dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Common_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MA-JL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0020\",\r\n    \"Label\": \"Ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0025\",\r\n    \"Label\": \"Mole cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mole_Cricket_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NO-MA\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0026\",\r\n    \"Label\": \"Mosquito\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mosquito_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"5PM–11PM\",\r\n    \"Months\": \"MA-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0028\",\r\n    \"Label\": \"Pill bug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pill_Bug_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0035\",\r\n    \"Label\": \"Snail\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Snail_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Rain only\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0036\",\r\n    \"Label\": \"Spider\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Spider_PG_Icon.png\",\r\n    \"Price\": \"300\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0037\",\r\n    \"Label\": \"Spotted ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Spotted_Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0038\",\r\n    \"Label\": \"Tiger butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Tiger_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"AP-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0040\",\r\n    \"Label\": \"Yellow butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Yellow_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"a7a4c000-27da-ab5f-3c6f-426953c80b0a","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-277,"y":39,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('bugs-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"0ef7507a-2254-40ef-f5c8-490f616be2d2","type":"RouterNavigate","x":339,"y":655,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Summer Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"08ff4948-caf9-8763-5958-af84fe51e4ff","type":"RouterNavigate","x":335,"y":753,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Fall Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"c0bc70bb-b042-97a9-d142-7b2135ec8c6a","type":"RouterNavigate","x":336,"y":849,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Winter Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"45d6fc0b-92ca-0072-c2a1-5bd8c694d894","type":"JavaScriptFunction","label":"Play Audio File","x":-359,"y":709,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"df8b6a13-6838-49e9-7fce-e3cf7e07f7c0","type":"RouterNavigate","x":353,"y":589,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["21e4cc88-648a-d7e8-7df8-63efbc27098a"]}},{"name":"/Collection Pages/Bugs/Summer Bugs","id":"d2b7b097-ff65-2c47-cf17-923a1bc64c0b","graph":{"connections":[{"fromId":"3dec9cdd-372d-0b08-717e-726fb21fb6c3","fromProperty":"items","toId":"57b0e6c2-915c-9a1c-d5b6-00cc0523b769","toProperty":"items"},{"fromId":"4e29df95-12bd-02ad-4004-dd1d95471dac","fromProperty":"out-CountText","toId":"fd11459c-2f93-d7b4-144c-a42bbb8ca6b9","toProperty":"text"},{"fromId":"6c059259-088e-8f9e-6f81-9fd682edb0bf","fromProperty":"onClick","toId":"adbaf9bd-0900-3af9-802a-a2814ef3ca0d","toProperty":"navigate"},{"fromId":"251cbaca-2166-f611-b852-c19dddad7c39","fromProperty":"onClick","toId":"528ec59f-d837-69c1-0e1f-a3187ab89a7a","toProperty":"navigate"},{"fromId":"2f9c7b1a-68c3-488e-02bf-f3b48b1fdcb2","fromProperty":"onClick","toId":"f5eacba7-bc47-dee0-f2b9-41243d1c3df1","toProperty":"navigate"},{"fromId":"6c059259-088e-8f9e-6f81-9fd682edb0bf","fromProperty":"onClick","toId":"05c62ada-b37a-6f38-c001-42c42a5d9311","toProperty":"run"},{"fromId":"251cbaca-2166-f611-b852-c19dddad7c39","fromProperty":"onClick","toId":"05c62ada-b37a-6f38-c001-42c42a5d9311","toProperty":"run"},{"fromId":"2f9c7b1a-68c3-488e-02bf-f3b48b1fdcb2","fromProperty":"onClick","toId":"05c62ada-b37a-6f38-c001-42c42a5d9311","toProperty":"run"},{"fromId":"214fe1ca-97a3-0094-ab87-88e89383c078","fromProperty":"onClick","toId":"f2dc9f96-888a-5bc1-8e39-44fb5f3d7129","toProperty":"navigate"},{"fromId":"214fe1ca-97a3-0094-ab87-88e89383c078","fromProperty":"onClick","toId":"05c62ada-b37a-6f38-c001-42c42a5d9311","toProperty":"run"}],"roots":[{"id":"d84d648b-14c8-9ad9-667d-fd860a9933df","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Summer Bugs","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"summer-bugs","index":32}],"children":[{"id":"3576da77-fcf2-8261-4db1-fb3386a975d0","type":"module.inlineHtml","label":"Bugs Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/bugs.png'),\r\n    url('/images/background/bugs.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"82323af5-3d68-d4f2-d555-22446b3427ea","type":"Group","label":"Bugs Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"fd11459c-2f93-d7b4-144c-a42bbb8ca6b9","type":"Text","label":"","parameters":{"text":"Bugs Progress","textStyle":"Title Medium","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#d4e2bf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"bb66ede9-a908-5c60-04d7-a4e8dab15cc1","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":20,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#d4e2bf","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"efe06f07-90a2-7b55-195f-3173c62fd058","type":"Group","label":"Bugs Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9ad3b939-7355-5226-a26f-002f74e9d08c","type":"Image","label":"Bugs","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/swallow_tail_butterfly.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"e64a54b7-d8a2-7969-74de-26c30fa9226d","type":"Text","label":"","parameters":{"text":"Summer Bugs","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"51c86c4f-c987-5ddd-7a0c-a4f752553891","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"6c059259-088e-8f9e-6f81-9fd682edb0bf","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"214fe1ca-97a3-0094-ab87-88e89383c078","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderRadius":{"value":0,"unit":"px"},"enabled":true},"ports":[],"dynamicports":[],"children":[]},{"id":"251cbaca-2166-f611-b852-c19dddad7c39","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"2f9c7b1a-68c3-488e-02bf-f3b48b1fdcb2","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"57b0e6c2-915c-9a1c-d5b6-00cc0523b769","type":"For Each","parameters":{"template":"/Collection Pages/Bugs/Bugs Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]},{"id":"40002f7d-dcb3-c8b0-89a4-d8e0aaee2b44","type":"PageInputs","x":-427,"y":220,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"3dec9cdd-372d-0b08-717e-726fb21fb6c3","type":"Collection2","label":"Summer Bugs","x":-291,"y":567,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"bugs-0001\",\r\n    \"Label\": \"Ant\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ant_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0003\",\r\n    \"Label\": \"Banded dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Banded_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"4,500\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0004\",\r\n    \"Label\": \"Bee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bee_PG_Icon.png\",\r\n    \"Price\": \"4,500\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0006\",\r\n    \"Label\": \"Brown cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Brown_Cicada_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0007\",\r\n    \"Label\": \"Cockroach\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Cockroach_PG_Icon.png\",\r\n    \"Price\": \"5\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0008\",\r\n    \"Label\": \"Common butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Common_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0009\",\r\n    \"Label\": \"Common dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Common_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MA-JL\",\r\n    \"Season\": \"Spring, Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0011\",\r\n    \"Label\": \"Darner dragonfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Darner_Dragonfly_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0012\",\r\n    \"Label\": \"Drone beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Drone_Beetle_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0013\",\r\n    \"Label\": \"Dynastid beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Dynastid_Beetle_PG_Icon.png\",\r\n    \"Price\": \"1,350\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0014\",\r\n    \"Label\": \"Evening cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Evening_Cicada_PG_Icon.png\",\r\n    \"Price\": \"850\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"4AM–8AM & 4PM–7PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0015\",\r\n    \"Label\": \"Firefly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Firefly_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"7PM–4AM\",\r\n    \"Months\": \"JN\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0016\",\r\n    \"Label\": \"Flat Stag Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Flat_Stag_Beetle_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM-8AM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0017\",\r\n    \"Label\": \"Giant beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Giant_Beetle_PG_Icon.png\",\r\n    \"Price\": \"10,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"11PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0018\",\r\n    \"Label\": \"Grasshopper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Grasshopper_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-SE\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0019\",\r\n    \"Label\": \"Jewel Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Jewel_Beetle_PG_Icon.png\",\r\n    \"Price\": \"3,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0020\",\r\n    \"Label\": \"Ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0021\",\r\n    \"Label\": \"Long locust\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Long_Locust_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-NO\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0022\",\r\n    \"Label\": \"Longhorn beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Longhorn_Beetle_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0023\",\r\n    \"Label\": \"Mantis\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mantis_PG_Icon.png\",\r\n    \"Price\": \"430\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"AU-OC\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0026\",\r\n    \"Label\": \"Mosquito\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mosquito_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"5PM–11PM\",\r\n    \"Months\": \"MA-SE\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0027\",\r\n    \"Label\": \"Mountain Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mountain_Beetle_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0028\",\r\n    \"Label\": \"Pill bug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pill_Bug_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0030\",\r\n    \"Label\": \"Pond skater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pond_Skater_PG_Icon.png\",\r\n    \"Price\": \"130\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–7PM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0031\",\r\n    \"Label\": \"Purple Butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Purple_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0033\",\r\n    \"Label\": \"Robust cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Robust_Cicada_PG_Icon.png\",\r\n    \"Price\": \"300\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0034\",\r\n    \"Label\": \"Saw Stag Beetle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Saw_Stag_Beetle_PG_Icon.png\",\r\n    \"Price\": \"2,000\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"7PM–8AM\",\r\n    \"Months\": \"JL-AU\",\r\n    \"Season\": \"Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0035\",\r\n    \"Label\": \"Snail\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Snail_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Rain only\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Season\": \"Spring, Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0036\",\r\n    \"Label\": \"Spider\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Spider_PG_Icon.png\",\r\n    \"Price\": \"300\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Season\": \"Spring, Summer\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0037\",\r\n    \"Label\": \"Spotted ladybug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Spotted_Ladybug_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–5PM\",\r\n    \"Months\": \"MR-JL & OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0038\",\r\n    \"Label\": \"Tiger butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Tiger_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"AP-SE\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0039\",\r\n    \"Label\": \"Walker cicada\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Walker_Cicada_PG_Icon.png\",\r\n    \"Price\": \"400\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"JL-SE\",\r\n    \"Season\": \"Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0040\",\r\n    \"Label\": \"Yellow butterfly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Yellow_Butterfly_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"8AM–4PM\",\r\n    \"Months\": \"MR-OC\",\r\n    \"Season\": \"Spring, Summer, Autumn\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"4e29df95-12bd-02ad-4004-dd1d95471dac","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-277,"y":39,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('bugs-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"adbaf9bd-0900-3af9-802a-a2814ef3ca0d","type":"RouterNavigate","x":335,"y":561,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Spring Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"528ec59f-d837-69c1-0e1f-a3187ab89a7a","type":"RouterNavigate","x":335,"y":753,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Fall Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"f5eacba7-bc47-dee0-f2b9-41243d1c3df1","type":"RouterNavigate","x":336,"y":849,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Winter Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"05c62ada-b37a-6f38-c001-42c42a5d9311","type":"JavaScriptFunction","label":"Play Audio File","x":-323,"y":724,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"f2dc9f96-888a-5bc1-8e39-44fb5f3d7129","type":"RouterNavigate","x":330,"y":685,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["d84d648b-14c8-9ad9-667d-fd860a9933df"]}},{"name":"/Collection Pages/Bugs/Winter Bugs","id":"630ddd9f-5a1e-5240-96ab-a49207717825","graph":{"connections":[{"fromId":"e71e65e7-bfcc-ec6c-e3f6-49582b7a13b7","fromProperty":"items","toId":"04591dcc-133a-5444-9b6c-1c88b5b3b332","toProperty":"items"},{"fromId":"72cb8832-7c24-6454-57a9-08bc65c86f76","fromProperty":"out-CountText","toId":"8e0f6519-bf0e-4571-9c76-504fcdd014fa","toProperty":"text"},{"fromId":"9d8e6494-48ae-f90c-5c79-7b14f17bde01","fromProperty":"onClick","toId":"a1dc9ef6-b942-1078-8279-585ca7dd452c","toProperty":"navigate"},{"fromId":"a61296d9-6c92-b786-1415-bce3b7dc517b","fromProperty":"onClick","toId":"aa7b3fa5-b4ac-7ec3-20ff-5c6519a0ed5b","toProperty":"navigate"},{"fromId":"25d0e706-8e3a-d25e-417d-c59d9de79e59","fromProperty":"onClick","toId":"a3efd30a-a74f-49fd-ea11-d1cfef5de1a6","toProperty":"navigate"},{"fromId":"9d8e6494-48ae-f90c-5c79-7b14f17bde01","fromProperty":"onClick","toId":"dba26366-8639-c170-eda5-bf7f0f7ff3ba","toProperty":"run"},{"fromId":"a61296d9-6c92-b786-1415-bce3b7dc517b","fromProperty":"onClick","toId":"dba26366-8639-c170-eda5-bf7f0f7ff3ba","toProperty":"run"},{"fromId":"25d0e706-8e3a-d25e-417d-c59d9de79e59","fromProperty":"onClick","toId":"dba26366-8639-c170-eda5-bf7f0f7ff3ba","toProperty":"run"},{"fromId":"726bc0ff-51f3-565c-1263-23a9330b09f3","fromProperty":"onClick","toId":"35d6886f-05e4-1c6f-b463-2b1c603161ea","toProperty":"navigate"},{"fromId":"726bc0ff-51f3-565c-1263-23a9330b09f3","fromProperty":"onClick","toId":"dba26366-8639-c170-eda5-bf7f0f7ff3ba","toProperty":"run"}],"roots":[{"id":"c3d73fbc-8fca-75ad-a9d5-b40ec354e690","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Winter Bugs","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"winter-bugs","index":32}],"children":[{"id":"b4bb3836-b446-bbe9-c20d-19f293339ad7","type":"module.inlineHtml","label":"Bugs Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/bugs.png'),\r\n    url('/images/background/bugs.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"b0117469-d52e-d7b9-acc1-f96dc706ad81","type":"Group","label":"Bugs Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"8e0f6519-bf0e-4571-9c76-504fcdd014fa","type":"Text","label":"","parameters":{"text":"Bugs Progress","textStyle":"Title Medium","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#d4e2bf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f79b4cc4-4ebf-27dd-ea02-898da0092043","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":20,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#d4e2bf","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a8583cd9-c23f-d54b-eeb4-a914ea855c4e","type":"Group","label":"Bugs Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3e8d8cb1-de1c-898a-d946-434ffc76c108","type":"Image","label":"Bugs","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/swallow_tail_butterfly.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"5eda0219-5a24-5efa-52ad-9f9a9a891bc0","type":"Text","label":"","parameters":{"text":"Winter Bugs","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d17f9204-975e-1caa-e0a5-66ff294b21fc","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"9d8e6494-48ae-f90c-5c79-7b14f17bde01","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a61296d9-6c92-b786-1415-bce3b7dc517b","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"25d0e706-8e3a-d25e-417d-c59d9de79e59","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"726bc0ff-51f3-565c-1263-23a9330b09f3","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"},"enabled":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"04591dcc-133a-5444-9b6c-1c88b5b3b332","type":"For Each","parameters":{"template":"/Collection Pages/Bugs/Bugs Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]},{"id":"0387d637-d582-80be-77ab-5433260befc6","type":"PageInputs","x":-427,"y":220,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"e71e65e7-bfcc-ec6c-e3f6-49582b7a13b7","type":"Collection2","label":"Winter Bugs","x":-326,"y":800,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"bugs-0001\",\r\n    \"Label\": \"Ant\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Ant_PG_Icon.png\",\r\n    \"Price\": \"80\",\r\n    \"Weather\": \"No rain\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0002\",\r\n    \"Label\": \"Bagworm\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bagworm_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"OC-MR\",\r\n    \"Season\": \"Autumn, Winter, Spring\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0004\",\r\n    \"Label\": \"Bee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Bee_PG_Icon.png\",\r\n    \"Price\": \"4,500\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0025\",\r\n    \"Label\": \"Mole cricket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Mole_Cricket_PG_Icon.png\",\r\n    \"Price\": \"200\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NO-MA\",\r\n    \"Season\": \"Autumn, Winter, Spring\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"bugs-0028\",\r\n    \"Label\": \"Pill bug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/bugs/Pill_Bug_PG_Icon.png\",\r\n    \"Price\": \"250\",\r\n    \"Weather\": \"Any\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Season\": \"All seasons\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"72cb8832-7c24-6454-57a9-08bc65c86f76","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-277,"y":39,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('bugs-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a1dc9ef6-b942-1078-8279-585ca7dd452c","type":"RouterNavigate","x":335,"y":561,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Spring Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"aa7b3fa5-b4ac-7ec3-20ff-5c6519a0ed5b","type":"RouterNavigate","x":339,"y":655,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Summer Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"a3efd30a-a74f-49fd-ea11-d1cfef5de1a6","type":"RouterNavigate","x":335,"y":753,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Fall Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"dba26366-8639-c170-eda5-bf7f0f7ff3ba","type":"JavaScriptFunction","label":"Play Audio File","x":-344,"y":612,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"35d6886f-05e4-1c6f-b463-2b1c603161ea","type":"RouterNavigate","x":351,"y":869,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["c3d73fbc-8fca-75ad-a9d5-b40ec354e690"]}},{"name":"/Collection Pages/Carpet/Carpet","id":"1a2ab504-f87b-4650-a414-ae9fec80ddc6","graph":{"connections":[{"fromId":"fc38ba58-480c-3d99-595f-87d6576d1a7e","fromProperty":"items","toId":"37299521-3e67-ba4c-3d6f-cb60f25494bb","toProperty":"items"},{"fromId":"044141a7-686a-4a60-f5ec-66e4138faff8","fromProperty":"out-Success","toId":"37299521-3e67-ba4c-3d6f-cb60f25494bb","toProperty":"refresh"},{"fromId":"86085b3c-f995-9596-0e21-962fe5092711","fromProperty":"out-CountText","toId":"b9776724-08c4-0370-f902-9ed055d22e4b","toProperty":"text"}],"roots":[{"id":"64a28c11-0107-2b85-ab87-e20b723edf00","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Carpet","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"carpet","index":32}],"children":[{"id":"319ff5ac-2c4a-6a30-ee87-5bb3059cc6ab","type":"module.inlineHtml","label":"Carpet Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/carpet.png'),\r\n    url('/images/background/carpet.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"bd4e6534-0b23-96cd-f17e-cccfd295728f","type":"Group","label":"Clothing Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b9776724-08c4-0370-f902-9ed055d22e4b","type":"Text","label":"","parameters":{"text":"Clothing Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#ad65d4"},"ports":[],"dynamicports":[],"children":[]},{"id":"fa7fa956-b914-c47e-5dc3-6c9b13e4f869","type":"Group","label":"Clothing","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#ad65d4","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"50e2823d-2d99-e1fa-f270-a5d49374f27d","type":"Group","label":"Clothing Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"dfc5a6b4-49e8-86c0-3c7c-3981387dad48","type":"Image","label":"Clothing","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/carpet.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"7250c51f-1067-c750-3c0a-1abe70476520","type":"Text","label":"","parameters":{"text":"Carpet","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"37299521-3e67-ba4c-3d6f-cb60f25494bb","type":"For Each","parameters":{"template":"/Collection Pages/Carpet/Carpet Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"6fc74c5d-2829-514a-0788-082b4c5bc895","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"fc38ba58-480c-3d99-595f-87d6576d1a7e","type":"Collection2","label":"Clothing Array","x":-259,"y":454,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"carpet-0001\",\r\n    \"Label\": \"8 mat tatami\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-8_Mat_Tatami_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0002\",\r\n    \"Label\": \"18 mat tatami\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-18_Mat_Tatami_PG_Texture.png\",\r\n    \"Price\": \"1,150 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0003\",\r\n    \"Label\": \"Ancient tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Ancient_Tile_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0004\",\r\n    \"Label\": \"Backyard lawn\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Backyard_Lawn_PG_Texture.png\",\r\n    \"Price\": \"880 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0005\",\r\n    \"Label\": \"Bamboo flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Bamboo_Flooring_PG_Texture.png\",\r\n    \"Price\": \"1,360 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0006\",\r\n    \"Label\": \"Basement floor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Basement_Floor_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0007\",\r\n    \"Label\": \"Birch flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Birch_Flooring_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0008\",\r\n    \"Label\": \"Block flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Block_Flooring_PG_Texture.png\",\r\n    \"Price\": \"Secret code\",\r\n    \"Obtained\": \"IboOBCeHz3YbICB5igPvQYsfMZMd\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0009\",\r\n    \"Label\": \"Blue flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Blue_Flooring_PG_Texture.png\",\r\n    \"Price\": \"1,580 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0010\",\r\n    \"Label\": \"Boxing ring mat\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Boxing_Ring_Mat_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0011\",\r\n    \"Label\": \"Cabana flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Cabana_Flooring_PG_Texture.png\",\r\n    \"Price\": \"1,680 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0012\",\r\n    \"Label\": \"Cabin rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Cabin_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,540 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0013\",\r\n    \"Label\": \"Ceramic tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Ceramic_Tile_PG_Texture.png\",\r\n    \"Price\": \"1,390 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0014\",\r\n    \"Label\": \"Charcoal tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Charcoal_Tile_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0015\",\r\n    \"Label\": \"Checkered tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Checkered_Tile_PG_Texture.png\",\r\n    \"Price\": \"1,680 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0016\",\r\n    \"Label\": \"Chessboard rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Chessboard_Rug_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0017\",\r\n    \"Label\": \"Citrus carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Citrus_Carpet_PG_Texture.png\",\r\n    \"Price\": \"1,330 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0018\",\r\n    \"Label\": \"Classic carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Classic_Carpet_PG_Texture.png\",\r\n    \"Price\": \"2,300 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0019\",\r\n    \"Label\": \"Classroom floor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Classroom_Floor_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0020\",\r\n    \"Label\": \"Closed road\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Closed_Road_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0021\",\r\n    \"Label\": \"Concrete floor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Concrete_Floor_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0022\",\r\n    \"Label\": \"Cowhide rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Cowhide_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,540 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0023\",\r\n    \"Label\": \"Daisy meadow\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Daisy_Meadow_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0024\",\r\n    \"Label\": \"Diner tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Diner_Tile_PG_Texture.png\",\r\n    \"Price\": \"1,300 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0025\",\r\n    \"Label\": \"Exotic rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Exotic_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,820 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0026\",\r\n    \"Label\": \"Exquisite rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Exquisite_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,960 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0027\",\r\n    \"Label\": \"Fancy carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Fancy_Carpet_PG_Texture.png\",\r\n    \"Price\": \"2,980 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0028\",\r\n    \"Label\": \"Green rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Green_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,540 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0029\",\r\n    \"Label\": \"Harvest rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Harvest_Rug_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Franklin\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0030\",\r\n    \"Label\": \"Imperial tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Imperial_Tile_PG_Texture.png\",\r\n    \"Price\": \"2,980 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0031\",\r\n    \"Label\": \"Jingle carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Jingle_Carpet_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Jingle\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0032\",\r\n    \"Label\": \"Kiddie carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Kiddie_Carpet_PG_Texture.png\",\r\n    \"Price\": \"1,630 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0033\",\r\n    \"Label\": \"Kitchen flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Kitchen_Flooring_PG_Texture.png\",\r\n    \"Price\": \"1,230 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0034\",\r\n    \"Label\": \"Kitchen tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Kitchen_Tile_PG_Texture.png\",\r\n    \"Price\": \"1,890 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0035\",\r\n    \"Label\": \"Kitschy tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Kitschy_Tile_PG_Texture.png\",\r\n    \"Price\": \"1,280 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0036\",\r\n    \"Label\": \"Lovely carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Lovely_Carpet_PG_Texture.png\",\r\n    \"Price\": \"1,980 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0037\",\r\n    \"Label\": \"Lunar surface\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Lunar_Surface_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0038\",\r\n    \"Label\": \"Modern tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Modern_Tile_PG_Texture.png\",\r\n    \"Price\": \"1,540 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0039\",\r\n    \"Label\": \"Mosaic tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Mosaic_Tile_PG_Texture.png\",\r\n    \"Price\": \"2,300 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0040\",\r\n    \"Label\": \"Mossy carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Mossy_Carpet_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0041\",\r\n    \"Label\": \"Music room floor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Music_Room_Floor_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0042\",\r\n    \"Label\": \"Office flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Office_Flooring_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0043\",\r\n    \"Label\": \"Old flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Old_Flooring_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0044\",\r\n    \"Label\": \"Opulent rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Opulent_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,230 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0045\",\r\n    \"Label\": \"Ornate rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Ornate_Rug_PG_Texture.png\",\r\n    \"Price\": \"2,100 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0046\",\r\n    \"Label\": \"Palace tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Palace_Tile_PG_Texture.png\",\r\n    \"Price\": \"3,200 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0047\",\r\n    \"Label\": \"Parquet floor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Parquet_Floor_PG_Texture.png\",\r\n    \"Price\": \"2,350 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0048\",\r\n    \"Label\": \"Playroom rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Playroom_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,360 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0049\",\r\n    \"Label\": \"Plaza tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Plaza_Tile_PG_Texture.png\",\r\n    \"Price\": \"2,180 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0050\",\r\n    \"Label\": \"Plush carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Plush_Carpet_PG_Texture.png\",\r\n    \"Price\": \"2,160 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0051\",\r\n    \"Label\": \"Ranch flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Ranch_Flooring_PG_Texture.png\",\r\n    \"Price\": \"1,750 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0052\",\r\n    \"Label\": \"Red tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Red_Tile_PG_Texture.png\",\r\n    \"Price\": \"1,680 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0053\",\r\n    \"Label\": \"Regal carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Regal_Carpet_PG_Texture.png\",\r\n    \"Price\": \"2,850 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0054\",\r\n    \"Label\": \"Saharah's desert\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Saharah's_Desert_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0055\",\r\n    \"Label\": \"Sand garden\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Sand_Garden_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0056\",\r\n    \"Label\": \"Sandlot\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Sandlot_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0057\",\r\n    \"Label\": \"Shanty mat\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Shanty_Mat_PG_Texture.png\",\r\n    \"Price\": \"720 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0058\",\r\n    \"Label\": \"Sidewalk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Sidewalk_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0059\",\r\n    \"Label\": \"Slate flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Slate_Flooring_PG_Texture.png\",\r\n    \"Price\": \"1,380 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0060\",\r\n    \"Label\": \"Snowman carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Snowman_Carpet_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Snowman\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0061\",\r\n    \"Label\": \"Spooky carpet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Spooky_Carpet_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Jack\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0062\",\r\n    \"Label\": \"Steel flooring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Steel_Flooring_PG_Texture.png\",\r\n    \"Price\": \"1,480 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0063\",\r\n    \"Label\": \"Stone tile\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Stone_Tile_PG_Texture.png\",\r\n    \"Price\": \"2,750 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0064\",\r\n    \"Label\": \"Tartan rug\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Tartan_Rug_PG_Texture.png\",\r\n    \"Price\": \"1,820 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0065\",\r\n    \"Label\": \"Tatami floor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Tatami_Floor_PG_Texture.png\",\r\n    \"Price\": \"1,340 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0066\",\r\n    \"Label\": \"Tropical floor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Tropical_Floor_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"carpet-0067\",\r\n    \"Label\": \"Western desert\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/carpet/64px-Western_Desert_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Saharah\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"044141a7-686a-4a60-f5ec-66e4138faff8","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":317,"y":427,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"86085b3c-f995-9596-0e21-962fe5092711","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-237,"y":-8,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('carpet-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Carpet Progress: ${count} / 67`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["64a28c11-0107-2b85-ab87-e20b723edf00"]}},{"name":"/Collection Pages/Carpet/Carpet Logic","id":"944cb0ca-de6b-fe9e-41c5-b5ae95f77f02","graph":{"connections":[{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-ID","toId":"b5d70621-890e-e7bb-7115-dae518c1cf03","toProperty":"in-ID"},{"fromId":"b5d70621-890e-e7bb-7115-dae518c1cf03","fromProperty":"out-ID","toId":"0d6af103-5f17-7c08-736b-527ed667a940","toProperty":"modelId"},{"fromId":"b5d70621-890e-e7bb-7115-dae518c1cf03","fromProperty":"out-Checked","toId":"0d6af103-5f17-7c08-736b-527ed667a940","toProperty":"prop-Checked"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Label","toId":"b5d70621-890e-e7bb-7115-dae518c1cf03","toProperty":"in-Label"},{"fromId":"52a1bff3-f27d-65f5-c543-6a1d78ad921c","fromProperty":"id","toId":"4eef5550-c94d-996a-66bd-6b52642cbc49","toProperty":"in-ID"},{"fromId":"52a1bff3-f27d-65f5-c543-6a1d78ad921c","fromProperty":"prop-Label","toId":"4eef5550-c94d-996a-66bd-6b52642cbc49","toProperty":"in-Label"},{"fromId":"52a1bff3-f27d-65f5-c543-6a1d78ad921c","fromProperty":"prop-Image","toId":"4eef5550-c94d-996a-66bd-6b52642cbc49","toProperty":"in-Icon"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Label","toId":"ad547ad0-caa1-c241-560c-25347ab8ea67","toProperty":"text"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Icon","toId":"a239b55e-2f33-f6f0-8398-b8f90928f85a","toProperty":"src"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Price","toId":"2a25178e-ad37-2e6a-bb0f-1bef7c76c42a","toProperty":"text"},{"fromId":"52a1bff3-f27d-65f5-c543-6a1d78ad921c","fromProperty":"prop-Checked","toId":"4eef5550-c94d-996a-66bd-6b52642cbc49","toProperty":"in-Checked"},{"fromId":"52a1bff3-f27d-65f5-c543-6a1d78ad921c","fromProperty":"prop-Price","toId":"4eef5550-c94d-996a-66bd-6b52642cbc49","toProperty":"in-Price"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Price","toId":"b5d70621-890e-e7bb-7115-dae518c1cf03","toProperty":"in-Price"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Icon","toId":"b5d70621-890e-e7bb-7115-dae518c1cf03","toProperty":"in-Icon"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Checked","toId":"a5489041-3c32-adee-8094-839dd1fd5706","toProperty":"checked"},{"fromId":"a5489041-3c32-adee-8094-839dd1fd5706","fromProperty":"checked","toId":"b5d70621-890e-e7bb-7115-dae518c1cf03","toProperty":"in-Checked"},{"fromId":"a5489041-3c32-adee-8094-839dd1fd5706","fromProperty":"onChange","toId":"b5d70621-890e-e7bb-7115-dae518c1cf03","toProperty":"in-Changed"},{"fromId":"a5489041-3c32-adee-8094-839dd1fd5706","fromProperty":"onChange","toId":"0d6af103-5f17-7c08-736b-527ed667a940","toProperty":"store"},{"fromId":"52a1bff3-f27d-65f5-c543-6a1d78ad921c","fromProperty":"prop-Obtained","toId":"4eef5550-c94d-996a-66bd-6b52642cbc49","toProperty":"in-Obtained"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Obtained","toId":"b5d70621-890e-e7bb-7115-dae518c1cf03","toProperty":"in-Obtained"},{"fromId":"4eef5550-c94d-996a-66bd-6b52642cbc49","fromProperty":"out-Obtained","toId":"9bf11dac-8cef-a02a-3e0f-0886f324ee82","toProperty":"text"}],"roots":[{"id":"aba03408-db6b-71eb-cda3-2f18098ce6d3","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0dd5d43d-13f6-71b8-296b-2797946a43af","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"46e1be91-a5d5-f8c1-7dc9-bf5c574533cb","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"621fadb6-4a85-2ce3-0096-a000c5408bb8","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"b7d4e846-e529-4872-b83e-02de86f39ed6","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f102e502-21ec-d82c-6458-ef607c1ba96c","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"67c16a1f-d4dc-bc4f-76a9-b77e4a85e22b","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"a239b55e-2f33-f6f0-8398-b8f90928f85a","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ad547ad0-caa1-c241-560c-25347ab8ea67","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":26,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"edee340c-cfcd-b140-23a7-ee5c024f129c","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a5489041-3c32-adee-8094-839dd1fd5706","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"checked":false},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"634f94ad-e546-654e-bf39-2290db7ea6fb","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":40,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"08be1e41-2db7-fef1-2924-d510529891f2","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"590122e9-f19f-43c5-bdcf-450609933556","type":"Text","parameters":{"text":"Obtained from","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"7d486c7b-79da-1977-7cd5-ccf81adbb89c","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a714653e-cf5d-bdaa-00ba-9ae8fd402f26","type":"Image","parameters":{"src":"be","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"2a25178e-ad37-2e6a-bb0f-1bef7c76c42a","type":"Text","parameters":{"text":"Price","textAlignX":"center","marginTop":{"value":10,"unit":"px"},"maxHeight":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minWidth":{"value":50,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"9bf11dac-8cef-a02a-3e0f-0886f324ee82","type":"Text","parameters":{"text":"HRA Points","minWidth":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxHeight":{"value":50,"unit":"%"},"alignX":"center","marginTop":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"52a1bff3-f27d-65f5-c543-6a1d78ad921c","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"0d6af103-5f17-7c08-736b-527ed667a940","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"4eef5550-c94d-996a-66bd-6b52642cbc49","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"b5d70621-890e-e7bb-7115-dae518c1cf03","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["aba03408-db6b-71eb-cda3-2f18098ce6d3"]}},{"name":"/Collection Pages/Carpet/Carpet Logic/Options","id":"934e9b14-e54f-6128-2a81-e0f9e70a429f","graph":{"connections":[{"fromId":"4762d6a5-41f1-651c-f4d1-8698bd20ff47","fromProperty":"id","toId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","toProperty":"in-ID"},{"fromId":"4762d6a5-41f1-651c-f4d1-8698bd20ff47","fromProperty":"prop-Label","toId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","toProperty":"in-Label"},{"fromId":"4762d6a5-41f1-651c-f4d1-8698bd20ff47","fromProperty":"prop-Checked","toId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","toProperty":"in-Checked"},{"fromId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","fromProperty":"out-ID","toId":"d643c450-4998-2e2e-4cf0-082a1e21dd24","toProperty":"in-ID"},{"fromId":"d643c450-4998-2e2e-4cf0-082a1e21dd24","fromProperty":"out-ID","toId":"52d103d3-5bb1-4aef-f869-6b192e728403","toProperty":"modelId"},{"fromId":"d643c450-4998-2e2e-4cf0-082a1e21dd24","fromProperty":"out-Checked","toId":"52d103d3-5bb1-4aef-f869-6b192e728403","toProperty":"prop-Checked"},{"fromId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","fromProperty":"out-Label","toId":"d643c450-4998-2e2e-4cf0-082a1e21dd24","toProperty":"in-Label"},{"fromId":"4762d6a5-41f1-651c-f4d1-8698bd20ff47","fromProperty":"prop-Icon","toId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","toProperty":"in-Icon"},{"fromId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","fromProperty":"out-Icon","toId":"d643c450-4998-2e2e-4cf0-082a1e21dd24","toProperty":"in-Icon"},{"fromId":"52d103d3-5bb1-4aef-f869-6b192e728403","fromProperty":"stored","toId":"ef291ad7-75c3-0c3d-7e9a-7af1c27963f5","toProperty":"Selection Changed"},{"fromId":"013eb5ae-e1a2-fb52-c62f-dc8b97424ce8","fromProperty":"onChange","toId":"52d103d3-5bb1-4aef-f869-6b192e728403","toProperty":"store"},{"fromId":"013eb5ae-e1a2-fb52-c62f-dc8b97424ce8","fromProperty":"onChange","toId":"d643c450-4998-2e2e-4cf0-082a1e21dd24","toProperty":"in-Changed"},{"fromId":"013eb5ae-e1a2-fb52-c62f-dc8b97424ce8","fromProperty":"checked","toId":"d643c450-4998-2e2e-4cf0-082a1e21dd24","toProperty":"in-Checked"},{"fromId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","fromProperty":"out-Checked","toId":"013eb5ae-e1a2-fb52-c62f-dc8b97424ce8","toProperty":"checked"},{"fromId":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","fromProperty":"out-Label","toId":"013eb5ae-e1a2-fb52-c62f-dc8b97424ce8","toProperty":"label"}],"roots":[{"id":"c8933e81-fdbd-2ee0-3809-f662a88e3240","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"013eb5ae-e1a2-fb52-c62f-dc8b97424ce8","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"4762d6a5-41f1-651c-f4d1-8698bd20ff47","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"52d103d3-5bb1-4aef-f869-6b192e728403","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"0a12f6fc-9c8e-b35a-39cd-30c221badd4f","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d643c450-4998-2e2e-4cf0-082a1e21dd24","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"ef291ad7-75c3-0c3d-7e9a-7af1c27963f5","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["c8933e81-fdbd-2ee0-3809-f662a88e3240"]}},{"name":"/Collection Pages/Clothing/Clothing","id":"5bd6c243-7f1f-df42-cbff-de3c1ada18e8","graph":{"connections":[{"fromId":"f22a9b7c-3461-fa3c-dde5-c5980c8de056","fromProperty":"items","toId":"859c6b52-c88f-ff01-81d9-7cb6b92cd691","toProperty":"items"},{"fromId":"9e3885bc-77fd-2d63-8b32-8014d5566d6c","fromProperty":"out-Success","toId":"859c6b52-c88f-ff01-81d9-7cb6b92cd691","toProperty":"refresh"},{"fromId":"8a069a9b-09f8-cbd8-4dda-bd6248f9c1c9","fromProperty":"out-CountText","toId":"69fb502c-ac63-456d-fd18-9fcd2140147c","toProperty":"text"}],"roots":[{"id":"2ca2210c-af8a-964d-9be3-1081a09132eb","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Clothing","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"clothing","index":32}],"children":[{"id":"670ae180-8436-e185-7c8e-035477ddc293","type":"module.inlineHtml","label":"Clothing Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/clothing.png'),\r\n    url('/images/background/clothing.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"badb9355-f11b-7e53-58f2-4a2bdd8c3ca9","type":"Group","label":"Clothing Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"69fb502c-ac63-456d-fd18-9fcd2140147c","type":"Text","label":"","parameters":{"text":"Clothing Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f2c999"},"ports":[],"dynamicports":[],"children":[]},{"id":"858b4afb-8103-9d08-730a-17c7e0b9de8e","type":"Group","label":"Clothing","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f2c999","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"5ab31bef-d1e9-38e1-79ec-f0b1db1d173e","type":"Group","label":"Clothing Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a345bcc2-5683-58f5-e695-d3af83da4be9","type":"Image","label":"Clothing","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/clothing.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"3476360e-8a6a-7aa0-58dc-f7813945fb57","type":"Text","label":"","parameters":{"text":"Clothing","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"859c6b52-c88f-ff01-81d9-7cb6b92cd691","type":"For Each","parameters":{"template":"/Collection Pages/Clothing/Clothing Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"931be1e8-f040-ed0a-a3ad-17199f0263ae","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"f22a9b7c-3461-fa3c-dde5-c5980c8de056","type":"Collection2","label":"Clothing Array","x":-259,"y":454,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"clothing-0001\",\r\n    \"Label\": \"A shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-A_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0002\",\r\n    \"Label\": \"Airy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Airy_Shirt_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0003\",\r\n    \"Label\": \"Ancient knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Ancient_Knit_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0004\",\r\n    \"Label\": \"Anju's shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Anju's_Shirt_PG_Model.png\",\r\n    \"Price\": \"460\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0005\",\r\n    \"Label\": \"Arctic camo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Arctic_Camo_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0006\",\r\n    \"Label\": \"Argyle knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Argyle_Knit_PG_Model.png\",\r\n    \"Price\": \"460\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0007\",\r\n    \"Label\": \"Aurora knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Aurora_Knit_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0008\",\r\n    \"Label\": \"Bad plaid shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Bad_Plaid_Shirt_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0009\",\r\n    \"Label\": \"Barber shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Barber_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0010\",\r\n    \"Label\": \"BB shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-BB_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0011\",\r\n    \"Label\": \"Bear shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Bear_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0012\",\r\n    \"Label\": \"Beatnik shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Beatnik_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0013\",\r\n    \"Label\": \"Berry gingham\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Berry_Gingham_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0014\",\r\n    \"Label\": \"Big bro's shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Big_Bro's_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0015\",\r\n    \"Label\": \"Big dot shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Big_Dot_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0016\",\r\n    \"Label\": \"Big star shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Big_Star_Shirt_PG_Model.png\",\r\n    \"Price\": \"400\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0017\",\r\n    \"Label\": \"Blossom shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blossom_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0018\",\r\n    \"Label\": \"Blossoming shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blossoming_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0019\",\r\n    \"Label\": \"Blue aloha shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Aloha_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Animal Island\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0020\",\r\n    \"Label\": \"Blue check print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Check_Print_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0021\",\r\n    \"Label\": \"Blue check shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Check_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0022\",\r\n    \"Label\": \"Blue grid shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Grid_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0023\",\r\n    \"Label\": \"Blue pinstripe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Pinstripe_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0024\",\r\n    \"Label\": \"Blue scale shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Scale_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0025\",\r\n    \"Label\": \"Blue stripe knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Stripe_Knit_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0026\",\r\n    \"Label\": \"Blue tartan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Tartan_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0027\",\r\n    \"Label\": \"Blue tie-dye\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Blue_Tie-Dye_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0028\",\r\n    \"Label\": \"Bold check shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Bold_Check_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0029\",\r\n    \"Label\": \"Botanical shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Botanical_Shirt_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0030\",\r\n    \"Label\": \"Bubble shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Bubble_Shirt_PG_Model.png\",\r\n    \"Price\": \"410\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0031\",\r\n    \"Label\": \"Butterfly shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Butterfly_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0032\",\r\n    \"Label\": \"Café shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Café_Shirt_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0033\",\r\n    \"Label\": \"Caterpillar tee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Caterpillar_Tee_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0034\",\r\n    \"Label\": \"Caveman tunic\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Caveman_Tunic_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0035\",\r\n    \"Label\": \"Chain-gang shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Chain-Gang_Shirt_PG_Model.png\",\r\n    \"Price\": \"260\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0036\",\r\n    \"Label\": \"Checkerboard tee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Checkerboard_Tee_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0037\",\r\n    \"Label\": \"Checkered shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Checkered_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0038\",\r\n    \"Label\": \"Cherry shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Cherry_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0039\",\r\n    \"Label\": \"Chevron shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Chevron_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0040\",\r\n    \"Label\": \"Chichi print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Chichi_Print_PG_Model.png\",\r\n    \"Price\": \"180\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0041\",\r\n    \"Label\": \"Circus shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Circus_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0042\",\r\n    \"Label\": \"Citrus gingham\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Citrus_Gingham_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0043\",\r\n    \"Label\": \"Citrus shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Citrus_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0044\",\r\n    \"Label\": \"Classic top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Classic_Top_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0045\",\r\n    \"Label\": \"Cloudy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Cloudy_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0046\",\r\n    \"Label\": \"Club shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Club_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0047\",\r\n    \"Label\": \"Comfy sweater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Comfy_Sweater_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0048\",\r\n    \"Label\": \"Concierge shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Concierge_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0049\",\r\n    \"Label\": \"Cool shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Cool_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0050\",\r\n    \"Label\": \"Coral shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Coral_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0051\",\r\n    \"Label\": \"Cow print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Cow_Print_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0052\",\r\n    \"Label\": \"Cozy sweater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Cozy_Sweater_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0053\",\r\n    \"Label\": \"Crewel shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Crewel_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0054\",\r\n    \"Label\": \"Crossing shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Crossing_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0055\",\r\n    \"Label\": \"Daisy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Daisy_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0056\",\r\n    \"Label\": \"Danger shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Danger_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0057\",\r\n    \"Label\": \"Dapper shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Dapper_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0058\",\r\n    \"Label\": \"Dark polka shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Dark_Polka_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0059\",\r\n    \"Label\": \"Dawn shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Dawn_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0060\",\r\n    \"Label\": \"Dazed shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Dazed_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0061\",\r\n    \"Label\": \"Deep blue tee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Deep_Blue_Tee_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0062\",\r\n    \"Label\": \"Deer shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Deer_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0063\",\r\n    \"Label\": \"Denim shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Denim_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0064\",\r\n    \"Label\": \"Desert camo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Desert_Camo_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0065\",\r\n    \"Label\": \"Desert shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Desert_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0066\",\r\n    \"Label\": \"Diamond shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Diamond_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0067\",\r\n    \"Label\": \"Dice shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Dice_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0068\",\r\n    \"Label\": \"Diner uniform\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Diner_Uniform_PG_Model.png\",\r\n    \"Price\": \"290\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0069\",\r\n    \"Label\": \"Dragon suit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Dragon_Suit_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0070\",\r\n    \"Label\": \"Dreamy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Dreamy_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0071\",\r\n    \"Label\": \"Earthy knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Earthy_Knit_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0072\",\r\n    \"Label\": \"Eight-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Eight-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0073\",\r\n    \"Label\": \"Exotic shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Exotic_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0074\",\r\n    \"Label\": \"Fall plaid shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Fall_Plaid_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0075\",\r\n    \"Label\": \"Far-out shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Far-Out_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0076\",\r\n    \"Label\": \"Fetching outfit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Fetching_Outfit_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0077\",\r\n    \"Label\": \"Fiendish shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Fiendish_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0078\",\r\n    \"Label\": \"Fish bone shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Fish_Bone_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0079\",\r\n    \"Label\": \"Fish knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Fish_Knit_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0080\",\r\n    \"Label\": \"Five-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Five-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0081\",\r\n    \"Label\": \"Flame shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Flame_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0082\",\r\n    \"Label\": \"Flicker shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Flicker_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0083\",\r\n    \"Label\": \"Floral knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Floral_Knit_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0084\",\r\n    \"Label\": \"Flowery shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Flowery_Shirt_PG_Model.png\",\r\n    \"Price\": \"400\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0085\",\r\n    \"Label\": \"Folk shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Folk_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0086\",\r\n    \"Label\": \"Fortune shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Fortune_Shirt_PG_Model.png\",\r\n    \"Price\": \"480\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0087\",\r\n    \"Label\": \"Four-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Four-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0088\",\r\n    \"Label\": \"Fresh shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Fresh_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0089\",\r\n    \"Label\": \"Frog shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Frog_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0090\",\r\n    \"Label\": \"Funky dot shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Funky_Dot_Shirt_PG_Model.png\",\r\n    \"Price\": \"430\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0091\",\r\n    \"Label\": \"Future shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Future_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0092\",\r\n    \"Label\": \"G logo shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-G_Logo_Shirt_PG_Model.png\",\r\n    \"Price\": \"128\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0093\",\r\n    \"Label\": \"Gaudy sweater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Gaudy_Sweater_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0094\",\r\n    \"Label\": \"Gelato shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Gelato_Shirt_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0095\",\r\n    \"Label\": \"Giraffe print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Giraffe_Print_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0096\",\r\n    \"Label\": \"Go-go shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Go-Go_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0097\",\r\n    \"Label\": \"Gracie's top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Gracie's_Top_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0098\",\r\n    \"Label\": \"Grape shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Grape_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0099\",\r\n    \"Label\": \"Grass shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Grass_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0100\",\r\n    \"Label\": \"Gray tartan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Gray_Tartan_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0101\",\r\n    \"Label\": \"Green bar shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Green_Bar_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0102\",\r\n    \"Label\": \"Green ring shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Green_Ring_Shirt_PG_Model.png\",\r\n    \"Price\": \"180\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0103\",\r\n    \"Label\": \"Green tie-dye\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Green_Tie-Dye_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0104\",\r\n    \"Label\": \"Groovy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Groovy_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0105\",\r\n    \"Label\": \"Gumdrop shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Gumdrop_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0106\",\r\n    \"Label\": \"Heart shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Heart_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0107\",\r\n    \"Label\": \"Hippie shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Hippie_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0108\",\r\n    \"Label\": \"Hot spring shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Hot_Spring_Shirt_PG_Model.png\",\r\n    \"Price\": \"520\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0109\",\r\n    \"Label\": \"Houndstooth knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Houndstooth_Knit_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0110\",\r\n    \"Label\": \"Houndstooth tee\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Houndstooth_Tee_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0111\",\r\n    \"Label\": \"Icy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Icy_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0112\",\r\n    \"Label\": \"Jade check print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Jade_Check_Print_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0113\",\r\n    \"Label\": \"Jagged shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Jagged_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0114\",\r\n    \"Label\": \"Jester shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Jester_Shirt_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0115\",\r\n    \"Label\": \"Jingle shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Jingle_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Jingle\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0116\",\r\n    \"Label\": \"Jungle camo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Jungle_Camo_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0117\",\r\n    \"Label\": \"Kaffe's shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Kaffe's_Shirt_PG_Model.png\",\r\n    \"Price\": \"460\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0118\",\r\n    \"Label\": \"Kiddie shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Kiddie_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0119\",\r\n    \"Label\": \"Kiwi shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Kiwi_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0120\",\r\n    \"Label\": \"Laced shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Laced_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0121\",\r\n    \"Label\": \"Ladybug shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Ladybug_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0122\",\r\n    \"Label\": \"Lavender robe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Lavender_Robe_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0123\",\r\n    \"Label\": \"Leather jerkin\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Leather_Jerkin_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0124\",\r\n    \"Label\": \"Lemon gingham\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Lemon_Gingham_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0125\",\r\n    \"Label\": \"Leopard print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Leopard_Print_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0126\",\r\n    \"Label\": \"Li'l bro's shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Lil_Bro's_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0127\",\r\n    \"Label\": \"Light line shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Light_Line_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0128\",\r\n    \"Label\": \"Lime line shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Lime_Line_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0129\",\r\n    \"Label\": \"Lite polka shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Lite_Polka_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0130\",\r\n    \"Label\": \"Loud bloom shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Loud_Bloom_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0131\",\r\n    \"Label\": \"Loud line shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Loud_Line_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0132\",\r\n    \"Label\": \"Lovely shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Lovely_Shirt_PG_Model.png\",\r\n    \"Price\": \"400\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0133\",\r\n    \"Label\": \"Melon gingham\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Melon_Gingham_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0134\",\r\n    \"Label\": \"Melon shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Melon_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0135\",\r\n    \"Label\": \"Mint gingham\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Mint_Gingham_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0136\",\r\n    \"Label\": \"Misty shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Misty_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0137\",\r\n    \"Label\": \"Mod top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Mod_Top_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0138\",\r\n    \"Label\": \"Moldy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Moldy_Shirt_PG_Model.png\",\r\n    \"Price\": \"50\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0139\",\r\n    \"Label\": \"Monkey shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Monkey_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0140\",\r\n    \"Label\": \"Moody blue shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Moody_Blue_Shirt_PG_Model.png\",\r\n    \"Price\": \"123\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0141\",\r\n    \"Label\": \"Mosaic shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Mosaic_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0142\",\r\n    \"Label\": \"MVP shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-MVP_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0143\",\r\n    \"Label\": \"Natty shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Natty_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0144\",\r\n    \"Label\": \"Nebula shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Nebula_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0145\",\r\n    \"Label\": \"Neo-classic knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Neo-Classic_Knit_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0146\",\r\n    \"Label\": \"New spring shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-New_Spring_Shirt_PG_Model.png\",\r\n    \"Price\": \"520\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0147\",\r\n    \"Label\": \"Nine-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Nine-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0148\",\r\n    \"Label\": \"No.1 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-No.1_Shirt_PG_Model.png\",\r\n    \"Price\": \"250\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0149\",\r\n    \"Label\": \"No.2 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-No.2_Shirt_PG_Model.png\",\r\n    \"Price\": \"250\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0150\",\r\n    \"Label\": \"No.3 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-No.3_Shirt_PG_Model.png\",\r\n    \"Price\": \"250\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0151\",\r\n    \"Label\": \"No.4 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-No.4_Shirt_PG_Model.png\",\r\n    \"Price\": \"250\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0152\",\r\n    \"Label\": \"No.5 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-No.5_Shirt_PG_Model.png\",\r\n    \"Price\": \"250\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0153\",\r\n    \"Label\": \"No.23 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-No.23_Shirt_PG_Model.png\",\r\n    \"Price\": \"250\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0154\",\r\n    \"Label\": \"No.67 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-No.67_Shirt_PG_Model.png\",\r\n    \"Price\": \"250\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0155\",\r\n    \"Label\": \"Noble shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Noble_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0156\",\r\n    \"Label\": \"Noodle shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Noodle_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0157\",\r\n    \"Label\": \"Oft-seen print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Oft-Seen_Print_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0158\",\r\n    \"Label\": \"One-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-One-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0159\",\r\n    \"Label\": \"Optical shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Optical_Shirt_PG_Model.png\",\r\n    \"Price\": \"430\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0160\",\r\n    \"Label\": \"Orange pinstripe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Orange_Pinstripe_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0161\",\r\n    \"Label\": \"Orange tie-dye\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Orange_Tie-Dye_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0162\",\r\n    \"Label\": \"Painter's smock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Painter's_Smock_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0163\",\r\n    \"Label\": \"Patched shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Patched_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Any villager\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0164\",\r\n    \"Label\": \"Patchwork top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Patchwork_Top_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0165\",\r\n    \"Label\": \"Paw shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Paw_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0166\",\r\n    \"Label\": \"Peachy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Peachy_Shirt_PG_Model.png\",\r\n    \"Price\": \"390\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0167\",\r\n    \"Label\": \"Pink tartan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Pink_Tartan_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0168\",\r\n    \"Label\": \"Polar fleece\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Polar_Fleece_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0169\",\r\n    \"Label\": \"Pop bloom shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Pop_Bloom_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0170\",\r\n    \"Label\": \"Prism shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Prism_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0171\",\r\n    \"Label\": \"Pulse shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Pulse_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0172\",\r\n    \"Label\": \"Purple tie-dye\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Purple_Tie-Dye_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0173\",\r\n    \"Label\": \"Puzzling shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Puzzling_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0174\",\r\n    \"Label\": \"Racer 6 shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Racer_6_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0175\",\r\n    \"Label\": \"Racer shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Racer_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0176\",\r\n    \"Label\": \"Rainbow shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Rainbow_Shirt_PG_Model.png\",\r\n    \"Price\": \"777\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0177\",\r\n    \"Label\": \"Rally shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Rally_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0178\",\r\n    \"Label\": \"Red aloha shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Red_Aloha_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Animal Island hut\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0179\",\r\n    \"Label\": \"Red bar shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Red_Bar_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0180\",\r\n    \"Label\": \"Red check shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Red_Check_Shirt_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0181\",\r\n    \"Label\": \"Red grid shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Red_Grid_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0182\",\r\n    \"Label\": \"Red scale shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Red_Scale_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0183\",\r\n    \"Label\": \"Red tie-dye\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Red_Tie-Dye_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0184\",\r\n    \"Label\": \"Ribbon shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Ribbon_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0185\",\r\n    \"Label\": \"Rickrack shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Rickrack_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0186\",\r\n    \"Label\": \"Rose shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Rose_Shirt_PG_Model.png\",\r\n    \"Price\": \"480\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0187\",\r\n    \"Label\": \"Rugby shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Rugby_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0188\",\r\n    \"Label\": \"Seven-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Seven-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0189\",\r\n    \"Label\": \"Sharp outfit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Sharp_Outfit_PG_Model.png\",\r\n    \"Price\": \"290\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0190\",\r\n    \"Label\": \"Sherbet gingham\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Sherbet_Gingham_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0191\",\r\n    \"Label\": \"Shirt circuit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Shirt_Circuit_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0192\",\r\n    \"Label\": \"Shortcake shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Shortcake_Shirt_PG_Model.png\",\r\n    \"Price\": \"330\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0193\",\r\n    \"Label\": \"Silk bloom shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Silk_Bloom_Shirt_PG_Model.png\",\r\n    \"Price\": \"480\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0194\",\r\n    \"Label\": \"Six-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Six-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0195\",\r\n    \"Label\": \"Ski sweater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Ski_Sweater_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0196\",\r\n    \"Label\": \"Skull shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Skull_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0197\",\r\n    \"Label\": \"Snappy print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Snappy_Print_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0198\",\r\n    \"Label\": \"Snow shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Snow_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0199\",\r\n    \"Label\": \"Snowcone shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Snowcone_Shirt_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0200\",\r\n    \"Label\": \"Spade shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Spade_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0201\",\r\n    \"Label\": \"Speedway shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Speedway_Shirt_PG_Model.png\",\r\n    \"Price\": \"290\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0202\",\r\n    \"Label\": \"Spiderweb shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Spiderweb_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0203\",\r\n    \"Label\": \"Splendid shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Splendid_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0204\",\r\n    \"Label\": \"Spring shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Spring_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0205\",\r\n    \"Label\": \"Spunky knit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Spunky_Knit_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0206\",\r\n    \"Label\": \"Star shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Star_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0207\",\r\n    \"Label\": \"Static shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Static_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0208\",\r\n    \"Label\": \"Stormy shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Stormy_Shirt_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0209\",\r\n    \"Label\": \"Straw shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Straw_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0210\",\r\n    \"Label\": \"Strawberry shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Strawberry_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0211\",\r\n    \"Label\": \"Striking outfit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Striking_Outfit_PG_Model.png\",\r\n    \"Price\": \"460\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0212\",\r\n    \"Label\": \"Subdued print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Subdued_Print_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0213\",\r\n    \"Label\": \"Sunset top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Sunset_Top_PG_Model.png\",\r\n    \"Price\": \"290\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0214\",\r\n    \"Label\": \"Swell shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Swell_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0215\",\r\n    \"Label\": \"Three-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Three-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0216\",\r\n    \"Label\": \"Thunder shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Thunder_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0217\",\r\n    \"Label\": \"Tiger print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Tiger_Print_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0218\",\r\n    \"Label\": \"Tiki shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Tiki_Shirt_PG_Model.png\",\r\n    \"Price\": \"400\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0219\",\r\n    \"Label\": \"Tin shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Tin_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0220\",\r\n    \"Label\": \"Toad print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Toad_Print_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0221\",\r\n    \"Label\": \"Trendy top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Trendy_Top_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0222\",\r\n    \"Label\": \"Tropical shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Tropical_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0223\",\r\n    \"Label\": \"Turnip top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Turnip_Top_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0224\",\r\n    \"Label\": \"Twinkle shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Twinkle_Shirt_PG_Model.png\",\r\n    \"Price\": \"480\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0225\",\r\n    \"Label\": \"Two-ball shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Two-Ball_Shirt_PG_Model.png\",\r\n    \"Price\": \"340\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0226\",\r\n    \"Label\": \"U R here shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-U_R_Here_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0227\",\r\n    \"Label\": \"Ugly shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Ugly_Shirt_PG_Model.png\",\r\n    \"Price\": \"420\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0228\",\r\n    \"Label\": \"Uncommon shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Uncommon_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0229\",\r\n    \"Label\": \"Vertigo shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Vertigo_Shirt_PG_Model.png\",\r\n    \"Price\": \"370\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0230\",\r\n    \"Label\": \"Vogue top\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Vogue_Top_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0231\",\r\n    \"Label\": \"Waffle shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Waffle_Shirt_PG_Model.png\",\r\n    \"Price\": \"430\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"clothing-0232\",\r\n    \"Label\": \"Watermelon shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Watermelon_Shirt_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0233\",\r\n    \"Label\": \"Wave print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Wave_Print_PG_Model.png\",\r\n    \"Price\": \"380\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0234\",\r\n    \"Label\": \"Wavy pink shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Wavy_Pink_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0235\",\r\n    \"Label\": \"Wavy tan shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Wavy_Tan_Shirt_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (fall)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0236\",\r\n    \"Label\": \"Whirly shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Whirly_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0237\",\r\n    \"Label\": \"White ring shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-White_Ring_Shirt_PG_Model.png\",\r\n    \"Price\": \"180\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0238\",\r\n    \"Label\": \"Windsock shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Windsock_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook (summer)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0239\",\r\n    \"Label\": \"Winter sweater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Winter_Sweater_PG_Model.png\",\r\n    \"Price\": \"290\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0240\",\r\n    \"Label\": \"Work uniform\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Work_Uniform_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Tom Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0241\",\r\n    \"Label\": \"Yellow bar shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Yellow_Bar_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0242\",\r\n    \"Label\": \"Yellow bolero\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Yellow_Bolero_PG_Model.png\",\r\n    \"Price\": \"430\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0243\",\r\n    \"Label\": \"Yellow pinstripe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Yellow_Pinstripe_PG_Model.png\",\r\n    \"Price\": \"360\",\r\n    \"Obtained\": \"Nook (winter)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0244\",\r\n    \"Label\": \"Yellow tartan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Yellow_Tartan_PG_Model.png\",\r\n    \"Price\": \"430\",\r\n    \"Obtained\": \"Nook (spring)\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0245\",\r\n    \"Label\": \"Yodel shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Yodel_Shirt_PG_Model.png\",\r\n    \"Price\": \"350\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0246\",\r\n    \"Label\": \"Zebra print\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Zebra_Print_PG_Model.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Gracie\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"clothing-0247\",\r\n    \"Label\": \"Zipper shirt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/clothing/64px-Zipper_Shirt_PG_Model.png\",\r\n    \"Price\": \"320\",\r\n    \"Obtained\": \"Nook\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"9e3885bc-77fd-2d63-8b32-8014d5566d6c","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":317,"y":427,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"8a069a9b-09f8-cbd8-4dda-bd6248f9c1c9","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-237,"y":-8,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('clothing-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Clothing Progress: ${count} / 247`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["2ca2210c-af8a-964d-9be3-1081a09132eb"]}},{"name":"/Collection Pages/Clothing/Clothing Logic","id":"559b5e6c-09cd-7776-cab1-e5a267564ad3","graph":{"connections":[{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-ID","toId":"a21976e7-ca73-9329-1076-569a2f71458a","toProperty":"in-ID"},{"fromId":"a21976e7-ca73-9329-1076-569a2f71458a","fromProperty":"out-ID","toId":"4600172a-c9c0-970c-191c-86ced21eca79","toProperty":"modelId"},{"fromId":"a21976e7-ca73-9329-1076-569a2f71458a","fromProperty":"out-Checked","toId":"4600172a-c9c0-970c-191c-86ced21eca79","toProperty":"prop-Checked"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Label","toId":"a21976e7-ca73-9329-1076-569a2f71458a","toProperty":"in-Label"},{"fromId":"1786b61b-cc14-061a-f2c8-cc36b14c3f12","fromProperty":"id","toId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","toProperty":"in-ID"},{"fromId":"1786b61b-cc14-061a-f2c8-cc36b14c3f12","fromProperty":"prop-Label","toId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","toProperty":"in-Label"},{"fromId":"1786b61b-cc14-061a-f2c8-cc36b14c3f12","fromProperty":"prop-Image","toId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","toProperty":"in-Icon"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Label","toId":"b3e1ae3e-3740-5d23-9fa6-a29e718dc4be","toProperty":"text"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Icon","toId":"dbd81f87-23e0-e863-4b94-c98021c2f723","toProperty":"src"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Price","toId":"aa085313-023d-48be-8175-22a72cf62344","toProperty":"text"},{"fromId":"1786b61b-cc14-061a-f2c8-cc36b14c3f12","fromProperty":"prop-Checked","toId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","toProperty":"in-Checked"},{"fromId":"1786b61b-cc14-061a-f2c8-cc36b14c3f12","fromProperty":"prop-Price","toId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","toProperty":"in-Price"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Price","toId":"a21976e7-ca73-9329-1076-569a2f71458a","toProperty":"in-Price"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Icon","toId":"a21976e7-ca73-9329-1076-569a2f71458a","toProperty":"in-Icon"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Checked","toId":"2f388960-1b96-780d-e4b3-8ec87e901f49","toProperty":"checked"},{"fromId":"2f388960-1b96-780d-e4b3-8ec87e901f49","fromProperty":"checked","toId":"a21976e7-ca73-9329-1076-569a2f71458a","toProperty":"in-Checked"},{"fromId":"2f388960-1b96-780d-e4b3-8ec87e901f49","fromProperty":"onChange","toId":"a21976e7-ca73-9329-1076-569a2f71458a","toProperty":"in-Changed"},{"fromId":"2f388960-1b96-780d-e4b3-8ec87e901f49","fromProperty":"onChange","toId":"4600172a-c9c0-970c-191c-86ced21eca79","toProperty":"store"},{"fromId":"1786b61b-cc14-061a-f2c8-cc36b14c3f12","fromProperty":"prop-Obtained","toId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","toProperty":"in-Obtained"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Obtained","toId":"a21976e7-ca73-9329-1076-569a2f71458a","toProperty":"in-Obtained"},{"fromId":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","fromProperty":"out-Obtained","toId":"5aabd664-3eda-35cf-7713-ce51a11d581d","toProperty":"text"}],"roots":[{"id":"95aa3c83-c3ad-8328-1c07-38e66a6f2978","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"418daa81-7c81-4c4b-a8e6-a4377984a26b","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3ead994b-9338-5231-d947-95e0717fd44d","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"aa56b8b4-41f3-f164-de1e-5752e9d8a800","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"04c9b01c-ea68-461a-28f6-698870d13f74","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"173b4ad0-f59c-3b69-9eb9-5943b0e8eab9","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"dfb64ee2-ff11-ae1f-a8f9-02c6b6c2ffaa","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"dbd81f87-23e0-e863-4b94-c98021c2f723","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b3e1ae3e-3740-5d23-9fa6-a29e718dc4be","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":26,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"51477f17-68c6-55e2-2de0-6505bfda7bf3","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2f388960-1b96-780d-e4b3-8ec87e901f49","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"checked":false},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"52ea516d-17ac-9903-9452-d51a0c958bca","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":40,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"59e410db-eae0-c44f-2237-286ed120635f","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"2d4e4a9f-6b66-557a-0953-b2dd946ccb2f","type":"Text","parameters":{"text":"Obtained from","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c55a3015-f538-67e5-8f6f-4595b2caf3e5","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"340f8426-7982-71d3-9a25-26993755a35b","type":"Image","parameters":{"src":"be","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"aa085313-023d-48be-8175-22a72cf62344","type":"Text","parameters":{"text":"Price","textAlignX":"center","marginTop":{"value":10,"unit":"px"},"maxHeight":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minWidth":{"value":50,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"5aabd664-3eda-35cf-7713-ce51a11d581d","type":"Text","parameters":{"text":"HRA Points","minWidth":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxHeight":{"value":50,"unit":"%"},"alignX":"center","marginTop":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"1786b61b-cc14-061a-f2c8-cc36b14c3f12","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"4600172a-c9c0-970c-191c-86ced21eca79","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"1b09ddac-1329-7b0b-2c58-7eced2c1d075","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a21976e7-ca73-9329-1076-569a2f71458a","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["95aa3c83-c3ad-8328-1c07-38e66a6f2978"]}},{"name":"/Collection Pages/Clothing/Clothing Logic/Options","id":"26383109-daa8-fac1-060a-9692a1ad74f8","graph":{"connections":[{"fromId":"8e5d1d63-4421-829f-4f04-2dd235f15209","fromProperty":"id","toId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","toProperty":"in-ID"},{"fromId":"8e5d1d63-4421-829f-4f04-2dd235f15209","fromProperty":"prop-Label","toId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","toProperty":"in-Label"},{"fromId":"8e5d1d63-4421-829f-4f04-2dd235f15209","fromProperty":"prop-Checked","toId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","toProperty":"in-Checked"},{"fromId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","fromProperty":"out-ID","toId":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","toProperty":"in-ID"},{"fromId":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","fromProperty":"out-ID","toId":"287f7d34-3a40-f064-e87d-76b256219d16","toProperty":"modelId"},{"fromId":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","fromProperty":"out-Checked","toId":"287f7d34-3a40-f064-e87d-76b256219d16","toProperty":"prop-Checked"},{"fromId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","fromProperty":"out-Label","toId":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","toProperty":"in-Label"},{"fromId":"8e5d1d63-4421-829f-4f04-2dd235f15209","fromProperty":"prop-Icon","toId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","toProperty":"in-Icon"},{"fromId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","fromProperty":"out-Icon","toId":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","toProperty":"in-Icon"},{"fromId":"287f7d34-3a40-f064-e87d-76b256219d16","fromProperty":"stored","toId":"4efed43f-606a-41e0-41ff-25cd3d40b1a2","toProperty":"Selection Changed"},{"fromId":"18dcba58-3f9c-1a9d-b231-473720fc6a93","fromProperty":"onChange","toId":"287f7d34-3a40-f064-e87d-76b256219d16","toProperty":"store"},{"fromId":"18dcba58-3f9c-1a9d-b231-473720fc6a93","fromProperty":"onChange","toId":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","toProperty":"in-Changed"},{"fromId":"18dcba58-3f9c-1a9d-b231-473720fc6a93","fromProperty":"checked","toId":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","toProperty":"in-Checked"},{"fromId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","fromProperty":"out-Checked","toId":"18dcba58-3f9c-1a9d-b231-473720fc6a93","toProperty":"checked"},{"fromId":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","fromProperty":"out-Label","toId":"18dcba58-3f9c-1a9d-b231-473720fc6a93","toProperty":"label"}],"roots":[{"id":"d15d1041-3bea-78c9-4e53-487a4862a8ad","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"18dcba58-3f9c-1a9d-b231-473720fc6a93","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8e5d1d63-4421-829f-4f04-2dd235f15209","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"287f7d34-3a40-f064-e87d-76b256219d16","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"3e1fd19b-3e0a-8ec5-3ea7-5f10733a3ac1","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"95d59c56-12e4-b6fb-053f-3c6b6c229aeb","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"4efed43f-606a-41e0-41ff-25cd3d40b1a2","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["d15d1041-3bea-78c9-4e53-487a4862a8ad"]}},{"name":"/Collection Pages/Daily/Daily","id":"67469284-fc27-38ae-ff7f-887140cca622","graph":{"connections":[],"roots":[{"id":"d1ae37b8-f792-5664-b35c-20663ab0553f","type":"Page","x":0,"y":0,"parameters":{"cssClassName":""},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Daily","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"daily","index":32}],"children":[{"id":"8f9ad1bf-21e6-ac68-ff86-dfc1e51a7f8c","type":"Group","parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"69a42bbf-ed6e-e855-44f7-eea28e9b2a45","type":"/Collection Pages/Daily/daily-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"08680fcc-5a98-3dc9-8ee2-96912248fb88","type":"Group","parameters":{"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"25f381fb-116a-76e3-255b-661abbb962f0","type":"/Collection Pages/Daily/Daily Tasks","parameters":{},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"796a2128-d660-af07-c3b1-18c459df3ac3","type":"PageInputs","x":-427,"y":220,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"dcea7925-c868-aed1-7e04-949d058bae93","type":"JavaScriptFunction","label":"Play Audio File","x":-275,"y":-95,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"29dee749-687e-6730-1cf2-ffbbf9d5e7fc","type":"JavaScriptFunction","label":"Play Audio File","x":-249,"y":29,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["d1ae37b8-f792-5664-b35c-20663ab0553f"]}},{"name":"/Collection Pages/Daily/Daily Events","id":"b9625a51-7422-56f3-c671-15261ebf1ff2","graph":{"connections":[{"fromId":"68712ff0-94d5-e30b-868c-1efcca10aec2","fromProperty":"items","toId":"230f8963-edce-eaf7-095d-5095f272bc34","toProperty":"in-Items"},{"fromId":"230f8963-edce-eaf7-095d-5095f272bc34","fromProperty":"out-Event","toId":"4be65047-c0b8-1f16-fa49-8b3ae475dc87","toProperty":"text"}],"roots":[{"id":"8c826cb6-4d77-9531-ba38-a99e1f89adcc","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Daily Events","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"daily-events","index":32}],"children":[{"id":"44f23b8f-89e9-b827-de67-c6eaaceb938a","type":"Group","label":"Daily Fossil Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"cssClassName":"slideup","marginBottom":{"value":0,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"af6f0450-f86d-e4fe-cf14-1bbe23e8053d","type":"Group","label":"Daily Fossil","parameters":{"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"sizeMode":"contentHeight","backgroundColor":"#E5C7FF","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":53,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"flexDirection":"row","marginLeft":{"value":16,"unit":"px"},"paddingRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b973bae8-6675-0c6a-e4ae-d4d0fed6321b","type":"Group","label":"","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-15,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"position":"absolute","marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":62,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0ccc21b7-70db-9920-ee7b-40c2c76dd1f7","type":"Image","label":"Museum","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/event.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"b3468ea5-1f85-9420-7694-11723e91f544","type":"Text","parameters":{"text":"Today's Events","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8fefd3fc-31e5-df9e-762c-a9211172f478","type":"Group","label":"Misc. 4","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":25,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"borderStyle":"solid","borderColor":"Nook Tan Dark","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","marginBottom":{"value":-45,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4be65047-c0b8-1f16-fa49-8b3ae475dc87","type":"Text","parameters":{"textAlignX":"center","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"Nookmiles Brown","alignY":"center","sizeMode":"contentHeight","marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]}]},{"id":"bdea5f9a-da10-3471-b27a-0629530e2207","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"c39b082c-f2b2-f96d-e77d-ecbdbb12a0f8","type":"JavaScriptFunction","label":"Play Audio File","x":-280,"y":-174,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"68712ff0-94d5-e30b-868c-1efcca10aec2","type":"Collection2","x":-549,"y":388,"parameters":{"items":"[\r\n  {\"id\": \"event-0001\", \"label\": \"New Year's Day\", \"date\": \"2024-01-01T00:00:00.000Z\"},\r\n  {\"id\": \"event-0002\", \"label\": \"Tortimer's Vacation\", \"date\": \"2024-01-15T00:00:00.000Z\"}, \r\n  {\"id\": \"event-0003\", \"label\": \"Groundhog Day\", \"date\": \"2024-02-02T00:00:00.000Z\"},\r\n  {\"id\": \"event-0004\", \"label\": \"Valentine's Day\", \"date\": \"2024-02-14T00:00:00.000Z\"},\r\n  {\"id\": \"event-0005\", \"label\": \"Sports Fair\", \"date\": \"2024-03-20T00:00:00.000Z\"},\r\n  {\"id\": \"event-0006\", \"label\": \"April Fool's Day\", \"date\": \"2024-04-01T00:00:00.000Z\"},\r\n  {\"id\": \"event-0007\", \"label\": \"Cherry Blossom Festival\", \"date\": \"2024-04-05T00:00:00.000Z\"},\r\n  {\"id\": \"event-0008\", \"label\": \"Nature Day\", \"date\": \"2024-04-22T00:00:00.000Z\"},\r\n  {\"id\": \"event-0009\", \"label\": \"Spring Cleaning\", \"date\": \"2024-05-01T00:00:00.000Z\"},\r\n  {\"id\": \"event-0010\", \"label\": \"Mother's Day\", \"date\": \"2024-05-12T00:00:00.000Z\"},\r\n  {\"id\": \"event-0011\", \"label\": \"Fishing Tourney\", \"date\": \"2024-06-02T00:00:00.000Z\"},\r\n  {\"id\": \"event-0012\", \"label\": \"Graduation Day\", \"date\": \"2024-06-14T00:00:00.000Z\"},\r\n  {\"id\": \"event-0013\", \"label\": \"Father's Day\", \"date\": \"2024-06-16T00:00:00.000Z\"},\r\n  {\"id\": \"event-0014\", \"label\": \"Fireworks Show\", \"date\": \"2024-07-04T00:00:00.000Z\"},\r\n  {\"id\": \"event-0015\", \"label\": \"Morning Aerobics\", \"date\": \"2024-07-25T00:00:00.000Z\"},\r\n  {\"id\": \"event-0016\", \"label\": \"Hometown Day\", \"date\": \"2024-07-20T00:00:00.000Z\"},\r\n  {\"id\": \"event-0017\", \"label\": \"Meteor shower\", \"date\": \"2024-08-12T00:00:00.000Z\"},\r\n  {\"id\": \"event-0018\", \"label\": \"Founder's Day\", \"date\": \"2024-08-21T00:00:00.000Z\"},\r\n  {\"id\": \"event-0019\", \"label\": \"Labor Day\", \"date\": \"2024-09-02T00:00:00.000Z\"},\r\n  {\"id\": \"event-0020\", \"label\": \"Harvest Moon Festival\", \"date\": \"2024-09-23T00:00:00.000Z\"},\r\n  {\"id\": \"event-0021\", \"label\": \"Explorer's Day\", \"date\": \"2024-10-14T00:00:00.000Z\"},\r\n  {\"id\": \"event-0022\", \"label\": \"Mushrooming Season\", \"date\": \"2024-10-15T00:00:00.000Z\"},\r\n  {\"id\": \"event-0023\", \"label\": \"Halloween\", \"date\": \"2024-10-31T00:00:00.000Z\"},\r\n  {\"id\": \"event-0024\", \"label\": \"Mayor's Day\", \"date\": \"2024-11-05T00:00:00.000Z\"},\r\n  {\"id\": \"event-0025\", \"label\": \"Officer's Day\", \"date\": \"2024-11-11T00:00:00.000Z\"},\r\n  {\"id\": \"event-0026\", \"label\": \"Harvest Festival\", \"date\": \"2024-11-28T00:00:00.000Z\"},\r\n  {\"id\": \"event-0027\", \"label\": \"Sale Day\", \"date\": \"2024-11-29T00:00:00.000Z\"},\r\n  {\"id\": \"event-0028\", \"label\": \"Snow Day\", \"date\": \"2024-12-01T00:00:00.000Z\"},\r\n  {\"id\": \"event-0029\", \"label\": \"Toy Day\", \"date\": \"2024-12-23T00:00:00.000Z\"},\r\n  {\"id\": \"event-0030\", \"label\": \"New Year's Eve\", \"date\": \"2024-12-31T00:00:00.000Z\"}\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"230f8963-edce-eaf7-095d-5095f272bc34","type":"JavaScriptFunction","label":"Event Checker","x":-247,"y":392,"parameters":{"functionScript":"// Define inputs\nconst items = Inputs.Items || [];\n\n// Get today's date and reset time to midnight\nconst today = new Date();\ntoday.setHours(0, 0, 0, 0);\n\n// Function to set the output and success/failure state\nfunction setOutput(result) {\n    Outputs.Event = result;\n    Outputs.Success();\n}\n\n// Iterate through the items to find any event happening today\nlet eventFound = false;\n\nfor (let i = 0; i < items.length; i++) {\n    const eventDate = new Date(items[i].date);\n    eventDate.setHours(0, 0, 0, 0);\n\n    if (today.getTime() === eventDate.getTime()) {\n        setOutput(items[i].label);\n        eventFound = true;\n        break;\n    }\n}\n\n// If no event is found, output \"No events today.\"\nif (!eventFound) {\n    setOutput(\"No events today.\");\n}\n"},"ports":[],"dynamicports":[{"name":"in-Items","displayName":"Items","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Event","displayName":"Event","plug":"output","type":"*","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"input of id, label, date.  Output any lines matching today's date.  Output should be \"event\".  If nothing matches today's date, output \"No events today.\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.Id || '';\nconst label = Inputs.Label || '';\nconst date = Inputs.Date || '';\n\n// Check if inputs are valid\nif (!id || !label || !date) throw new Error('Invalid inputs');\n\n// Get today's date\nconst today = new Date();\ntoday.setHours(0, 0, 0, 0);\n\n// Convert input date to Date object\nconst eventDate = new Date(date);\neventDate.setHours(0, 0, 0, 0);\n\n// Compare dates\nif (today.getTime() === eventDate.getTime()) {\n  Outputs.Event = `Event ID: ${id}, Label: ${label}, Date: ${date}`;\n  Outputs.Success();\n} else {\n  Outputs.Event = 'No events today.';\n  Outputs.Failure();\n}\n"},"snowflakeId":"0191773e2029-rc9sif","type":"user"},{"type":"assistant","content":"\nThis function checks if there is an event scheduled for today. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.Id</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Date</span> as inputs. It first validates these inputs. Then, it gets today's date and sets the time to midnight. It does the same for the input date. \n\nAfterwards, it compares the two dates. If they are the same, it outputs the event details in the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Event</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf they are not the same, it outputs \"No events today.\" in the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Event</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191773e5b5d-xa9hry","metadata":{}},{"content":"Change inputs to a single input \"items\" which will load all 3 of those from the same input.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define inputs\nconst items = Inputs.Items || {};\n\n// Extract id, label, and date from items\nconst id = items.Id || '';\nconst label = items.Label || '';\nconst date = items.Date || '';\n\n// Check if inputs are valid\nif (!id || !label || !date) throw new Error('Invalid inputs');\n\n// Get today's date\nconst today = new Date();\ntoday.setHours(0, 0, 0, 0);\n\n// Convert input date to Date object\nconst eventDate = new Date(date);\neventDate.setHours(0, 0, 0, 0);\n\n// Compare dates\nif (today.getTime() === eventDate.getTime()) {\n  Outputs.Event = `Event ID: ${id}, Label: ${label}, Date: ${date}`;\n  Outputs.Success();\n} else {\n  Outputs.Event = 'No events today.';\n  Outputs.Failure();\n}\n"},"snowflakeId":"0191773f8be2-fzxan3","type":"user"},{"type":"assistant","content":"\nThis function checks if there is an event today based on the provided inputs. \n\nIt takes a single input, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Items</span>, which is an object containing 'Id', 'Label', and 'Date'. It extracts these properties from the input object and checks if they are valid. \n\nIf the inputs are valid, it gets the current date and compares it with the input date. If they match, it constructs an event string with the id, label, and date, sets this as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Event</span> output, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the dates do not match, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Event</span> output to 'No events today.' and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191773fbd81-82abis","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["8c826cb6-4d77-9531-ba38-a99e1f89adcc"]}},{"name":"/Collection Pages/Daily/Daily Fossil","id":"7c9b2da9-a760-38d4-fb80-f58fe869ddde","graph":{"connections":[{"fromId":"05244e11-24ac-a007-18f9-f3567f0afcb6","fromProperty":"items","toId":"a0bef541-468e-6806-052a-c3bdb9b47e36","toProperty":"items"}],"roots":[{"id":"26ddc813-1554-9be1-62dd-5823c80d5821","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Daily Fossil","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"daily-fossil","index":32}],"children":[{"id":"d7c150a1-7f5a-4cc4-6ea9-f233e0af6fe5","type":"Group","label":"Daily Fossil Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"cssClassName":"slideup","marginBottom":{"value":0,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"55219ee2-18a2-fc21-643f-188166817cbc","type":"Group","label":"Daily Fossil","parameters":{"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"sizeMode":"contentHeight","backgroundColor":"#E5C7FF","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"flexDirection":"row","marginLeft":{"value":16,"unit":"px"},"paddingRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7274a072-4412-1295-eca4-b8a091c4d99b","type":"Group","label":"","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"position":"relative","marginLeft":{"value":0,"unit":"px"},"marginBottom":{"value":62,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"258be06b-4e34-47ad-2550-6390b326eafd","type":"Image","label":"Museum","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/fossil_bones.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"6fe1c0ca-dc07-598c-d9a2-265b755880c6","type":"Text","parameters":{"text":"Daily Fossils","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f8343c61-1b55-d699-4b20-42cbdd7ca6c7","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","alignX":"left","position":"absolute"},"ports":[],"dynamicports":[],"children":[{"id":"a0bef541-468e-6806-052a-c3bdb9b47e36","type":"For Each","parameters":{"template":"/Collection Pages/Daily/Daily Fossil Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]}]},{"id":"a6588114-d12c-a805-39d9-b35beb666777","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"05244e11-24ac-a007-18f9-f3567f0afcb6","type":"Collection2","label":"Daily Fossil Array","x":-247,"y":476,"parameters":{"items":"[\r\n    {\r\n        \"id\":  \"dailyfossil-0001\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailyfossil-0002\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailyfossil-0003\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailyfossil-0004\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailyfossil-0005\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"4ecdb179-e46e-f178-e7f9-d0560ed51b21","type":"JavaScriptFunction","label":"Play Audio File","x":-280,"y":-174,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["26ddc813-1554-9be1-62dd-5823c80d5821"]}},{"name":"/Collection Pages/Daily/Daily Fossil Logic","id":"70ac4a76-db1c-76bd-7f90-242834e729ac","graph":{"connections":[{"fromId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","fromProperty":"out-ID","toId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","toProperty":"in-ID"},{"fromId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","fromProperty":"out-ID","toId":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","toProperty":"modelId"},{"fromId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","fromProperty":"out-Checked","toId":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","toProperty":"prop-Checked"},{"fromId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","fromProperty":"id","toId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","toProperty":"in-ID"},{"fromId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","fromProperty":"prop-Label","toId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","toProperty":"in-Label"},{"fromId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","fromProperty":"prop-Checked","toId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","toProperty":"in-Checked"},{"fromId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","fromProperty":"prop-Image","toId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","toProperty":"in-Icon"},{"fromId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","fromProperty":"prop-Price","toId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","toProperty":"in-Price"},{"fromId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","fromProperty":"prop-Obtained","toId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","toProperty":"in-Obtained"},{"fromId":"2661c29b-95bf-5d51-bfed-00953409dc03","fromProperty":"onChange","toId":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","toProperty":"store"},{"fromId":"2661c29b-95bf-5d51-bfed-00953409dc03","fromProperty":"onChange","toId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","toProperty":"in-Changed"},{"fromId":"2661c29b-95bf-5d51-bfed-00953409dc03","fromProperty":"checked","toId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","toProperty":"in-Checked"},{"fromId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","fromProperty":"out-Checked","toId":"2661c29b-95bf-5d51-bfed-00953409dc03","toProperty":"checked"},{"fromId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","fromProperty":"out-Date","toId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","toProperty":"in-Date"},{"fromId":"2661c29b-95bf-5d51-bfed-00953409dc03","fromProperty":"onChange","toId":"08f765c8-36cc-ff65-5611-48ab7bf58e46","toProperty":"run"}],"roots":[{"id":"7626d385-a3bf-f714-d1a1-b109e3bdb0f4","type":"Group","label":"Group","x":5,"y":7,"parameters":{"borderWidth":{"value":3,"unit":"px"},"justifyContent":"center","alignItems":"center","alignY":"center","alignX":"center","marginTop":{"value":39,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"borderColor":"Nook Tan Dark"},"ports":[],"dynamicports":[],"children":[{"id":"2661c29b-95bf-5d51-bfed-00953409dc03","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/fossil.png","iconSize":{"value":48,"unit":"px"},"alignX":"center","alignY":"center","width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","type":"Model2","x":-976.3167870105354,"y":-176.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Obtained,Checked,id"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":18}],"children":[]},{"id":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","type":"JavaScriptFunction","label":"Database Query Error","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\nconst obtained = Inputs.Obtained || ''; // Added obtained\nconst price = Inputs.Price || ''; // Added price\n\n// Function to get the current date in the desired format\nfunction getCurrentDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, '0');\n    const day = String(today.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n}\n\n// Function to load data from localStorage and check the date\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        const parsedData = JSON.parse(storedData);\n        const currentDate = getCurrentDate();\n        if (parsedData.date !== currentDate) {\n            // If the stored date is not today, delete the key from localStorage\n            localStorage.removeItem(id);\n            callback(null);\n        } else {\n            callback(parsedData);\n        }\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Obtained = obtained; // Added obtained\n    Outputs.Price = price; // Added price\n    Outputs.Date = getCurrentDate(); // Added current date\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Obtained = result.obtained || ''; // Added obtained handling\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Date = getCurrentDate(); // Added current date\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":11},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Date","displayName":"Date","plug":"output","type":"*","group":"Outputs","index":18}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst date = Inputs.Date || ''; // Added date\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.date !== selection.date) { // Added date comparison\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Date = date; // Added date\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, date }; // Added date\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Date","displayName":"Date","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Date","displayName":"Date","plug":"output","type":"*","group":"Outputs","index":22}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"08f765c8-36cc-ff65-5611-48ab7bf58e46","type":"JavaScriptFunction","label":"Play Audio File","x":309,"y":296,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["7626d385-a3bf-f714-d1a1-b109e3bdb0f4"]}},{"name":"/Collection Pages/Daily/Daily Fossil Logic/Options","id":"37417c65-61c6-1bb2-4130-52826f3dfb22","graph":{"connections":[{"fromId":"10a80829-4f62-2aca-1d8c-9772b6d3e677","fromProperty":"id","toId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","toProperty":"in-ID"},{"fromId":"10a80829-4f62-2aca-1d8c-9772b6d3e677","fromProperty":"prop-Label","toId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","toProperty":"in-Label"},{"fromId":"10a80829-4f62-2aca-1d8c-9772b6d3e677","fromProperty":"prop-Checked","toId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","toProperty":"in-Checked"},{"fromId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","fromProperty":"out-ID","toId":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","toProperty":"in-ID"},{"fromId":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","fromProperty":"out-ID","toId":"45056d2d-62b6-a94f-cb67-32f1c8a2fe89","toProperty":"modelId"},{"fromId":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","fromProperty":"out-Checked","toId":"45056d2d-62b6-a94f-cb67-32f1c8a2fe89","toProperty":"prop-Checked"},{"fromId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","fromProperty":"out-Label","toId":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","toProperty":"in-Label"},{"fromId":"10a80829-4f62-2aca-1d8c-9772b6d3e677","fromProperty":"prop-Icon","toId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","toProperty":"in-Icon"},{"fromId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","fromProperty":"out-Icon","toId":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","toProperty":"in-Icon"},{"fromId":"45056d2d-62b6-a94f-cb67-32f1c8a2fe89","fromProperty":"stored","toId":"d480469a-9df5-61fd-7e06-d4e39214741e","toProperty":"Selection Changed"},{"fromId":"2a3fc237-9ffd-7317-ad61-e8df90503fc9","fromProperty":"onChange","toId":"45056d2d-62b6-a94f-cb67-32f1c8a2fe89","toProperty":"store"},{"fromId":"2a3fc237-9ffd-7317-ad61-e8df90503fc9","fromProperty":"onChange","toId":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","toProperty":"in-Changed"},{"fromId":"2a3fc237-9ffd-7317-ad61-e8df90503fc9","fromProperty":"checked","toId":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","toProperty":"in-Checked"},{"fromId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","fromProperty":"out-Checked","toId":"2a3fc237-9ffd-7317-ad61-e8df90503fc9","toProperty":"checked"},{"fromId":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","fromProperty":"out-Label","toId":"2a3fc237-9ffd-7317-ad61-e8df90503fc9","toProperty":"label"}],"roots":[{"id":"76a70878-547f-2c83-3cf9-aa6ebc9afdf0","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"2a3fc237-9ffd-7317-ad61-e8df90503fc9","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"10a80829-4f62-2aca-1d8c-9772b6d3e677","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"45056d2d-62b6-a94f-cb67-32f1c8a2fe89","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"4ff88821-5a1b-5d35-26a8-8727f171e3e5","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"b2cad2f5-9edc-7be6-253a-c4d87db9a659","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"d480469a-9df5-61fd-7e06-d4e39214741e","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["76a70878-547f-2c83-3cf9-aa6ebc9afdf0"]}},{"name":"/Collection Pages/Daily/Daily Misc","id":"a8e9c040-a68e-0918-6bb3-efaff3bf4326","graph":{"connections":[{"fromId":"813a2239-985e-d518-f451-88dd71c3522b","fromProperty":"items","toId":"9162eca9-a1c8-4299-bfa1-4d8e627d1d0f","toProperty":"in-ObjectArray"},{"fromId":"7e1f2dc7-cb61-08d6-d54c-37c9e47f5f55","fromProperty":"items","toId":"06f2d81f-2890-9054-804d-59995791d5b7","toProperty":"items"}],"roots":[{"id":"cddb03d6-8849-8d7f-b20b-07ee25203e52","type":"Group","x":0,"y":0,"parameters":{"width":{"value":100,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"14313e81-2089-267b-f6e9-4284ab305937","type":"Group","label":"Misc. Tasks","parameters":{"alignX":"center","alignY":"center","backgroundColor":"#E5C7FF","borderRadius":{"value":12,"unit":"px"},"flexDirection":"row","marginTop":{"value":8,"unit":"px"},"marginLeft":{"value":16,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"paddingBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"e32670c3-0db0-b4ec-b09f-329de7b8edcb","type":"Group","label":"Misc Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-12,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"position":"absolute","marginLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"5fceba3f-5dd3-5f73-7574-a6cbb40b2987","type":"Image","label":"Misc.Tasks","parameters":{"src":"images/leaf.png","sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e3643b8c-58b9-1b2d-a6ec-fc592fda2c73","type":"Text","parameters":{"text":"Misc. Tasks\n","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"4af546bf-2ee0-5cb5-8aed-8c9a26f30613","type":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","alignX":"left","position":"relative","marginBottom":{"value":25,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"06f2d81f-2890-9054-804d-59995791d5b7","type":"For Each","parameters":{"template":"/Collection Pages/Daily/Daily Misc Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"9162eca9-a1c8-4299-bfa1-4d8e627d1d0f","type":"JavaScriptFunction","label":"Array Conversion/Filtering","x":-271.1122449705281,"y":683.8299361011565,"parameters":{"functionScript":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Filter the array to only include objects where Checked is true\n  const savedSelection = objectArray.filter(object => object.Checked === true);\n\n  // Output the filtered array of objects\n  Outputs.SavedSelection = savedSelection;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-ObjectArray","displayName":"ObjectArray","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-StringArray","displayName":"StringArray","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-ObjectArray","displayName":"ObjectArray","plug":"output","type":"*","group":"Outputs","index":9},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":10}],"children":[],"metadata":{"prompt":{"history":[{"content":"Convert array of objects to array of strings","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => JSON.stringify(object));\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"0191009d8ea1-bsdwo2","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, converts each object into a string using JSON.stringify, and outputs an array of these strings to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output. \n\nIf the input array is empty, it throws an error. \n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf any error occurs during the operation, it outputs the error to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191009dbcca-9xvg1r","metadata":{}},{"content":"I need StringArray to only have Labels and ObjectArray (a new one) that sends all unfiltered options","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100bf0fa8-v18ano","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, checks if the array is not empty, and then converts each object in the array to a string by extracting the 'Label' property from each object. The resulting array of strings is then outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output.\n\nThe original unfiltered array of objects is also outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ObjectArray</span> output.\n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there's an error during the operation, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output with the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019100bf3215-q6ix0y","metadata":{}},{"content":"Create new output \"SavedSelection\" to pass \"Checked: True\" ","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Filter the array to only include objects where Checked is true\n  const savedSelection = objectArray.filter(object => object.Checked === true);\n\n  // Output the filtered array of objects\n  Outputs.SavedSelection = savedSelection;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a74f6f7-cvxajl","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, checks if the array is not empty, and then performs two operations on it.\n\nFirst, it converts each object in the array to a string using the 'Label' property of the object and stores these strings in a new array. This new array is then outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output.\n\nSecond, it filters the input array to only include objects where the 'Checked' property is true. This filtered array is then outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.SavedSelection</span> output.\n\nThe function also outputs the original unfiltered array of objects through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ObjectArray</span> output.\n\nIf the function executes successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there's an error during the execution, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output with the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a7526e9-kljtqr","metadata":{}},{"content":"Undo that last change\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Filter the array to only include objects where Checked is true\n  const savedSelection = objectArray.filter(object => object.Checked === true);\n\n  // Output the filtered array of objects\n  Outputs.SavedSelection = savedSelection;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a7667c3-kbpcsr","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, converts each object to a string, and outputs the new array of strings via the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output.\n\nIt also filters the input array to only include objects where the property 'Checked' is true, and outputs this filtered array via the <span style=\"color: var(--base-color-yellow-400);\">Outputs.SavedSelection</span> output.\n\nThe original unfiltered array of objects is output via the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ObjectArray</span> output.\n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there's an error during the operation, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output with the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a76a319-ct9g8o","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d44be9f5-c3a0-7d36-8c12-8638d88a5934","type":"JavaScriptFunction","label":"Extract Icon Strings from Object Array","x":721.2926954210375,"y":1274.932335229585,"parameters":{"functionScript":"// Default icon URL\nconst defaultIcon = 'https://acgc.sterner.digital/images/question_mark.png';\n\n// Get all localStorage keys that start with 'v-' and sort them numerically\nfunction getSortedVKeys() {\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith('v-')) {\n            keys.push(key);\n        }\n    }\n\n    // Sort keys numerically based on their suffix\n    keys.sort((a, b) => {\n        const numA = parseInt(a.substring(2), 10); // Extract numerical part\n        const numB = parseInt(b.substring(2), 10); // Extract numerical part\n        return numA - numB;\n    });\n\n    return keys;\n}\n\n// Function to process and output icon strings\nfunction processIcons() {\n    try {\n        // Retrieve and sort 'v-' keys from localStorage\n        const sortedKeys = getSortedVKeys();\n\n        // Map through the sorted keys and extract icon values\n        const iconStrings = sortedKeys.slice(0, 15).map(key => {\n            const storedData = localStorage.getItem(key);\n            if (storedData) {\n                try {\n                    const parsedData = JSON.parse(storedData);\n                    return parsedData.icon || defaultIcon;\n                } catch (error) {\n                    console.error(`Error parsing JSON for key ${key}:`, error);\n                    return defaultIcon;\n                }\n            } else {\n                return defaultIcon;\n            }\n        });\n\n        // Output the icon strings to separate outputs explicitly\n        Outputs.IconStrings1 = iconStrings[0] || defaultIcon;\n        Outputs.IconStrings2 = iconStrings[1] || defaultIcon;\n        Outputs.IconStrings3 = iconStrings[2] || defaultIcon;\n        Outputs.IconStrings4 = iconStrings[3] || defaultIcon;\n        Outputs.IconStrings5 = iconStrings[4] || defaultIcon;\n        Outputs.IconStrings6 = iconStrings[5] || defaultIcon;\n        Outputs.IconStrings7 = iconStrings[6] || defaultIcon;\n        Outputs.IconStrings8 = iconStrings[7] || defaultIcon;\n        Outputs.IconStrings9 = iconStrings[8] || defaultIcon;\n        Outputs.IconStrings10 = iconStrings[9] || defaultIcon;\n        Outputs.IconStrings11 = iconStrings[10] || defaultIcon;\n        Outputs.IconStrings12 = iconStrings[11] || defaultIcon;\n        Outputs.IconStrings13 = iconStrings[12] || defaultIcon;\n        Outputs.IconStrings14 = iconStrings[13] || defaultIcon;\n        Outputs.IconStrings15 = iconStrings[14] || defaultIcon;\n\n        // Trigger the refresh output with a unique value\n        Outputs.RefreshNode = new Date().getTime();\n\n        // Debug log output\n        Outputs.DebugLog = \"Function executed at \" + new Date().toISOString();\n\n        // Signal success\n        Outputs.Success();\n    } catch (error) {\n        // Handle error and set default outputs\n        Outputs.error = error.message;\n        Outputs.IconStrings1 = defaultIcon;\n        Outputs.IconStrings2 = defaultIcon;\n        Outputs.IconStrings3 = defaultIcon;\n        Outputs.IconStrings4 = defaultIcon;\n        Outputs.IconStrings5 = defaultIcon;\n        Outputs.IconStrings6 = defaultIcon;\n        Outputs.IconStrings7 = defaultIcon;\n        Outputs.IconStrings8 = defaultIcon;\n        Outputs.IconStrings9 = defaultIcon;\n        Outputs.IconStrings10 = defaultIcon;\n        Outputs.IconStrings11 = defaultIcon;\n        Outputs.IconStrings12 = defaultIcon;\n        Outputs.IconStrings13 = defaultIcon;\n        Outputs.IconStrings14 = defaultIcon;\n        Outputs.IconStrings15 = defaultIcon;\n\n        // Signal failure\n        Outputs.Failure();\n    }\n}\n\n// Event listener for localStorage changes from other windows or tabs\nwindow.addEventListener('storage', function(event) {\n    if (event.storageArea === localStorage) {\n        processIcons();\n    }\n});\n\n// Check for input trigger to run processIcons\nif (Inputs.Trigger) {\n    processIcons();\n}\n\n// Call the function initially to populate outputs\nprocessIcons();\n"},"ports":[],"dynamicports":[{"name":"in-Trigger","displayName":"Trigger","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-IconStrings1","displayName":"IconStrings1","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-IconStrings2","displayName":"IconStrings2","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-IconStrings3","displayName":"IconStrings3","plug":"output","type":"*","group":"Outputs","index":9},{"name":"out-IconStrings4","displayName":"IconStrings4","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-IconStrings5","displayName":"IconStrings5","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-IconStrings6","displayName":"IconStrings6","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-IconStrings7","displayName":"IconStrings7","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-IconStrings8","displayName":"IconStrings8","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-IconStrings9","displayName":"IconStrings9","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-IconStrings10","displayName":"IconStrings10","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-IconStrings11","displayName":"IconStrings11","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-IconStrings12","displayName":"IconStrings12","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-IconStrings13","displayName":"IconStrings13","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-IconStrings14","displayName":"IconStrings14","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-IconStrings15","displayName":"IconStrings15","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-RefreshNode","displayName":"RefreshNode","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-DebugLog","displayName":"DebugLog","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"prompt":{"history":[{"content":"Extract Icon strings from ObjectAray","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the object array is not empty\nif (!objectArray.length) throw new Error('Object array is empty');\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map(obj => obj.icon);\n\n  // Output the icon strings\n  Outputs.IconStrings = iconStrings;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal failure\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100cba2ee-np7rmq","type":"user"},{"type":"assistant","content":"\nThis function extracts icon strings from an array of objects. \n\nIt takes an array of objects as input through <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span>. It then iterates over this array, extracting the 'icon' property from each object and storing these in a new array. \n\nThe resulting array of icon strings is then output through <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings</span>. \n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error during the process, it sets the error message to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019100cbc5b5-lw48qc","metadata":{}},{"content":"It's outputting Null when it should be outputting Icon's string","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the object array is not empty\nif (!objectArray.length) throw new Error('Object array is empty');\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map(obj => {\n    // Check if the object has the property \"icon\"\n    if (!obj.hasOwnProperty('icon')) {\n      throw new Error('Object does not have property \"icon\"');\n    }\n    return obj.icon;\n  });\n\n  // Output the icon strings\n  Outputs.IconStrings = iconStrings;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal failure\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100cd3bf8-at6rps","type":"user"},{"type":"assistant","content":"\nThis function extracts the \"icon\" property values from an array of objects and outputs them as an array of strings. \n\nIt takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input. It then checks if the array is not empty. If it is, it throws an error. \n\nNext, it maps through the array and for each object, it checks if the \"icon\" property exists. If it doesn't, it throws an error. If it does, it adds the value of the \"icon\" property to a new array. \n\nThe function then outputs this new array of icon strings through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings</span> output and signals success through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nIf there's an error at any point during the process, it outputs the error through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and signals failure through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output.\n","snowflakeId":"019100cd6bd1-0r5579","metadata":{}},{"content":"The property we want is \"Icons\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the object array is not empty\nif (!objectArray.length) throw new Error('Object array is empty');\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map(obj => {\n    // Check if the object has the property \"Icons\"\n    if (!obj.hasOwnProperty('Icons')) {\n      throw new Error('Object does not have property \"Icons\"');\n    }\n    return obj.Icons;\n  });\n\n  // Output the icon strings\n  Outputs.IconStrings = iconStrings;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal failure\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100ce2c29-yrc3rv","type":"user"},{"type":"assistant","content":"\nThis function extracts the \"Icons\" property from an array of objects.\n\nIt takes an array of objects as input through <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span>. It then iterates over each object in the array, checks if the object has a property named \"Icons\", and if it does, it adds the value of the \"Icons\" property to a new array.\n\nThe new array of icon strings is then output through <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings</span>. If the function successfully extracts the icon strings from all objects in the array, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the input array is empty or if any object in the array does not have the \"Icons\" property, the function outputs an error message through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019100ce532a-7ox1js","metadata":{}},{"content":"When updated data is received, all attached checkboxes should refresh.","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\ntry {\n  // Map through the object array and extract the checkbox states\n  const checkboxStates = objectArray.map((obj, index) => {\n    // Check if the object has the property \"Checkbox\"\n    if (obj && obj.Checkbox !== undefined && obj.Checkbox !== null) {\n      return obj.Checkbox;\n    } else {\n      return false; // Default state for checkbox is unchecked\n    }\n  });\n\n  // Output the checkbox states to separate outputs explicitly\n  Outputs.CheckboxState1 = checkboxStates[0] || false;\n  Outputs.CheckboxState2 = checkboxStates[1] || false;\n  Outputs.CheckboxState3 = checkboxStates[2] || false;\n  Outputs.CheckboxState4 = checkboxStates[3] || false;\n  Outputs.CheckboxState5 = checkboxStates[4] || false;\n  Outputs.CheckboxState6 = checkboxStates[5] || false;\n  Outputs.CheckboxState7 = checkboxStates[6] || false;\n  Outputs.CheckboxState8 = checkboxStates[7] || false;\n  Outputs.CheckboxState9 = checkboxStates[8] || false;\n  Outputs.CheckboxState10 = checkboxStates[9] || false;\n  Outputs.CheckboxState11 = checkboxStates[10] || false;\n  Outputs.CheckboxState12 = checkboxStates[11] || false;\n  Outputs.CheckboxState13 = checkboxStates[12] || false;\n  Outputs.CheckboxState14 = checkboxStates[13] || false;\n  Outputs.CheckboxState15 = checkboxStates[14] || false;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error and set all CheckboxState outputs to the default state (unchecked)\n  Outputs.error = error.message;\n  Outputs.CheckboxState1 = false;\n  Outputs.CheckboxState2 = false;\n  Outputs.CheckboxState3 = false;\n  Outputs.CheckboxState4 = false;\n  Outputs.CheckboxState5 = false;\n  Outputs.CheckboxState6 = false;\n  Outputs.CheckboxState7 = false;\n  Outputs.CheckboxState8 = false;\n  Outputs.CheckboxState9 = false;\n  Outputs.CheckboxState10 = false;\n  Outputs.CheckboxState11 = false;\n  Outputs.CheckboxState12 = false;\n  Outputs.CheckboxState13 = false;\n  Outputs.CheckboxState14 = false;\n  Outputs.CheckboxState15 = false;\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a77f4eb-pu946l","type":"user"},{"type":"assistant","content":"\nThis function extracts the checkbox states from an array of objects and assigns them to individual outputs.\n\nThe function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input. It then iterates over this array, checking each object for a property named \"Checkbox\". If this property exists and is not null, its value is added to a new array of checkbox states. If the property does not exist or is null, a default value of false is added to the array instead.\n\nThe function then assigns the checkbox states to individual outputs, <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState1</span> through <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState15</span>. If there are fewer than 15 objects in the input array, the remaining outputs are assigned a default value of false.\n\nIf the function executes successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If an error occurs during execution, the function catches the error, assigns its message to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output, sets all CheckboxState outputs to false, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a7868ff-xvs7j1","metadata":{}},{"content":"I needed the images passed through like how i had it before, but I need it to also refresh so the icon is displayed, but I cannot refresh the whole page, just the checkbox nodes that were updated.","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\ntry {\n  // Map through the object array and extract the checkbox states\n  const checkboxStates = objectArray.map((obj, index) => {\n    // Check if the object has the property \"Checkbox\"\n    if (obj && obj.Checkbox !== undefined && obj.Checkbox !== null) {\n      return obj.Checkbox;\n    } else {\n      return false; // Default state for checkbox is unchecked\n    }\n  });\n\n  // Output the checkbox states to separate outputs explicitly\n  Outputs.CheckboxState1 = checkboxStates[0] || false;\n  Outputs.CheckboxState2 = checkboxStates[1] || false;\n  Outputs.CheckboxState3 = checkboxStates[2] || false;\n  Outputs.CheckboxState4 = checkboxStates[3] || false;\n  Outputs.CheckboxState5 = checkboxStates[4] || false;\n  Outputs.CheckboxState6 = checkboxStates[5] || false;\n  Outputs.CheckboxState7 = checkboxStates[6] || false;\n  Outputs.CheckboxState8 = checkboxStates[7] || false;\n  Outputs.CheckboxState9 = checkboxStates[8] || false;\n  Outputs.CheckboxState10 = checkboxStates[9] || false;\n  Outputs.CheckboxState11 = checkboxStates[10] || false;\n  Outputs.CheckboxState12 = checkboxStates[11] || false;\n  Outputs.CheckboxState13 = checkboxStates[12] || false;\n  Outputs.CheckboxState14 = checkboxStates[13] || false;\n  Outputs.CheckboxState15 = checkboxStates[14] || false;\n\n  // Send signal for each checkbox state that has changed\n  if (Outputs.CheckboxState1 !== checkboxStates[0]) Outputs.CheckboxState1Changed();\n  if (Outputs.CheckboxState2 !== checkboxStates[1]) Outputs.CheckboxState2Changed();\n  if (Outputs.CheckboxState3 !== checkboxStates[2]) Outputs.CheckboxState3Changed();\n  if (Outputs.CheckboxState4 !== checkboxStates[3]) Outputs.CheckboxState4Changed();\n  if (Outputs.CheckboxState5 !== checkboxStates[4]) Outputs.CheckboxState5Changed();\n  if (Outputs.CheckboxState6 !== checkboxStates[5]) Outputs.CheckboxState6Changed();\n  if (Outputs.CheckboxState7 !== checkboxStates[6]) Outputs.CheckboxState7Changed();\n  if (Outputs.CheckboxState8 !== checkboxStates[7]) Outputs.CheckboxState8Changed();\n  if (Outputs.CheckboxState9 !== checkboxStates[8]) Outputs.CheckboxState9Changed();\n  if (Outputs.CheckboxState10 !== checkboxStates[9]) Outputs.CheckboxState10Changed();\n  if (Outputs.CheckboxState11 !== checkboxStates[10]) Outputs.CheckboxState11Changed();\n  if (Outputs.CheckboxState12 !== checkboxStates[11]) Outputs.CheckboxState12Changed();\n  if (Outputs.CheckboxState13 !== checkboxStates[12]) Outputs.CheckboxState13Changed();\n  if (Outputs.CheckboxState14 !== checkboxStates[13]) Outputs.CheckboxState14Changed();\n  if (Outputs.CheckboxState15 !== checkboxStates[14]) Outputs.CheckboxState15Changed();\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error and set all CheckboxState outputs to the default state (unchecked)\n  Outputs.error = error.message;\n  Outputs.CheckboxState1 = false;\n  Outputs.CheckboxState2 = false;\n  Outputs.CheckboxState3 = false;\n  Outputs.CheckboxState4 = false;\n  Outputs.CheckboxState5 = false;\n  Outputs.CheckboxState6 = false;\n  Outputs.CheckboxState7 = false;\n  Outputs.CheckboxState8 = false;\n  Outputs.CheckboxState9 = false;\n  Outputs.CheckboxState10 = false;\n  Outputs.CheckboxState11 = false;\n  Outputs.CheckboxState12 = false;\n  Outputs.CheckboxState13 = false;\n  Outputs.CheckboxState14 = false;\n  Outputs.CheckboxState15 = false;\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a7c825e-dweiu8","type":"user"},{"type":"assistant","content":"\nThis function extracts the checkbox states from an array of objects and outputs each state to a separate output. \n\nIt takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, where each object is expected to have a \"Checkbox\" property. The function then maps through the array and extracts the checkbox states. \n\nThe states are outputted to <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState1</span> through <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState15</span>. If a checkbox state has changed, it triggers the corresponding <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxStateChanged</span> signal. \n\nIf the function executes successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> signal. If there's an error, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, sets all CheckboxState outputs to false (unchecked), and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> signal.\n","snowflakeId":"01910a7d6291-kb0h46","metadata":{}},{"content":"Please put my iconstrings back how they were as well.  I also need those.","metadata":{"user":{"name":"Local","id":"local","email":""}},"snowflakeId":"01910a80515c-qi0b37","type":"user"},{"type":"assistant","content":"I'm sorry, but your request is not clear. Could you please provide more details or context about the \"iconstrings\" you mentioned? This will help me assist you better.","snowflakeId":"01910a806087-lpgsad","metadata":{}},{"content":"I have replaced my code back how it was.  Do not remove Outputs.IconStrings.  I need a single output to tell an object to refresh visually to display the latest data.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map((obj, index) => {\n    // Check if the object has the property \"Icon\"\n    if (obj && obj.Icon !== undefined && obj.Icon !== null) {\n      return obj.Icon;\n    } else {\n      return 'https://acgc.sterner.digital/images/question_mark.png';\n    }\n  });\n\n  // Output the icon strings to separate outputs explicitly\n  Outputs.IconStrings1 = iconStrings[0] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings2 = iconStrings[1] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings3 = iconStrings[2] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings4 = iconStrings[3] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings5 = iconStrings[4] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings6 = iconStrings[5] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings7 = iconStrings[6] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings8 = iconStrings[7] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings9 = iconStrings[8] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings10 = iconStrings[9] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings11 = iconStrings[10] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings12 = iconStrings[11] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings13 = iconStrings[12] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings14 = iconStrings[13] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings15 = iconStrings[14] || 'https://acgc.sterner.digital/images/question_mark.png';\n\n  // Signal success\n  Outputs.Success();\n\n  // Signal to refresh the object visually\n  Outputs.RefreshObject();\n} catch (error) {\n  // Output the error and set all IconStrings outputs to the default image\n  Outputs.error = error.message;\n  Outputs.IconStrings1 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings2 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings3 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings4 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings5 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings6 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings7 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings8 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings9 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings10 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings11 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings12 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings13 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings14 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings15 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a82d84f-dy0kzk","type":"user"},{"type":"assistant","content":"\nThis function extracts icon strings from an array of objects and assigns them to individual outputs. \n\nIt takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input. For each object in the array, it checks if the object has a property \"Icon\". If it does, the function extracts the icon string; if it doesn't, it assigns a default icon string. \n\nThe function then assigns these icon strings to individual outputs, from <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings1</span> to <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings15</span>. If there are fewer than 15 objects in the array, the remaining outputs are assigned the default icon string.\n\nAfter successfully extracting and assigning all icon strings, the function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.RefreshObject</span> output signal, which can be used to tell an object to refresh visually to display the latest data.\n\nIf there's an error during the process, the function assigns the default icon string to all IconStrings outputs, sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a83e2eb-i6om54","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"813a2239-985e-d518-f451-88dd71c3522b","type":"Collection2","x":-620.8836733726291,"y":737.8537455685237,"parameters":{"items":"[\r\n    {\"id\": \"v-0001\", \"Label\": \"Ace\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ace_NH_Villager_Icon.png\", \"birthday\": \"March 13th\"},\r\n    {\"id\": \"v-0002\", \"Label\": \"Admiral\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Admiral_NH_Villager_Icon.png\", \"birthday\": \"January 27th\"},\r\n    {\"id\": \"v-0003\", \"Label\": \"Alfonso\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Alfonso_NH_Villager_Icon.png\", \"birthday\": \"June 9th\"},\r\n    {\"id\": \"v-0004\", \"Label\": \"Alli\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Alli_NH_Villager_Icon.png\", \"birthday\": \"November 9th\"},\r\n    {\"id\": \"v-0005\", \"Label\": \"Amelia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Amelia_NH_Villager_Icon.png\", \"birthday\": \"November 19th\"},\r\n    {\"id\": \"v-0006\", \"Label\": \"Anchovy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Anchovy_NH_Villager_Icon.png\", \"birthday\": \"March 4th\"},\r\n    {\"id\": \"v-0007\", \"Label\": \"Anicotti\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Anicotti_NH_Villager_Icon.png\", \"birthday\": \"February 24th\"},\r\n    {\"id\": \"v-0008\", \"Label\": \"Apollo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Apollo_NH_Villager_Icon.png\", \"birthday\": \"July 4th\"},\r\n    {\"id\": \"v-0009\", \"Label\": \"Astrid\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Astrid_NH_Villager_Icon.png\", \"birthday\": \"September 8th\"},\r\n    {\"id\": \"v-0010\", \"Label\": \"Aurora\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Aurora_NH_Villager_Icon.png\", \"birthday\": \"January 27th\"},\r\n    {\"id\": \"v-0011\", \"Label\": \"Ava\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ava_NH_Villager_Icon.png\", \"birthday\": \"April 28th\"},\r\n    {\"id\": \"v-0012\", \"Label\": \"Axel\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Axel_NH_Villager_Icon.png\", \"birthday\": \"March 23rd\"},\r\n    {\"id\": \"v-0013\", \"Label\": \"Aziz\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Aziz_PG_Model.png\", \"birthday\": \"February 26th\"},\r\n    {\"id\": \"v-0014\", \"Label\": \"Baabara\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Baabara_NH_Villager_Icon.png\", \"birthday\": \"March 28th\"},\r\n    {\"id\": \"v-0015\", \"Label\": \"Bangle\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bangle_NH_Villager_Icon.png\", \"birthday\": \"August 27th\"},\r\n    {\"id\": \"v-0016\", \"Label\": \"Bea\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bea_NH_Villager_Icon.png\", \"birthday\": \"October 15th\"},\r\n    {\"id\": \"v-0017\", \"Label\": \"Belle\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Belle_PG_Model.png\", \"birthday\": \"June 27th\"},\r\n    {\"id\": \"v-0018\", \"Label\": \"Bertha\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bertha_NH_Villager_Icon.png\", \"birthday\": \"April 25th\"},\r\n    {\"id\": \"v-0019\", \"Label\": \"Bessie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Bessie_PG_Model.png\", \"birthday\": \"May 10th\"},\r\n    {\"id\": \"v-0020\", \"Label\": \"Betty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Betty_PG_Model.png\", \"birthday\": \"June 13th\"},\r\n    {\"id\": \"v-0021\", \"Label\": \"Biff\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Biff_NH_Villager_Icon.png\", \"birthday\": \"March 29th\"},\r\n    {\"id\": \"v-0022\", \"Label\": \"Bill\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bill_NH_Villager_Icon.png\", \"birthday\": \"February 1st\"},\r\n    {\"id\": \"v-0023\", \"Label\": \"Billy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Billy_NH_Villager_Icon.png\", \"birthday\": \"March 25th\"},\r\n    {\"id\": \"v-0024\", \"Label\": \"Biskit\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Biskit_NH_Villager_Icon.png\", \"birthday\": \"May 13th\"},\r\n    {\"id\": \"v-0025\", \"Label\": \"Bitty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bitty_NH_Villager_Icon.png\", \"birthday\": \"October 6th\"},\r\n    {\"id\": \"v-0026\", \"Label\": \"Blaire\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Blaire_NH_Villager_Icon.png\", \"birthday\": \"July 3rd\"},\r\n    {\"id\": \"v-0027\", \"Label\": \"Bluebear\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bluebear_NH_Villager_Icon.png\", \"birthday\": \"June 24th\"},\r\n    {\"id\": \"v-0028\", \"Label\": \"Bob\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bob_NH_Villager_Icon.png\", \"birthday\": \"January 1st\"},\r\n    {\"id\": \"v-0029\", \"Label\": \"Bones\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bones_NH_Villager_Icon.png\", \"birthday\": \"August 4th\"},\r\n    {\"id\": \"v-0030\", \"Label\": \"Boots\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Boots_NH_Villager_Icon.png\", \"birthday\": \"August 7th\"},\r\n    {\"id\": \"v-0031\", \"Label\": \"Boris\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Boris_NH_Villager_Icon.png\", \"birthday\": \"November 6th\"},\r\n    {\"id\": \"v-0032\", \"Label\": \"Bubbles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bubbles_NH_Villager_Icon.png\", \"birthday\": \"September 18th\"},\r\n    {\"id\": \"v-0033\", \"Label\": \"Buck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Buck_NH_Villager_Icon.png\", \"birthday\": \"April 4th\"},\r\n    {\"id\": \"v-0034\", \"Label\": \"Bunnie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bunnie_NH_Villager_Icon.png\", \"birthday\": \"May 9th\"},\r\n    {\"id\": \"v-0035\", \"Label\": \"Butch\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Butch_NH_Villager_Icon.png\", \"birthday\": \"November 1st\"},\r\n    {\"id\": \"v-0036\", \"Label\": \"Buzz\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Buzz_NH_Villager_Icon.png\", \"birthday\": \"December 7th\"},\r\n    {\"id\": \"v-0037\", \"Label\": \"Camofrog\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Camofrog_NH_Villager_Icon.png\", \"birthday\": \"June 5th\"},\r\n    {\"id\": \"v-0038\", \"Label\": \"Candi\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Candi_NH_Villager_Icon.png\", \"birthday\": \"April 13th\"},\r\n    {\"id\": \"v-0039\", \"Label\": \"Carmen\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Carmen_PG_Model.png\", \"birthday\": \"March 24th\"},\r\n    {\"id\": \"v-0040\", \"Label\": \"Carrie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Carrie_NH_Villager_Icon.png\", \"birthday\": \"December 5th\"},\r\n    {\"id\": \"v-0041\", \"Label\": \"Cashmere\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cashmere_NH_Villager_Icon.png\", \"birthday\": \"April 2nd\"},\r\n    {\"id\": \"v-0042\", \"Label\": \"Cesar\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cesar_NH_Villager_Icon.png\", \"birthday\": \"September 6th\"},\r\n    {\"id\": \"v-0043\", \"Label\": \"Cheri\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cheri_NH_Villager_Icon.png\", \"birthday\": \"March 17th\"},\r\n    {\"id\": \"v-0044\", \"Label\": \"Chevre\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Chevre_NH_Villager_Icon.png\", \"birthday\": \"March 6th\"},\r\n    {\"id\": \"v-0045\", \"Label\": \"Chico\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Chico_PG_Model.png\", \"birthday\": \"January 3rd\"},\r\n    {\"id\": \"v-0046\", \"Label\": \"Chief\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Chief_NH_Villager_Icon.png\", \"birthday\": \"December 19th\"},\r\n    {\"id\": \"v-0047\", \"Label\": \"Chow\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Chow_NH_Villager_Icon.png\", \"birthday\": \"July 22nd\"},\r\n    {\"id\": \"v-0048\", \"Label\": \"Chuck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Chuck_PG_Model.png\", \"birthday\": \"May 14th\"},\r\n    {\"id\": \"v-0049\", \"Label\": \"Claude\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Claude_NH_Villager_Icon.png\", \"birthday\": \"December 3rd\"},\r\n    {\"id\": \"v-0050\", \"Label\": \"Cleo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cleo_NH_Villager_Icon.png\", \"birthday\": \"February 9th\"},\r\n    {\"id\": \"v-0051\", \"Label\": \"Cobb\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cobb_NH_Villager_Icon.png\", \"birthday\": \"October 7th\"},\r\n    {\"id\": \"v-0052\", \"Label\": \"Coco\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Coco_NH_Villager_Icon.png\", \"birthday\": \"March 1st\"},\r\n    {\"id\": \"v-0053\", \"Label\": \"Cookie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cookie_NH_Villager_Icon.png\", \"birthday\": \"June 18th\"},\r\n    {\"id\": \"v-0054\", \"Label\": \"Cousteau\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cousteau_NH_Villager_Icon.png\", \"birthday\": \"December 17th\"},\r\n    {\"id\": \"v-0055\", \"Label\": \"Cube\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cube_NH_Villager_Icon.png\", \"birthday\": \"January 29th\"},\r\n    {\"id\": \"v-0056\", \"Label\": \"Cupcake\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Cupcake_PG_Model.png\", \"birthday\": \"May 29th\"},\r\n    {\"id\": \"v-0057\", \"Label\": \"Curly\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Curly_NH_Villager_Icon.png\", \"birthday\": \"July 26th\"},\r\n    {\"id\": \"v-0058\", \"Label\": \"Cyrano\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cyrano_NH_Villager_Icon.png\", \"birthday\": \"March 9th\"},\r\n    {\"id\": \"v-0059\", \"Label\": \"Daisy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Daisy_NH_Villager_Icon.png\", \"birthday\": \"November 16th\"},\r\n    {\"id\": \"v-0060\", \"Label\": \"Deena\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Deena_NH_Villager_Icon.png\", \"birthday\": \"June 27th\"},\r\n    {\"id\": \"v-0061\", \"Label\": \"Derwin\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Derwin_NH_Villager_Icon.png\", \"birthday\": \"May 25th\"},\r\n    {\"id\": \"v-0062\", \"Label\": \"Dizzy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Dizzy_NH_Villager_Icon.png\", \"birthday\": \"July 14th\"},\r\n    {\"id\": \"v-0063\", \"Label\": \"Doc\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Doc_NH_Villager_Icon.png\", \"birthday\": \"March 16th\"},\r\n    {\"id\": \"v-0064\", \"Label\": \"Dora\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Dora_NH_Villager_Icon.png\", \"birthday\": \"February 18th\"},\r\n    {\"id\": \"v-0065\", \"Label\": \"Dotty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Dotty_NH_Villager_Icon.png\", \"birthday\": \"March 14th\"},\r\n    {\"id\": \"v-0066\", \"Label\": \"Dozer\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Dozer_PG_Model.png\", \"birthday\": \"March 10th\"},\r\n    {\"id\": \"v-0067\", \"Label\": \"Ed\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ed_NH_Villager_Icon.png\", \"birthday\": \"September 16th\"},\r\n    {\"id\": \"v-0068\", \"Label\": \"Egbert\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Egbert_NH_Villager_Icon.png\", \"birthday\": \"October 14th\"},\r\n    {\"id\": \"v-0069\", \"Label\": \"Ellie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ellie_NH_Villager_Icon.png\", \"birthday\": \"May 12th\"},\r\n    {\"id\": \"v-0070\", \"Label\": \"Elmer\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Elmer_NH_Villager_Icon.png\", \"birthday\": \"October 5th\"},\r\n    {\"id\": \"v-0071\", \"Label\": \"Eloise\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Eloise_NH_Villager_Icon.png\", \"birthday\": \"December 8th\"},\r\n    {\"id\": \"v-0072\", \"Label\": \"Emerald\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Emerald_PG_Model.png\", \"birthday\": \"July 11th\"},\r\n    {\"id\": \"v-0073\", \"Label\": \"Eunice\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Eunice_NH_Villager_Icon.png\", \"birthday\": \"April 3rd\"},\r\n    {\"id\": \"v-0074\", \"Label\": \"Fang\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Fang_NH_Villager_Icon.png\", \"birthday\": \"December 18th\"},\r\n    {\"id\": \"v-0075\", \"Label\": \"Filbert\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Filbert_NH_Villager_Icon.png\", \"birthday\": \"June 3rd\"},\r\n    {\"id\": \"v-0076\", \"Label\": \"Freckles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Freckles_NH_Villager_Icon.png\", \"birthday\": \"February 19th\"},\r\n    {\"id\": \"v-0077\", \"Label\": \"Freya\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Freya_NH_Villager_Icon.png\", \"birthday\": \"December 14th\"},\r\n    {\"id\": \"v-0078\", \"Label\": \"Friga\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Friga_NH_Villager_Icon.png\", \"birthday\": \"October 16th\"},\r\n    {\"id\": \"v-0079\", \"Label\": \"Gabi\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gabi_NH_Villager_Icon.png\", \"birthday\": \"December 16th\"},\r\n    {\"id\": \"v-0080\", \"Label\": \"Gaston\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gaston_NH_Villager_Icon.png\", \"birthday\": \"October 28th\"},\r\n    {\"id\": \"v-0081\", \"Label\": \"Genji\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Genji_NH_Villager_Icon.png\", \"birthday\": \"January 21st\"},\r\n    {\"id\": \"v-0082\", \"Label\": \"Goldie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Goldie_NH_Villager_Icon.png\", \"birthday\": \"December 27th\"},\r\n    {\"id\": \"v-0083\", \"Label\": \"Gonzo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gonzo_NH_Villager_Icon.png\", \"birthday\": \"October 13th\"},\r\n    {\"id\": \"v-0084\", \"Label\": \"Goose\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Goose_NH_Villager_Icon.png\", \"birthday\": \"October 4th\"},\r\n    {\"id\": \"v-0085\", \"Label\": \"Grizzly\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Grizzly_NH_Villager_Icon.png\", \"birthday\": \"July 29th\"},\r\n    {\"id\": \"v-0086\", \"Label\": \"Groucho\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Groucho_NH_Villager_Icon.png\", \"birthday\": \"October 23rd\"},\r\n    {\"id\": \"v-0087\", \"Label\": \"Gruff\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gruff_NH_Villager_Icon.png\", \"birthday\": \"August 31st\"},\r\n    {\"id\": \"v-0088\", \"Label\": \"Gwen\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gwen_NH_Villager_Icon.png\", \"birthday\": \"January 23rd\"},\r\n    {\"id\": \"v-0089\", \"Label\": \"Hambo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Hambo_PG_Model.png\", \"birthday\": \"September 3rd\"},\r\n    {\"id\": \"v-0090\", \"Label\": \"Hank\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Hank_PG_Model.png\", \"birthday\": \"September 29th\"},\r\n    {\"id\": \"v-0091\", \"Label\": \"Hazel\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hazel_NH_Villager_Icon.png\", \"birthday\": \"June 19th\"},\r\n    {\"id\": \"v-0092\", \"Label\": \"Hector\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Hector_PG_Model.png\", \"birthday\": \"April 5th\"},\r\n    {\"id\": \"v-0093\", \"Label\": \"Hopper\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hopper_NH_Villager_Icon.png\", \"birthday\": \"April 6th\"},\r\n    {\"id\": \"v-0094\", \"Label\": \"Hornsby\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hornsby_NH_Villager_Icon.png\", \"birthday\": \"March 20th\"},\r\n    {\"id\": \"v-0095\", \"Label\": \"Huck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Huck_NH_Villager_Icon.png\", \"birthday\": \"December 30th\"},\r\n    {\"id\": \"v-0096\", \"Label\": \"Huggy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Huggy_PG_Model.png\", \"birthday\": \"February 17th\"},\r\n    {\"id\": \"v-0097\", \"Label\": \"Hugh\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hugh_NH_Villager_Icon.png\", \"birthday\": \"December 30th\"},\r\n    {\"id\": \"v-0098\", \"Label\": \"Iggy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Iggy_PG_Model.png\", \"birthday\": \"August 11th\"},\r\n    {\"id\": \"v-0099\", \"Label\": \"Jambette\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Jambette_NH_Villager_Icon.png\", \"birthday\": \"October 27th\"},\r\n    {\"id\": \"v-0100\", \"Label\": \"Jane\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Jane_PG_Model.png\", \"birthday\": \"January 25th\"},\r\n    {\"id\": \"v-0101\", \"Label\": \"Jay\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Jay_NH_Villager_Icon.png\", \"birthday\": \"July 17th\"},\r\n    {\"id\": \"v-0102\", \"Label\": \"Jeremiah\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Jeremiah_NH_Villager_Icon.png\", \"birthday\": \"July 8th\"},\r\n    {\"id\": \"v-0103\", \"Label\": \"Joey\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Joey_NH_Villager_Icon.png\", \"birthday\": \"January 3rd\"},\r\n    {\"id\": \"v-0104\", \"Label\": \"Kabuki\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kabuki_NH_Villager_Icon.png\", \"birthday\": \"November 29th\"},\r\n    {\"id\": \"v-0105\", \"Label\": \"Kiki\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kiki_NH_Villager_Icon.png\", \"birthday\": \"October 8th\"},\r\n    {\"id\": \"v-0106\", \"Label\": \"Kitt\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kitt_NH_Villager_Icon.png\", \"birthday\": \"October 11th\"},\r\n    {\"id\": \"v-0107\", \"Label\": \"Kitty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kitty_NH_Villager_Icon.png\", \"birthday\": \"February 15th\"},\r\n    {\"id\": \"v-0108\", \"Label\": \"Kody\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kody_NH_Villager_Icon.png\", \"birthday\": \"September 28th\"},\r\n    {\"id\": \"v-0109\", \"Label\": \"Leigh\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Leigh_PG_Model.png\", \"birthday\": \"December 5th\"},\r\n    {\"id\": \"v-0110\", \"Label\": \"Leopold\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Leopold_NH_Villager_Icon.png\", \"birthday\": \"August 14th\"},\r\n    {\"id\": \"v-0111\", \"Label\": \"Lily\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lily_NH_Villager_Icon.png\", \"birthday\": \"February 4th\"},\r\n    {\"id\": \"v-0112\", \"Label\": \"Limberg\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Limberg_NH_Villager_Icon.png\", \"birthday\": \"October 17th\"},\r\n    {\"id\": \"v-0113\", \"Label\": \"Liz\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Liz_PG_Model.png\", \"birthday\": \"September 7th\"},\r\n    {\"id\": \"v-0114\", \"Label\": \"Lobo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lobo_NH_Villager_Icon.png\", \"birthday\": \"November 5th\"},\r\n    {\"id\": \"v-0115\", \"Label\": \"Louie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Louie_NH_Villager_Icon.png\", \"birthday\": \"March 26th\"},\r\n    {\"id\": \"v-0116\", \"Label\": \"Lucky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lucky_NH_Villager_Icon.png\", \"birthday\": \"November 4th\"},\r\n    {\"id\": \"v-0117\", \"Label\": \"Lucy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lucy_NH_Villager_Icon.png\", \"birthday\": \"June 2nd\"},\r\n    {\"id\": \"v-0118\", \"Label\": \"Lulu\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Lulu_PG_Model.png\", \"birthday\": \"December 19th\"},\r\n    {\"id\": \"v-0119\", \"Label\": \"Maddie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Maddie_NH_Villager_Icon.png\", \"birthday\": \"January 11th\"},\r\n    {\"id\": \"v-0120\", \"Label\": \"Mallary\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mallary_NH_Villager_Icon.png\", \"birthday\": \"April 8th\"},\r\n    {\"id\": \"v-0121\", \"Label\": \"Maple\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Maple_NH_Villager_Icon.png\", \"birthday\": \"June 15th\"},\r\n    {\"id\": \"v-0122\", \"Label\": \"Marcy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Marcy_PG_Model.png\", \"birthday\": \"May 31st\"},\r\n    {\"id\": \"v-0123\", \"Label\": \"Mathilda\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mathilda_NH_Villager_Icon.png\", \"birthday\": \"November 12th\"},\r\n    {\"id\": \"v-0124\", \"Label\": \"Midge\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Midge_NH_Villager_Icon.png\", \"birthday\": \"March 12th\"},\r\n    {\"id\": \"v-0125\", \"Label\": \"Mint\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mint_NH_Villager_Icon.png\", \"birthday\": \"May 2nd\"},\r\n    {\"id\": \"v-0126\", \"Label\": \"Mitzi\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mitzi_NH_Villager_Icon.png\", \"birthday\": \"September 25th\"},\r\n    {\"id\": \"v-0127\", \"Label\": \"Monique\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Monique_NH_Villager_Icon.png\", \"birthday\": \"September 30th\"},\r\n    {\"id\": \"v-0128\", \"Label\": \"Murphy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Murphy_NH_Villager_Icon.png\", \"birthday\": \"December 29th\"},\r\n    {\"id\": \"v-0129\", \"Label\": \"Nate\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Nate_NH_Villager_Icon.png\", \"birthday\": \"August 16th\"},\r\n    {\"id\": \"v-0130\", \"Label\": \"Nibbles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Nibbles_NH_Villager_Icon.png\", \"birthday\": \"July 19th\"},\r\n    {\"id\": \"v-0131\", \"Label\": \"Nosegay\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Nosegay_PG_Model.png\", \"birthday\": \"February 23rd\"},\r\n    {\"id\": \"v-0132\", \"Label\": \"Octavian\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Octavian_NH_Villager_Icon.png\", \"birthday\": \"September 20th\"},\r\n    {\"id\": \"v-0133\", \"Label\": \"Olive\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Olive_NH_Villager_Icon.png\", \"birthday\": \"July 12th\"},\r\n    {\"id\": \"v-0134\", \"Label\": \"Olivia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Olivia_NH_Villager_Icon.png\", \"birthday\": \"February 3rd\"},\r\n    {\"id\": \"v-0135\", \"Label\": \"Opal\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Opal_NH_Villager_Icon.png\", \"birthday\": \"January 20th\"},\r\n    {\"id\": \"v-0136\", \"Label\": \"Otis\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Otis_PG_Model.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0137\", \"Label\": \"Oxford\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Oxford_PG_Model.png\", \"birthday\": \"May 7th\"},\r\n    {\"id\": \"v-0138\", \"Label\": \"Ozzie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ozzie_NH_Villager_Icon.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0139\", \"Label\": \"Pango\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pango_NH_Villager_Icon.png\", \"birthday\": \"November 9th\"},\r\n    {\"id\": \"v-0140\", \"Label\": \"Paolo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Paolo_NH_Villager_Icon.png\", \"birthday\": \"May 5th\"},\r\n    {\"id\": \"v-0141\", \"Label\": \"Pate\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pate_NH_Villager_Icon.png\", \"birthday\": \"February 23rd\"},\r\n    {\"id\": \"v-0142\", \"Label\": \"Patty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Patty_NH_Villager_Icon.png\", \"birthday\": \"May 10th\"},\r\n    {\"id\": \"v-0143\", \"Label\": \"Peaches\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Peaches_NH_Villager_Icon.png\", \"birthday\": \"November 28th\"},\r\n    {\"id\": \"v-0144\", \"Label\": \"Peanut\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Peanut_NH_Villager_Icon.png\", \"birthday\": \"June 8th\"},\r\n    {\"id\": \"v-0145\", \"Label\": \"Pecan\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pecan_NH_Villager_Icon.png\", \"birthday\": \"September 10th\"},\r\n    {\"id\": \"v-0146\", \"Label\": \"Peewee\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Peewee_NH_Villager_Icon.png\", \"birthday\": \"September 11th\"},\r\n    {\"id\": \"v-0147\", \"Label\": \"Penny\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Penny_PG_Model.png\", \"birthday\": \"June 18th\"},\r\n    {\"id\": \"v-0148\", \"Label\": \"Petunia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Petunia_PG_Model.png\", \"birthday\": \"April 24th\"},\r\n    {\"id\": \"v-0149\", \"Label\": \"Pierce\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pierce_NH_Villager_Icon.png\", \"birthday\": \"January 8th\"},\r\n    {\"id\": \"v-0150\", \"Label\": \"Pinky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pinky_NH_Villager_Icon.png\", \"birthday\": \"September 9th\"},\r\n    {\"id\": \"v-0151\", \"Label\": \"Piper\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Piper_NH_Villager_Icon.png\", \"birthday\": \"April 18th\"},\r\n    {\"id\": \"v-0152\", \"Label\": \"Pippy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pippy_NH_Villager_Icon.png\", \"birthday\": \"June 14th\"},\r\n    {\"id\": \"v-0153\", \"Label\": \"Pompom\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pompom_NH_Villager_Icon.png\", \"birthday\": \"February 11th\"},\r\n    {\"id\": \"v-0154\", \"Label\": \"Poncho\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Poncho_NH_Villager_Icon.png\", \"birthday\": \"January 2nd\"},\r\n    {\"id\": \"v-0155\", \"Label\": \"Portia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Portia_NH_Villager_Icon.png\", \"birthday\": \"October 25th\"},\r\n    {\"id\": \"v-0156\", \"Label\": \"Prince\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Prince_NH_Villager_Icon.png\", \"birthday\": \"July 21st\"},\r\n    {\"id\": \"v-0157\", \"Label\": \"Puck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Puck_NH_Villager_Icon.png\", \"birthday\": \"February 21st\"},\r\n    {\"id\": \"v-0158\", \"Label\": \"Puddles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Puddles_NH_Villager_Icon.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0159\", \"Label\": \"Pudge\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pudge_NH_Villager_Icon.png\", \"birthday\": \"June 11th\"},\r\n    {\"id\": \"v-0160\", \"Label\": \"Punchy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Punchy_NH_Villager_Icon.png\", \"birthday\": \"April 11th\"},\r\n    {\"id\": \"v-0161\", \"Label\": \"Purrl\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Purrl_NH_Villager_Icon.png\", \"birthday\": \"May 29th\"},\r\n    {\"id\": \"v-0162\", \"Label\": \"Queenie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Queenie_NH_Villager_Icon.png\", \"birthday\": \"November 13th\"},\r\n    {\"id\": \"v-0163\", \"Label\": \"Quetzal\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Quetzal_PG_Model.png\", \"birthday\": \"September 2nd\"},\r\n    {\"id\": \"v-0164\", \"Label\": \"Rasher\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rasher_NH_Villager_Icon.png\", \"birthday\": \"April 7th\"},\r\n    {\"id\": \"v-0165\", \"Label\": \"Rex\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rex_NH_Villager_Icon.png\", \"birthday\": \"July 24th\"},\r\n    {\"id\": \"v-0166\", \"Label\": \"Rhoda\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Rhoda_PG_Model.png\", \"birthday\": \"March 31st\"},\r\n    {\"id\": \"v-0167\", \"Label\": \"Ribbot\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ribbot_NH_Villager_Icon.png\", \"birthday\": \"February 13th\"},\r\n    {\"id\": \"v-0168\", \"Label\": \"Ricky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ricky_NH_Villager_Icon.png\", \"birthday\": \"September 14th\"},\r\n    {\"id\": \"v-0169\", \"Label\": \"Rio\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rio_NH_Villager_Icon.png\", \"birthday\": \"October 11th\"},\r\n    {\"id\": \"v-0170\", \"Label\": \"Rizzo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rizzo_NH_Villager_Icon.png\", \"birthday\": \"January 17th\"},\r\n    {\"id\": \"v-0171\", \"Label\": \"Roald\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Roald_NH_Villager_Icon.png\", \"birthday\": \"January 5th\"},\r\n    {\"id\": \"v-0172\", \"Label\": \"Robin\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Robin_NH_Villager_Icon.png\", \"birthday\": \"December 4th\"},\r\n    {\"id\": \"v-0173\", \"Label\": \"Rocco\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rocco_NH_Villager_Icon.png\", \"birthday\": \"August 18th\"},\r\n    {\"id\": \"v-0174\", \"Label\": \"Rolf\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rolf_NH_Villager_Icon.png\", \"birthday\": \"August 22nd\"},\r\n    {\"id\": \"v-0175\", \"Label\": \"Rollo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Rollo_PG_Model.png\", \"birthday\": \"July 22nd\"},\r\n    {\"id\": \"v-0176\", \"Label\": \"Rosie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rosie_NH_Villager_Icon.png\", \"birthday\": \"February 27th\"},\r\n    {\"id\": \"v-0177\", \"Label\": \"Sally\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sally_NH_Villager_Icon.png\", \"birthday\": \"June 19th\"},\r\n    {\"id\": \"v-0178\", \"Label\": \"Samson\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Samson_NH_Villager_Icon.png\", \"birthday\": \"July 5th\"},\r\n    {\"id\": \"v-0179\", \"Label\": \"Sandy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sandy_NH_Villager_Icon.png\", \"birthday\": \"October 21st\"},\r\n    {\"id\": \"v-0180\", \"Label\": \"Savannah\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Savannah_NH_Villager_Icon.png\", \"birthday\": \"January 25th\"},\r\n    {\"id\": \"v-0181\", \"Label\": \"Scoot\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Scoot_NH_Villager_Icon.png\", \"birthday\": \"June 13th\"},\r\n    {\"id\": \"v-0182\", \"Label\": \"Snake\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Snake_NH_Villager_Icon.png\", \"birthday\": \"November 3rd\"},\r\n    {\"id\": \"v-0183\", \"Label\": \"Snooty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Snooty_NH_Villager_Icon.png\", \"birthday\": \"October 25th\"},\r\n    {\"id\": \"v-0184\", \"Label\": \"Spike\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Spike_NH_Villager_Icon.png\", \"birthday\": \"June 17th\"},\r\n    {\"id\": \"v-0185\", \"Label\": \"Spork\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Spork_NH_Villager_Icon.png\", \"birthday\": \"September 3rd\"},\r\n    {\"id\": \"v-0186\", \"Label\": \"Sprocket\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sprocket_NH_Villager_Icon.png\", \"birthday\": \"December 21st\"},\r\n    {\"id\": \"v-0187\", \"Label\": \"Static\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Static_NH_Villager_Icon.png\", \"birthday\": \"July 9th\"},\r\n    {\"id\": \"v-0188\", \"Label\": \"Stella\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Stella_NH_Villager_Icon.png\", \"birthday\": \"April 29th\"},\r\n    {\"id\": \"v-0189\", \"Label\": \"Stinky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Stinky_NH_Villager_Icon.png\", \"birthday\": \"August 17th\"},\r\n    {\"id\": \"v-0190\", \"Label\": \"Stu\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Stu_NH_Villager_Icon.png\", \"birthday\": \"April 20th\"},\r\n    {\"id\": \"v-0191\", \"Label\": \"Sue E\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Sue_E_PG_Model.png\", \"birthday\": \"October 20th\"},\r\n    {\"id\": \"v-0192\", \"Label\": \"Sven\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Sven_PG_Model.png\", \"birthday\": \"December 28th\"},\r\n    {\"id\": \"v-0193\", \"Label\": \"Sydney\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sydney_NH_Villager_Icon.png\", \"birthday\": \"June 21st\"},\r\n    {\"id\": \"v-0194\", \"Label\": \"T-Bone\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/T-Bone_NH_Villager_Icon.png\", \"birthday\": \"May 20th\"},\r\n    {\"id\": \"v-0195\", \"Label\": \"Tabby\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tabby_NH_Villager_Icon.png\", \"birthday\": \"August 13th\"},\r\n    {\"id\": \"v-0196\", \"Label\": \"Tad\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tad_NH_Villager_Icon.png\", \"birthday\": \"August 3rd\"},\r\n    {\"id\": \"v-0197\", \"Label\": \"Tangy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tangy_NH_Villager_Icon.png\", \"birthday\": \"June 17th\"},\r\n    {\"id\": \"v-0198\", \"Label\": \"Tank\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tank_NH_Villager_Icon.png\", \"birthday\": \"May 6th\"},\r\n    {\"id\": \"v-0199\", \"Label\": \"Teddy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Teddy_NH_Villager_Icon.png\", \"birthday\": \"September 26th\"},\r\n    {\"id\": \"v-0200\", \"Label\": \"Tiara\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Tiara_PG_Model.png\", \"birthday\": \"January 17th\"},\r\n    {\"id\": \"v-0201\", \"Label\": \"Tom\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tom_NH_Villager_Icon.png\", \"birthday\": \"December 10th\"},\r\n    {\"id\": \"v-0202\", \"Label\": \"Truffles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Truffles_NH_Villager_Icon.png\", \"birthday\": \"July 28th\"},\r\n    {\"id\": \"v-0203\", \"Label\": \"Tutu\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tutu_NH_Villager_Icon.png\", \"birthday\": \"September 15th\"},\r\n    {\"id\": \"v-0204\", \"Label\": \"Twiggy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Twiggy_NH_Villager_Icon.png\", \"birthday\": \"July 13th\"},\r\n    {\"id\": \"v-0205\", \"Label\": \"Twirp\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Twirp_PG_Model.png\", \"birthday\": \"August 7th\"},\r\n    {\"id\": \"v-0206\", \"Label\": \"Tybalt\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tybalt_NH_Villager_Icon.png\", \"birthday\": \"August 19th\"},\r\n    {\"id\": \"v-0207\", \"Label\": \"Ursala\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ursala_NH_Villager_Icon.png\", \"birthday\": \"January 16th\"},\r\n    {\"id\": \"v-0208\", \"Label\": \"Valise\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Valise_PG_Model.png\", \"birthday\": \"December 16th\"},\r\n    {\"id\": \"v-0209\", \"Label\": \"Velma\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Velma_NH_Villager_Icon.png\", \"birthday\": \"January 14th\"},\r\n    {\"id\": \"v-0210\", \"Label\": \"Vesta\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Vesta_NH_Villager_Icon.png\", \"birthday\": \"April 16th\"},\r\n    {\"id\": \"v-0211\", \"Label\": \"Vladimir\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Vladimir_NH_Villager_Icon.png\", \"birthday\": \"August 2nd\"},\r\n    {\"id\": \"v-0212\", \"Label\": \"Wart Jr.\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Wart Jr._NH_Villager_Icon.png\", \"birthday\": \"August 21st\"},\r\n    {\"id\": \"v-0213\", \"Label\": \"Weber\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Weber_NH_Villager_Icon.png\", \"birthday\": \"June 30th\"},\r\n    {\"id\": \"v-0214\", \"Label\": \"Winnie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Winnie_NH_Villager_Icon.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0215\", \"Label\": \"Wolfgang\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Wolfgang_NH_Villager_Icon.png\", \"birthday\": \"November 25th\"},\r\n    {\"id\": \"v-0216\", \"Label\": \"Woolio\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Woolio_PG_Model.png\", \"birthday\": \"April 16th\"},\r\n    {\"id\": \"v-0217\", \"Label\": \"Yuka\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Yuka_NH_Villager_Icon.png\", \"birthday\": \"July 20th\"},\r\n    {\"id\": \"v-0218\", \"Label\": \"Zoe\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Zoe_NH_Villager_Icon.png\", \"birthday\": \"January 29th\"}\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"7e1f2dc7-cb61-08d6-d54c-37c9e47f5f55","type":"Collection2","label":"Daily Misc Array","x":-307,"y":285,"parameters":{"items":"[\r\n    {\r\n        \"id\":  \"dailymisc-0001\",\r\n\t\t\"label\": \"Check the Mail\",\r\n\t\t\"icon\": \"images/mailbox.png\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailymisc-0002\",\r\n\t\t\"label\": \"Lost and Found\",\r\n\t\t\"icon\": \"images/booker.png\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailymisc-0003\",\r\n\t\t\"label\": \"Scavenge the Dump\",\r\n\t\t\"icon\": \"images/garbage.png\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailymisc-0004\",\r\n\t\t\"label\": \"Find the Money Rock\",\r\n\t\t\"icon\": \"images/rock.png\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"dailymisc-0005\",\r\n\t\t\"label\": \"Find the Money Tree\",\r\n\t\t\"icon\": \"images/bells.png\",\r\n\t\t\"date\": \"\",\r\n        \"Checked\":  \"\"\r\n    }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":["cddb03d6-8849-8d7f-b20b-07ee25203e52"]}},{"name":"/Collection Pages/Daily/Daily Misc Logic","id":"bc208b07-31e6-2dc5-27da-ddddd5c7edbd","graph":{"connections":[{"fromId":"18193011-5bef-a60e-34af-d892c7e8e66d","fromProperty":"out-ID","toId":"6747a2fe-85c4-132b-1a21-49584fa64711","toProperty":"in-ID"},{"fromId":"6747a2fe-85c4-132b-1a21-49584fa64711","fromProperty":"out-ID","toId":"de15b2f1-5b13-9a65-d30b-4a2831b51696","toProperty":"modelId"},{"fromId":"6747a2fe-85c4-132b-1a21-49584fa64711","fromProperty":"out-Checked","toId":"de15b2f1-5b13-9a65-d30b-4a2831b51696","toProperty":"prop-Checked"},{"fromId":"b4aa0c4c-1f5f-867b-574c-0339a7bc02b1","fromProperty":"id","toId":"18193011-5bef-a60e-34af-d892c7e8e66d","toProperty":"in-ID"},{"fromId":"b4aa0c4c-1f5f-867b-574c-0339a7bc02b1","fromProperty":"prop-label","toId":"18193011-5bef-a60e-34af-d892c7e8e66d","toProperty":"in-Label"},{"fromId":"b4aa0c4c-1f5f-867b-574c-0339a7bc02b1","fromProperty":"prop-Checked","toId":"18193011-5bef-a60e-34af-d892c7e8e66d","toProperty":"in-Checked"},{"fromId":"b4aa0c4c-1f5f-867b-574c-0339a7bc02b1","fromProperty":"prop-icon","toId":"18193011-5bef-a60e-34af-d892c7e8e66d","toProperty":"in-Icon"},{"fromId":"b4aa0c4c-1f5f-867b-574c-0339a7bc02b1","fromProperty":"prop-Price","toId":"18193011-5bef-a60e-34af-d892c7e8e66d","toProperty":"in-Price"},{"fromId":"b4aa0c4c-1f5f-867b-574c-0339a7bc02b1","fromProperty":"prop-Obtained","toId":"18193011-5bef-a60e-34af-d892c7e8e66d","toProperty":"in-Obtained"},{"fromId":"18193011-5bef-a60e-34af-d892c7e8e66d","fromProperty":"out-Date","toId":"6747a2fe-85c4-132b-1a21-49584fa64711","toProperty":"in-Date"},{"fromId":"18193011-5bef-a60e-34af-d892c7e8e66d","fromProperty":"out-Icon","toId":"07e43eb2-0749-7db4-18ae-2800a1811278","toProperty":"src"},{"fromId":"18193011-5bef-a60e-34af-d892c7e8e66d","fromProperty":"out-Label","toId":"e1ee661b-8ea2-4276-8f4a-ca8701132cb5","toProperty":"text"},{"fromId":"18193011-5bef-a60e-34af-d892c7e8e66d","fromProperty":"out-Checked","toId":"cbd04afb-8649-30cc-6c0a-661c48f2ad82","toProperty":"checked"},{"fromId":"cbd04afb-8649-30cc-6c0a-661c48f2ad82","fromProperty":"onChange","toId":"6747a2fe-85c4-132b-1a21-49584fa64711","toProperty":"in-Changed"},{"fromId":"cbd04afb-8649-30cc-6c0a-661c48f2ad82","fromProperty":"checked","toId":"6747a2fe-85c4-132b-1a21-49584fa64711","toProperty":"in-Checked"},{"fromId":"cbd04afb-8649-30cc-6c0a-661c48f2ad82","fromProperty":"onChange","toId":"de15b2f1-5b13-9a65-d30b-4a2831b51696","toProperty":"store"},{"fromId":"18193011-5bef-a60e-34af-d892c7e8e66d","fromProperty":"out-Label","toId":"6747a2fe-85c4-132b-1a21-49584fa64711","toProperty":"in-Label"},{"fromId":"18193011-5bef-a60e-34af-d892c7e8e66d","fromProperty":"out-Icon","toId":"6747a2fe-85c4-132b-1a21-49584fa64711","toProperty":"in-Icon"},{"fromId":"cbd04afb-8649-30cc-6c0a-661c48f2ad82","fromProperty":"onChange","toId":"d517abf8-39be-7b33-b595-d6a70ba82125","toProperty":"run"}],"roots":[{"id":"b4aa0c4c-1f5f-867b-574c-0339a7bc02b1","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"icon,label,Price,Obtained,Checked,id"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-icon","displayName":"icon","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"icon Changed","name":"changed-icon","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-label","displayName":"label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"label Changed","name":"changed-label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":18}],"children":[]},{"id":"de15b2f1-5b13-9a65-d30b-4a2831b51696","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"18193011-5bef-a60e-34af-d892c7e8e66d","type":"JavaScriptFunction","label":"Database Query Error","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\nconst obtained = Inputs.Obtained || ''; // Added obtained\nconst price = Inputs.Price || ''; // Added price\n\n// Function to get the current date in the desired format\nfunction getCurrentDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, '0');\n    const day = String(today.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n}\n\n// Function to load data from localStorage and check the date\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        const parsedData = JSON.parse(storedData);\n        const currentDate = getCurrentDate();\n        if (parsedData.date !== currentDate) {\n            // If the stored date is not today, delete the key from localStorage\n            localStorage.removeItem(id);\n            callback(null);\n        } else {\n            callback(parsedData);\n        }\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Obtained = obtained; // Added obtained\n    Outputs.Price = price; // Added price\n    Outputs.Date = getCurrentDate(); // Added current date\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Obtained = result.obtained || ''; // Added obtained handling\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Date = getCurrentDate(); // Added current date\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":11},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Date","displayName":"Date","plug":"output","type":"*","group":"Outputs","index":18}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"6747a2fe-85c4-132b-1a21-49584fa64711","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst date = Inputs.Date || ''; // Added date\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.date !== selection.date) { // Added date comparison\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Date = date; // Added date\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, date }; // Added date\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Date","displayName":"Date","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Date","displayName":"Date","plug":"output","type":"*","group":"Outputs","index":22}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"675276cd-60c0-3e8d-1305-e926d8b9c6aa","type":"Group","label":"Group","x":5,"y":7,"parameters":{"borderWidth":{"value":3,"unit":"px"},"justifyContent":"center","alignItems":"center","borderColor":"Nook Tan Dark","sizeMode":"explicit","flexDirection":"column","marginTop":{"value":30,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"36e71a1e-981a-a5d7-9a24-0768fa0cd590","type":"Group","label":"Misc. 4","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"borderStyle":"solid","borderColor":"Nook Tan Dark","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","marginBottom":{"value":-30,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"07e43eb2-0749-7db4-18ae-2800a1811278","type":"Image","label":"Mailbox","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/bells.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"fill"},"ports":[],"dynamicports":[],"children":[]},{"id":"e1ee661b-8ea2-4276-8f4a-ca8701132cb5","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Medium","marginTop":{"value":12,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"text":"Find the Money Tree","alignX":"center","width":{"value":50,"unit":"%"},"position":"relative","textAlignX":"center","fontSize":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"cbd04afb-8649-30cc-6c0a-661c48f2ad82","type":"net.noodl.controls.checkbox","label":"Mail Checkbox","parameters":{"marginTop":{"value":12,"unit":"px"},"label":"","labelSpacing":{"value":10,"unit":"px"},"labelcolor":"Nookmiles Brown","labeltextStyle":"Title Large","marginRight":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"d517abf8-39be-7b33-b595-d6a70ba82125","type":"JavaScriptFunction","label":"Play Audio File","x":351,"y":459,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["675276cd-60c0-3e8d-1305-e926d8b9c6aa"]}},{"name":"/Collection Pages/Daily/Daily Misc Logic/Options","id":"e6ed3296-2258-5cc8-6138-37d64dcbc259","graph":{"connections":[{"fromId":"5368a3b6-fa3c-3275-3784-d6a78e999143","fromProperty":"id","toId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","toProperty":"in-ID"},{"fromId":"5368a3b6-fa3c-3275-3784-d6a78e999143","fromProperty":"prop-Label","toId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","toProperty":"in-Label"},{"fromId":"5368a3b6-fa3c-3275-3784-d6a78e999143","fromProperty":"prop-Checked","toId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","toProperty":"in-Checked"},{"fromId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","fromProperty":"out-ID","toId":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","toProperty":"in-ID"},{"fromId":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","fromProperty":"out-ID","toId":"cfd889e9-8dd8-cc58-360c-51b433f4ddca","toProperty":"modelId"},{"fromId":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","fromProperty":"out-Checked","toId":"cfd889e9-8dd8-cc58-360c-51b433f4ddca","toProperty":"prop-Checked"},{"fromId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","fromProperty":"out-Label","toId":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","toProperty":"in-Label"},{"fromId":"5368a3b6-fa3c-3275-3784-d6a78e999143","fromProperty":"prop-Icon","toId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","toProperty":"in-Icon"},{"fromId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","fromProperty":"out-Icon","toId":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","toProperty":"in-Icon"},{"fromId":"cfd889e9-8dd8-cc58-360c-51b433f4ddca","fromProperty":"stored","toId":"ec078a99-e3d2-3bec-b526-bd5ec092f6f1","toProperty":"Selection Changed"},{"fromId":"211fc11a-61fc-d73a-ca7c-241cb2a1901a","fromProperty":"onChange","toId":"cfd889e9-8dd8-cc58-360c-51b433f4ddca","toProperty":"store"},{"fromId":"211fc11a-61fc-d73a-ca7c-241cb2a1901a","fromProperty":"onChange","toId":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","toProperty":"in-Changed"},{"fromId":"211fc11a-61fc-d73a-ca7c-241cb2a1901a","fromProperty":"checked","toId":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","toProperty":"in-Checked"},{"fromId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","fromProperty":"out-Checked","toId":"211fc11a-61fc-d73a-ca7c-241cb2a1901a","toProperty":"checked"},{"fromId":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","fromProperty":"out-Label","toId":"211fc11a-61fc-d73a-ca7c-241cb2a1901a","toProperty":"label"}],"roots":[{"id":"7e2c658d-ac2e-f254-6145-8b1b155d150f","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"211fc11a-61fc-d73a-ca7c-241cb2a1901a","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"5368a3b6-fa3c-3275-3784-d6a78e999143","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"cfd889e9-8dd8-cc58-360c-51b433f4ddca","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"0d5aaa78-8816-c6c3-ab3e-110ad7699979","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a7f5e48b-0e8a-cbd2-7ee7-ce97392941ff","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"ec078a99-e3d2-3bec-b526-bd5ec092f6f1","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["7e2c658d-ac2e-f254-6145-8b1b155d150f"]}},{"name":"/Collection Pages/Daily/Daily Tasks","id":"01c48408-1c00-9b01-75ca-10a008657298","graph":{"connections":[],"roots":[{"id":"8a847266-9db6-4cdb-97d1-01aa8610a5e1","type":"Group","x":0,"y":0,"parameters":{"width":{"value":100,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"7e9216fb-10ad-47ba-22fb-c1bcf0f506ce","type":"module.inlineHtml","label":"Daily Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #7a3aaf; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/daily.png'),\r\n    url('/images/background/daily.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"36cafe01-3017-333c-71a4-a1cfa78f4441","type":"Group","label":"Daily Tasks","parameters":{"borderRadius":{"value":12,"unit":"px"},"sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"658d8641-2546-fe99-b6ce-5c7b305256dd","type":"Text","parameters":{"text":"Daily Tasks","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#E5C7FF"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"bb1aa350-209d-f265-38fe-886c8d072d6a","type":"/Collection Pages/Daily/Daily Events","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"ebbfa9cf-e579-ed60-2fb9-86c5518bd46a","type":"/Collection Pages/Daily/Daily Fossil","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"1e21d45a-9f36-0d7a-77d6-f3984d87a9a9","type":"/Collection Pages/Daily/Daily Villagers","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"b505eb01-e5d3-8a38-d92f-194b5a02b8ee","type":"/Collection Pages/Daily/Daily Misc","parameters":{},"ports":[],"dynamicports":[],"children":[]}]}],"visualRoots":["8a847266-9db6-4cdb-97d1-01aa8610a5e1"]}},{"name":"/Collection Pages/Daily/Daily Villagers","id":"fe84b526-1808-98d7-9d6d-7dd4f1171dd7","graph":{"connections":[{"fromId":"bc582804-b6a2-e4dc-cd3f-a29834eb11f0","fromProperty":"out-StringArray","toId":"daf2f6eb-a642-365a-bb52-d0e24ca865e9","toProperty":"Labels"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings2","toId":"e729bda0-55a6-a62e-cbea-0aaaed42e914","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings3","toId":"7436f835-627b-29c9-331d-d826e1af7717","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings4","toId":"d730e0d9-e585-cc08-8ec5-ef5b66000956","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings5","toId":"4395a9f9-6e6d-3c65-b3f4-9730be034b60","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings6","toId":"c4a68a34-1b82-67e3-6497-db77092e4abd","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings7","toId":"a41328d4-22dc-c1ed-98ea-ae7abd424b02","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings8","toId":"9d283545-f77f-634e-2214-3ee4ad382e24","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings9","toId":"557f21db-b30c-d9fb-240c-5dc85bea7422","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings10","toId":"493bd1d7-99ad-9baa-6c6c-ee8eddf2d181","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings11","toId":"ae97dcc6-84b5-c71f-f738-1528093a28ba","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings12","toId":"715f7fd0-9046-d1ad-3e13-386f7cc5b388","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings13","toId":"088ad2ba-5584-1852-69d4-202799f08956","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings14","toId":"a8aac0f2-6064-3cf4-ab7d-220f60ab494f","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings15","toId":"bf1e0750-f875-9c73-1c55-92e8979cc002","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-IconStrings1","toId":"b9b78c23-4751-0d9d-2823-f189a4af2a53","toProperty":"iconImageSource"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"b9b78c23-4751-0d9d-2823-f189a4af2a53","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"e729bda0-55a6-a62e-cbea-0aaaed42e914","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"7436f835-627b-29c9-331d-d826e1af7717","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"d730e0d9-e585-cc08-8ec5-ef5b66000956","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"4395a9f9-6e6d-3c65-b3f4-9730be034b60","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"c4a68a34-1b82-67e3-6497-db77092e4abd","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"a41328d4-22dc-c1ed-98ea-ae7abd424b02","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"9d283545-f77f-634e-2214-3ee4ad382e24","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"557f21db-b30c-d9fb-240c-5dc85bea7422","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"493bd1d7-99ad-9baa-6c6c-ee8eddf2d181","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"ae97dcc6-84b5-c71f-f738-1528093a28ba","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"715f7fd0-9046-d1ad-3e13-386f7cc5b388","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"088ad2ba-5584-1852-69d4-202799f08956","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"a8aac0f2-6064-3cf4-ab7d-220f60ab494f","toProperty":"useIcon"},{"fromId":"128636b2-7953-8726-dfc3-2329b826d5b8","fromProperty":"out-RefreshNode","toId":"bf1e0750-f875-9c73-1c55-92e8979cc002","toProperty":"useIcon"},{"fromId":"bc582804-b6a2-e4dc-cd3f-a29834eb11f0","fromProperty":"out-ObjectArray","toId":"daf2f6eb-a642-365a-bb52-d0e24ca865e9","toProperty":"Options"},{"fromId":"e5242638-b638-186c-5a36-88918c22f332","fromProperty":"items","toId":"bc582804-b6a2-e4dc-cd3f-a29834eb11f0","toProperty":"in-ObjectArray"},{"fromId":"daf2f6eb-a642-365a-bb52-d0e24ca865e9","fromProperty":"Selection","toId":"128636b2-7953-8726-dfc3-2329b826d5b8","toProperty":"in-Trigger"},{"fromId":"b9b78c23-4751-0d9d-2823-f189a4af2a53","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input1"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output1","toId":"b9b78c23-4751-0d9d-2823-f189a4af2a53","toProperty":"checked"},{"fromId":"e729bda0-55a6-a62e-cbea-0aaaed42e914","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input2"},{"fromId":"7436f835-627b-29c9-331d-d826e1af7717","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input3"},{"fromId":"d730e0d9-e585-cc08-8ec5-ef5b66000956","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input4"},{"fromId":"4395a9f9-6e6d-3c65-b3f4-9730be034b60","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input5"},{"fromId":"c4a68a34-1b82-67e3-6497-db77092e4abd","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input6"},{"fromId":"a41328d4-22dc-c1ed-98ea-ae7abd424b02","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input7"},{"fromId":"9d283545-f77f-634e-2214-3ee4ad382e24","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input8"},{"fromId":"557f21db-b30c-d9fb-240c-5dc85bea7422","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input9"},{"fromId":"493bd1d7-99ad-9baa-6c6c-ee8eddf2d181","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input10"},{"fromId":"ae97dcc6-84b5-c71f-f738-1528093a28ba","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input11"},{"fromId":"715f7fd0-9046-d1ad-3e13-386f7cc5b388","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input12"},{"fromId":"088ad2ba-5584-1852-69d4-202799f08956","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input13"},{"fromId":"a8aac0f2-6064-3cf4-ab7d-220f60ab494f","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input14"},{"fromId":"bf1e0750-f875-9c73-1c55-92e8979cc002","fromProperty":"checked","toId":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","toProperty":"in-Input15"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output2","toId":"e729bda0-55a6-a62e-cbea-0aaaed42e914","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output3","toId":"7436f835-627b-29c9-331d-d826e1af7717","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output4","toId":"d730e0d9-e585-cc08-8ec5-ef5b66000956","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output5","toId":"4395a9f9-6e6d-3c65-b3f4-9730be034b60","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output6","toId":"c4a68a34-1b82-67e3-6497-db77092e4abd","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output7","toId":"a41328d4-22dc-c1ed-98ea-ae7abd424b02","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output8","toId":"9d283545-f77f-634e-2214-3ee4ad382e24","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output9","toId":"557f21db-b30c-d9fb-240c-5dc85bea7422","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output10","toId":"493bd1d7-99ad-9baa-6c6c-ee8eddf2d181","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output11","toId":"ae97dcc6-84b5-c71f-f738-1528093a28ba","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output12","toId":"715f7fd0-9046-d1ad-3e13-386f7cc5b388","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output13","toId":"088ad2ba-5584-1852-69d4-202799f08956","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output14","toId":"a8aac0f2-6064-3cf4-ab7d-220f60ab494f","toProperty":"checked"},{"fromId":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","fromProperty":"out-Output15","toId":"bf1e0750-f875-9c73-1c55-92e8979cc002","toProperty":"checked"},{"fromId":"b9b78c23-4751-0d9d-2823-f189a4af2a53","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"e729bda0-55a6-a62e-cbea-0aaaed42e914","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"7436f835-627b-29c9-331d-d826e1af7717","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"d730e0d9-e585-cc08-8ec5-ef5b66000956","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"4395a9f9-6e6d-3c65-b3f4-9730be034b60","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"c4a68a34-1b82-67e3-6497-db77092e4abd","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"a41328d4-22dc-c1ed-98ea-ae7abd424b02","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"9d283545-f77f-634e-2214-3ee4ad382e24","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"557f21db-b30c-d9fb-240c-5dc85bea7422","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"493bd1d7-99ad-9baa-6c6c-ee8eddf2d181","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"ae97dcc6-84b5-c71f-f738-1528093a28ba","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"715f7fd0-9046-d1ad-3e13-386f7cc5b388","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"088ad2ba-5584-1852-69d4-202799f08956","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"a8aac0f2-6064-3cf4-ab7d-220f60ab494f","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"},{"fromId":"bf1e0750-f875-9c73-1c55-92e8979cc002","fromProperty":"onChange","toId":"97f6a762-a63e-6be4-1a81-3b67d131485f","toProperty":"run"}],"roots":[{"id":"6a0c7e10-9e68-29ec-3359-f598d5cec326","type":"Group","x":0,"y":0,"parameters":{"width":{"value":100,"unit":"%"},"sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"bd036b95-b120-ba11-0cfd-a27f5505837f","type":"module.inlineHtml","label":"Daily Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #7a3aaf; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/daily.png'),\r\n    url('/images/background/daily.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"efebf47f-e937-e77d-ed32-22377b9e8966","type":"Group","label":"Villagers","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":19,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#E5C7FF","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"27adf210-1994-85e5-b6a1-74e2f06cea70","type":"Group","label":"Villager Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1d1e1c2e-dfbc-550c-ddf2-d5f8e7064bd6","type":"Image","label":"Villager","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/villager.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"204d9397-8e71-257f-51ac-8093c299111f","type":"Text","parameters":{"text":"Talk to Villagers","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"787107aa-0397-bb74-e310-b7be09188062","type":"Group","label":"Villager Icons","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","sizeMode":"contentSize","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"none","borderColor":"Primary","borderWidth":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c3ddb773-f39f-1d3e-df75-20f900dc0de7","type":"Group","parameters":{"alignX":"center"},"ports":[],"dynamicports":[],"children":[{"id":"daf2f6eb-a642-365a-bb52-d0e24ca865e9","type":"/Multi Choice With Pills","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"d2cf26b9-91bf-f950-f306-df130ca17123","type":"Group","label":"Main container for the grid","parameters":{"flexDirection":"column","nodeLabel":"Main container for the grid","alignX":"center","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"borderColor":"Nook Tan Dark","borderWidth":{"value":10,"unit":"px"},"borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4015a98d-5255-90bd-034c-8e76ade5a367","type":"Group","parameters":{"backgroundColor":"Nook Tan","borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","borderRadius":{"value":3,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"73a26c61-94b7-4425-8995-e2e566d5668e","type":"Group","label":"First row of the grid","parameters":{"flexDirection":"row","nodeLabel":"First row of the grid","backgroundColor":"Nook Tan","marginTop":{"value":0,"unit":"px"},"sizeMode":"explicit"},"ports":[],"dynamicports":[],"children":[{"id":"b9b78c23-4751-0d9d-2823-f189a4af2a53","type":"net.noodl.controls.checkbox","label":"Villager 1","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderRadius":{"value":15,"unit":"px"},"borderStyle":"none","marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e729bda0-55a6-a62e-cbea-0aaaed42e914","type":"net.noodl.controls.checkbox","label":"Villager 2","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"7436f835-627b-29c9-331d-d826e1af7717","type":"net.noodl.controls.checkbox","label":"Villager 3","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"d730e0d9-e585-cc08-8ec5-ef5b66000956","type":"net.noodl.controls.checkbox","label":"Villager 4","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"4395a9f9-6e6d-3c65-b3f4-9730be034b60","type":"net.noodl.controls.checkbox","label":"Villager 5","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"683349d9-aea2-448c-640d-4e598658405a","type":"Group","label":"Second row of the grid","parameters":{"flexDirection":"row","nodeLabel":"First row of the grid","backgroundColor":"Nook Tan","sizeMode":"explicit"},"ports":[],"dynamicports":[],"children":[{"id":"c4a68a34-1b82-67e3-6497-db77092e4abd","type":"net.noodl.controls.checkbox","label":"Villager 6","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a41328d4-22dc-c1ed-98ea-ae7abd424b02","type":"net.noodl.controls.checkbox","label":"Villager 7","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"9d283545-f77f-634e-2214-3ee4ad382e24","type":"net.noodl.controls.checkbox","label":"Villager 8","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"557f21db-b30c-d9fb-240c-5dc85bea7422","type":"net.noodl.controls.checkbox","label":"Villager 9","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"493bd1d7-99ad-9baa-6c6c-ee8eddf2d181","type":"net.noodl.controls.checkbox","label":"Villager 10","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8e72e82e-96a3-44e5-ab44-c7fe5c140a52","type":"Group","label":"Third row of the grid","parameters":{"flexDirection":"row","nodeLabel":"First row of the grid","backgroundColor":"Nook Tan","sizeMode":"explicit"},"ports":[],"dynamicports":[],"children":[{"id":"ae97dcc6-84b5-c71f-f738-1528093a28ba","type":"net.noodl.controls.checkbox","label":"Villager 11","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"715f7fd0-9046-d1ad-3e13-386f7cc5b388","type":"net.noodl.controls.checkbox","label":"Villager 12","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderRadius":{"value":15,"unit":"px"},"borderStyle":"none","marginBottom":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"088ad2ba-5584-1852-69d4-202799f08956","type":"net.noodl.controls.checkbox","label":"Villager 13","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderStyle":"none","borderRadius":{"value":15,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a8aac0f2-6064-3cf4-ab7d-220f60ab494f","type":"net.noodl.controls.checkbox","label":"Villager 14","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderRadius":{"value":15,"unit":"px"},"borderStyle":"none","marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"bf1e0750-f875-9c73-1c55-92e8979cc002","type":"net.noodl.controls.checkbox","label":"Villager 15","parameters":{"useIcon":true,"useLabel":false,"iconSourceType":"image","iconImageSource":"https://sk-crow.github.io/Animal-Crossing-Gamecube-Checklist/images/question_mark.png","width":{"value":50,"unit":"px"},"height":{"value":50,"unit":"px"},"iconSize":{"value":50,"unit":"px"},"borderRadius":{"value":15,"unit":"px"},"borderStyle":"none","marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]}]}]}]}]},{"id":"bc582804-b6a2-e4dc-cd3f-a29834eb11f0","type":"JavaScriptFunction","label":"Array Conversion/Filtering","x":-271.1122449705281,"y":683.8299361011565,"parameters":{"functionScript":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Filter the array to only include objects where Checked is true\n  const savedSelection = objectArray.filter(object => object.Checked === true);\n\n  // Output the filtered array of objects\n  Outputs.SavedSelection = savedSelection;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-ObjectArray","displayName":"ObjectArray","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-StringArray","displayName":"StringArray","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-ObjectArray","displayName":"ObjectArray","plug":"output","type":"*","group":"Outputs","index":9},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":10}],"children":[],"metadata":{"prompt":{"history":[{"content":"Convert array of objects to array of strings","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => JSON.stringify(object));\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"0191009d8ea1-bsdwo2","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, converts each object into a string using JSON.stringify, and outputs an array of these strings to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output. \n\nIf the input array is empty, it throws an error. \n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf any error occurs during the operation, it outputs the error to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191009dbcca-9xvg1r","metadata":{}},{"content":"I need StringArray to only have Labels and ObjectArray (a new one) that sends all unfiltered options","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100bf0fa8-v18ano","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, checks if the array is not empty, and then converts each object in the array to a string by extracting the 'Label' property from each object. The resulting array of strings is then outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output.\n\nThe original unfiltered array of objects is also outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ObjectArray</span> output.\n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there's an error during the operation, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output with the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019100bf3215-q6ix0y","metadata":{}},{"content":"Create new output \"SavedSelection\" to pass \"Checked: True\" ","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Filter the array to only include objects where Checked is true\n  const savedSelection = objectArray.filter(object => object.Checked === true);\n\n  // Output the filtered array of objects\n  Outputs.SavedSelection = savedSelection;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a74f6f7-cvxajl","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, checks if the array is not empty, and then performs two operations on it.\n\nFirst, it converts each object in the array to a string using the 'Label' property of the object and stores these strings in a new array. This new array is then outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output.\n\nSecond, it filters the input array to only include objects where the 'Checked' property is true. This filtered array is then outputted through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.SavedSelection</span> output.\n\nThe function also outputs the original unfiltered array of objects through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ObjectArray</span> output.\n\nIf the function executes successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there's an error during the execution, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output with the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a7526e9-kljtqr","metadata":{}},{"content":"Undo that last change\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input array of objects\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the input array is not empty\nif (!objectArray.length) throw new Error('Input array is empty');\n\ntry {\n  // Convert each object in the array to a string and store them in a new array\n  const stringArray = objectArray.map(object => object.Label);\n\n  // Output the new array of strings\n  Outputs.StringArray = stringArray;\n\n  // Filter the array to only include objects where Checked is true\n  const savedSelection = objectArray.filter(object => object.Checked === true);\n\n  // Output the filtered array of objects\n  Outputs.SavedSelection = savedSelection;\n\n  // Output the original unfiltered array of objects\n  Outputs.ObjectArray = objectArray;\n\n  // Signal that the operation was successful\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal that the operation failed\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a7667c3-kbpcsr","type":"user"},{"type":"assistant","content":"\nThis function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, converts each object to a string, and outputs the new array of strings via the <span style=\"color: var(--base-color-yellow-400);\">Outputs.StringArray</span> output.\n\nIt also filters the input array to only include objects where the property 'Checked' is true, and outputs this filtered array via the <span style=\"color: var(--base-color-yellow-400);\">Outputs.SavedSelection</span> output.\n\nThe original unfiltered array of objects is output via the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ObjectArray</span> output.\n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there's an error during the operation, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output with the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a76a319-ct9g8o","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"128636b2-7953-8726-dfc3-2329b826d5b8","type":"JavaScriptFunction","label":"Extract Icon Strings from Object Array","x":721.2926954210375,"y":1274.932335229585,"parameters":{"functionScript":"// Default icon URL\nconst defaultIcon = 'https://acgc.sterner.digital/images/question_mark.png';\n\n// Get all localStorage keys that start with 'v-' and sort them numerically\nfunction getSortedVKeys() {\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith('v-')) {\n            keys.push(key);\n        }\n    }\n\n    // Sort keys numerically based on their suffix\n    keys.sort((a, b) => {\n        const numA = parseInt(a.substring(2), 10); // Extract numerical part\n        const numB = parseInt(b.substring(2), 10); // Extract numerical part\n        return numA - numB;\n    });\n\n    return keys;\n}\n\n// Function to process and output icon strings\nfunction processIcons() {\n    try {\n        // Retrieve and sort 'v-' keys from localStorage\n        const sortedKeys = getSortedVKeys();\n\n        // Map through the sorted keys and extract icon values\n        const iconStrings = sortedKeys.slice(0, 15).map(key => {\n            const storedData = localStorage.getItem(key);\n            if (storedData) {\n                try {\n                    const parsedData = JSON.parse(storedData);\n                    return parsedData.icon || defaultIcon;\n                } catch (error) {\n                    console.error(`Error parsing JSON for key ${key}:`, error);\n                    return defaultIcon;\n                }\n            } else {\n                return defaultIcon;\n            }\n        });\n\n        // Output the icon strings to separate outputs explicitly\n        Outputs.IconStrings1 = iconStrings[0] || defaultIcon;\n        Outputs.IconStrings2 = iconStrings[1] || defaultIcon;\n        Outputs.IconStrings3 = iconStrings[2] || defaultIcon;\n        Outputs.IconStrings4 = iconStrings[3] || defaultIcon;\n        Outputs.IconStrings5 = iconStrings[4] || defaultIcon;\n        Outputs.IconStrings6 = iconStrings[5] || defaultIcon;\n        Outputs.IconStrings7 = iconStrings[6] || defaultIcon;\n        Outputs.IconStrings8 = iconStrings[7] || defaultIcon;\n        Outputs.IconStrings9 = iconStrings[8] || defaultIcon;\n        Outputs.IconStrings10 = iconStrings[9] || defaultIcon;\n        Outputs.IconStrings11 = iconStrings[10] || defaultIcon;\n        Outputs.IconStrings12 = iconStrings[11] || defaultIcon;\n        Outputs.IconStrings13 = iconStrings[12] || defaultIcon;\n        Outputs.IconStrings14 = iconStrings[13] || defaultIcon;\n        Outputs.IconStrings15 = iconStrings[14] || defaultIcon;\n\n        // Trigger the refresh output with a unique value\n        Outputs.RefreshNode = new Date().getTime();\n\n        // Debug log output\n        Outputs.DebugLog = \"Function executed at \" + new Date().toISOString();\n\n        // Signal success\n        Outputs.Success();\n    } catch (error) {\n        // Handle error and set default outputs\n        Outputs.error = error.message;\n        Outputs.IconStrings1 = defaultIcon;\n        Outputs.IconStrings2 = defaultIcon;\n        Outputs.IconStrings3 = defaultIcon;\n        Outputs.IconStrings4 = defaultIcon;\n        Outputs.IconStrings5 = defaultIcon;\n        Outputs.IconStrings6 = defaultIcon;\n        Outputs.IconStrings7 = defaultIcon;\n        Outputs.IconStrings8 = defaultIcon;\n        Outputs.IconStrings9 = defaultIcon;\n        Outputs.IconStrings10 = defaultIcon;\n        Outputs.IconStrings11 = defaultIcon;\n        Outputs.IconStrings12 = defaultIcon;\n        Outputs.IconStrings13 = defaultIcon;\n        Outputs.IconStrings14 = defaultIcon;\n        Outputs.IconStrings15 = defaultIcon;\n\n        // Signal failure\n        Outputs.Failure();\n    }\n}\n\n// Event listener for localStorage changes from other windows or tabs\nwindow.addEventListener('storage', function(event) {\n    if (event.storageArea === localStorage) {\n        processIcons();\n    }\n});\n\n// Check for input trigger to run processIcons\nif (Inputs.Trigger) {\n    processIcons();\n}\n\n// Call the function initially to populate outputs\nprocessIcons();\n"},"ports":[],"dynamicports":[{"name":"in-Trigger","displayName":"Trigger","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-IconStrings1","displayName":"IconStrings1","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-IconStrings2","displayName":"IconStrings2","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-IconStrings3","displayName":"IconStrings3","plug":"output","type":"*","group":"Outputs","index":9},{"name":"out-IconStrings4","displayName":"IconStrings4","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-IconStrings5","displayName":"IconStrings5","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-IconStrings6","displayName":"IconStrings6","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-IconStrings7","displayName":"IconStrings7","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-IconStrings8","displayName":"IconStrings8","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-IconStrings9","displayName":"IconStrings9","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-IconStrings10","displayName":"IconStrings10","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-IconStrings11","displayName":"IconStrings11","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-IconStrings12","displayName":"IconStrings12","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-IconStrings13","displayName":"IconStrings13","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-IconStrings14","displayName":"IconStrings14","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-IconStrings15","displayName":"IconStrings15","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-RefreshNode","displayName":"RefreshNode","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-DebugLog","displayName":"DebugLog","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"prompt":{"history":[{"content":"Extract Icon strings from ObjectAray","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the object array is not empty\nif (!objectArray.length) throw new Error('Object array is empty');\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map(obj => obj.icon);\n\n  // Output the icon strings\n  Outputs.IconStrings = iconStrings;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal failure\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100cba2ee-np7rmq","type":"user"},{"type":"assistant","content":"\nThis function extracts icon strings from an array of objects. \n\nIt takes an array of objects as input through <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span>. It then iterates over this array, extracting the 'icon' property from each object and storing these in a new array. \n\nThe resulting array of icon strings is then output through <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings</span>. \n\nIf the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error during the process, it sets the error message to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019100cbc5b5-lw48qc","metadata":{}},{"content":"It's outputting Null when it should be outputting Icon's string","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the object array is not empty\nif (!objectArray.length) throw new Error('Object array is empty');\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map(obj => {\n    // Check if the object has the property \"icon\"\n    if (!obj.hasOwnProperty('icon')) {\n      throw new Error('Object does not have property \"icon\"');\n    }\n    return obj.icon;\n  });\n\n  // Output the icon strings\n  Outputs.IconStrings = iconStrings;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal failure\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100cd3bf8-at6rps","type":"user"},{"type":"assistant","content":"\nThis function extracts the \"icon\" property values from an array of objects and outputs them as an array of strings. \n\nIt takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input. It then checks if the array is not empty. If it is, it throws an error. \n\nNext, it maps through the array and for each object, it checks if the \"icon\" property exists. If it doesn't, it throws an error. If it does, it adds the value of the \"icon\" property to a new array. \n\nThe function then outputs this new array of icon strings through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings</span> output and signals success through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nIf there's an error at any point during the process, it outputs the error through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and signals failure through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output.\n","snowflakeId":"019100cd6bd1-0r5579","metadata":{}},{"content":"The property we want is \"Icons\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\n// Check if the object array is not empty\nif (!objectArray.length) throw new Error('Object array is empty');\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map(obj => {\n    // Check if the object has the property \"Icons\"\n    if (!obj.hasOwnProperty('Icons')) {\n      throw new Error('Object does not have property \"Icons\"');\n    }\n    return obj.Icons;\n  });\n\n  // Output the icon strings\n  Outputs.IconStrings = iconStrings;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error\n  Outputs.error = error;\n\n  // Signal failure\n  Outputs.Failure();\n}\n"},"snowflakeId":"019100ce2c29-yrc3rv","type":"user"},{"type":"assistant","content":"\nThis function extracts the \"Icons\" property from an array of objects.\n\nIt takes an array of objects as input through <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span>. It then iterates over each object in the array, checks if the object has a property named \"Icons\", and if it does, it adds the value of the \"Icons\" property to a new array.\n\nThe new array of icon strings is then output through <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings</span>. If the function successfully extracts the icon strings from all objects in the array, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the input array is empty or if any object in the array does not have the \"Icons\" property, the function outputs an error message through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019100ce532a-7ox1js","metadata":{}},{"content":"When updated data is received, all attached checkboxes should refresh.","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\ntry {\n  // Map through the object array and extract the checkbox states\n  const checkboxStates = objectArray.map((obj, index) => {\n    // Check if the object has the property \"Checkbox\"\n    if (obj && obj.Checkbox !== undefined && obj.Checkbox !== null) {\n      return obj.Checkbox;\n    } else {\n      return false; // Default state for checkbox is unchecked\n    }\n  });\n\n  // Output the checkbox states to separate outputs explicitly\n  Outputs.CheckboxState1 = checkboxStates[0] || false;\n  Outputs.CheckboxState2 = checkboxStates[1] || false;\n  Outputs.CheckboxState3 = checkboxStates[2] || false;\n  Outputs.CheckboxState4 = checkboxStates[3] || false;\n  Outputs.CheckboxState5 = checkboxStates[4] || false;\n  Outputs.CheckboxState6 = checkboxStates[5] || false;\n  Outputs.CheckboxState7 = checkboxStates[6] || false;\n  Outputs.CheckboxState8 = checkboxStates[7] || false;\n  Outputs.CheckboxState9 = checkboxStates[8] || false;\n  Outputs.CheckboxState10 = checkboxStates[9] || false;\n  Outputs.CheckboxState11 = checkboxStates[10] || false;\n  Outputs.CheckboxState12 = checkboxStates[11] || false;\n  Outputs.CheckboxState13 = checkboxStates[12] || false;\n  Outputs.CheckboxState14 = checkboxStates[13] || false;\n  Outputs.CheckboxState15 = checkboxStates[14] || false;\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error and set all CheckboxState outputs to the default state (unchecked)\n  Outputs.error = error.message;\n  Outputs.CheckboxState1 = false;\n  Outputs.CheckboxState2 = false;\n  Outputs.CheckboxState3 = false;\n  Outputs.CheckboxState4 = false;\n  Outputs.CheckboxState5 = false;\n  Outputs.CheckboxState6 = false;\n  Outputs.CheckboxState7 = false;\n  Outputs.CheckboxState8 = false;\n  Outputs.CheckboxState9 = false;\n  Outputs.CheckboxState10 = false;\n  Outputs.CheckboxState11 = false;\n  Outputs.CheckboxState12 = false;\n  Outputs.CheckboxState13 = false;\n  Outputs.CheckboxState14 = false;\n  Outputs.CheckboxState15 = false;\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a77f4eb-pu946l","type":"user"},{"type":"assistant","content":"\nThis function extracts the checkbox states from an array of objects and assigns them to individual outputs.\n\nThe function takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input. It then iterates over this array, checking each object for a property named \"Checkbox\". If this property exists and is not null, its value is added to a new array of checkbox states. If the property does not exist or is null, a default value of false is added to the array instead.\n\nThe function then assigns the checkbox states to individual outputs, <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState1</span> through <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState15</span>. If there are fewer than 15 objects in the input array, the remaining outputs are assigned a default value of false.\n\nIf the function executes successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If an error occurs during execution, the function catches the error, assigns its message to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output, sets all CheckboxState outputs to false, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a7868ff-xvs7j1","metadata":{}},{"content":"I needed the images passed through like how i had it before, but I need it to also refresh so the icon is displayed, but I cannot refresh the whole page, just the checkbox nodes that were updated.","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\ntry {\n  // Map through the object array and extract the checkbox states\n  const checkboxStates = objectArray.map((obj, index) => {\n    // Check if the object has the property \"Checkbox\"\n    if (obj && obj.Checkbox !== undefined && obj.Checkbox !== null) {\n      return obj.Checkbox;\n    } else {\n      return false; // Default state for checkbox is unchecked\n    }\n  });\n\n  // Output the checkbox states to separate outputs explicitly\n  Outputs.CheckboxState1 = checkboxStates[0] || false;\n  Outputs.CheckboxState2 = checkboxStates[1] || false;\n  Outputs.CheckboxState3 = checkboxStates[2] || false;\n  Outputs.CheckboxState4 = checkboxStates[3] || false;\n  Outputs.CheckboxState5 = checkboxStates[4] || false;\n  Outputs.CheckboxState6 = checkboxStates[5] || false;\n  Outputs.CheckboxState7 = checkboxStates[6] || false;\n  Outputs.CheckboxState8 = checkboxStates[7] || false;\n  Outputs.CheckboxState9 = checkboxStates[8] || false;\n  Outputs.CheckboxState10 = checkboxStates[9] || false;\n  Outputs.CheckboxState11 = checkboxStates[10] || false;\n  Outputs.CheckboxState12 = checkboxStates[11] || false;\n  Outputs.CheckboxState13 = checkboxStates[12] || false;\n  Outputs.CheckboxState14 = checkboxStates[13] || false;\n  Outputs.CheckboxState15 = checkboxStates[14] || false;\n\n  // Send signal for each checkbox state that has changed\n  if (Outputs.CheckboxState1 !== checkboxStates[0]) Outputs.CheckboxState1Changed();\n  if (Outputs.CheckboxState2 !== checkboxStates[1]) Outputs.CheckboxState2Changed();\n  if (Outputs.CheckboxState3 !== checkboxStates[2]) Outputs.CheckboxState3Changed();\n  if (Outputs.CheckboxState4 !== checkboxStates[3]) Outputs.CheckboxState4Changed();\n  if (Outputs.CheckboxState5 !== checkboxStates[4]) Outputs.CheckboxState5Changed();\n  if (Outputs.CheckboxState6 !== checkboxStates[5]) Outputs.CheckboxState6Changed();\n  if (Outputs.CheckboxState7 !== checkboxStates[6]) Outputs.CheckboxState7Changed();\n  if (Outputs.CheckboxState8 !== checkboxStates[7]) Outputs.CheckboxState8Changed();\n  if (Outputs.CheckboxState9 !== checkboxStates[8]) Outputs.CheckboxState9Changed();\n  if (Outputs.CheckboxState10 !== checkboxStates[9]) Outputs.CheckboxState10Changed();\n  if (Outputs.CheckboxState11 !== checkboxStates[10]) Outputs.CheckboxState11Changed();\n  if (Outputs.CheckboxState12 !== checkboxStates[11]) Outputs.CheckboxState12Changed();\n  if (Outputs.CheckboxState13 !== checkboxStates[12]) Outputs.CheckboxState13Changed();\n  if (Outputs.CheckboxState14 !== checkboxStates[13]) Outputs.CheckboxState14Changed();\n  if (Outputs.CheckboxState15 !== checkboxStates[14]) Outputs.CheckboxState15Changed();\n\n  // Signal success\n  Outputs.Success();\n} catch (error) {\n  // Output the error and set all CheckboxState outputs to the default state (unchecked)\n  Outputs.error = error.message;\n  Outputs.CheckboxState1 = false;\n  Outputs.CheckboxState2 = false;\n  Outputs.CheckboxState3 = false;\n  Outputs.CheckboxState4 = false;\n  Outputs.CheckboxState5 = false;\n  Outputs.CheckboxState6 = false;\n  Outputs.CheckboxState7 = false;\n  Outputs.CheckboxState8 = false;\n  Outputs.CheckboxState9 = false;\n  Outputs.CheckboxState10 = false;\n  Outputs.CheckboxState11 = false;\n  Outputs.CheckboxState12 = false;\n  Outputs.CheckboxState13 = false;\n  Outputs.CheckboxState14 = false;\n  Outputs.CheckboxState15 = false;\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a7c825e-dweiu8","type":"user"},{"type":"assistant","content":"\nThis function extracts the checkbox states from an array of objects and outputs each state to a separate output. \n\nIt takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input, where each object is expected to have a \"Checkbox\" property. The function then maps through the array and extracts the checkbox states. \n\nThe states are outputted to <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState1</span> through <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxState15</span>. If a checkbox state has changed, it triggers the corresponding <span style=\"color: var(--base-color-yellow-400);\">Outputs.CheckboxStateChanged</span> signal. \n\nIf the function executes successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> signal. If there's an error, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, sets all CheckboxState outputs to false (unchecked), and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> signal.\n","snowflakeId":"01910a7d6291-kb0h46","metadata":{}},{"content":"Please put my iconstrings back how they were as well.  I also need those.","metadata":{"user":{"name":"Local","id":"local","email":""}},"snowflakeId":"01910a80515c-qi0b37","type":"user"},{"type":"assistant","content":"I'm sorry, but your request is not clear. Could you please provide more details or context about the \"iconstrings\" you mentioned? This will help me assist you better.","snowflakeId":"01910a806087-lpgsad","metadata":{}},{"content":"I have replaced my code back how it was.  Do not remove Outputs.IconStrings.  I need a single output to tell an object to refresh visually to display the latest data.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get the input object array\nconst objectArray = Inputs.ObjectArray || [];\n\ntry {\n  // Map through the object array and extract the icon strings\n  const iconStrings = objectArray.map((obj, index) => {\n    // Check if the object has the property \"Icon\"\n    if (obj && obj.Icon !== undefined && obj.Icon !== null) {\n      return obj.Icon;\n    } else {\n      return 'https://acgc.sterner.digital/images/question_mark.png';\n    }\n  });\n\n  // Output the icon strings to separate outputs explicitly\n  Outputs.IconStrings1 = iconStrings[0] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings2 = iconStrings[1] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings3 = iconStrings[2] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings4 = iconStrings[3] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings5 = iconStrings[4] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings6 = iconStrings[5] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings7 = iconStrings[6] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings8 = iconStrings[7] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings9 = iconStrings[8] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings10 = iconStrings[9] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings11 = iconStrings[10] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings12 = iconStrings[11] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings13 = iconStrings[12] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings14 = iconStrings[13] || 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings15 = iconStrings[14] || 'https://acgc.sterner.digital/images/question_mark.png';\n\n  // Signal success\n  Outputs.Success();\n\n  // Signal to refresh the object visually\n  Outputs.RefreshObject();\n} catch (error) {\n  // Output the error and set all IconStrings outputs to the default image\n  Outputs.error = error.message;\n  Outputs.IconStrings1 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings2 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings3 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings4 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings5 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings6 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings7 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings8 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings9 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings10 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings11 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings12 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings13 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings14 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.IconStrings15 = 'https://acgc.sterner.digital/images/question_mark.png';\n  Outputs.Failure();\n}\n"},"snowflakeId":"01910a82d84f-dy0kzk","type":"user"},{"type":"assistant","content":"\nThis function extracts icon strings from an array of objects and assigns them to individual outputs. \n\nIt takes an array of objects from the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ObjectArray</span> input. For each object in the array, it checks if the object has a property \"Icon\". If it does, the function extracts the icon string; if it doesn't, it assigns a default icon string. \n\nThe function then assigns these icon strings to individual outputs, from <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings1</span> to <span style=\"color: var(--base-color-yellow-400);\">Outputs.IconStrings15</span>. If there are fewer than 15 objects in the array, the remaining outputs are assigned the default icon string.\n\nAfter successfully extracting and assigning all icon strings, the function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.RefreshObject</span> output signal, which can be used to tell an object to refresh visually to display the latest data.\n\nIf there's an error during the process, the function assigns the default icon string to all IconStrings outputs, sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910a83e2eb-i6om54","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"e5242638-b638-186c-5a36-88918c22f332","type":"Collection2","x":-620.8836733726291,"y":737.8537455685237,"parameters":{"items":"[\r\n    {\"id\": \"v-0001\", \"Label\": \"Ace\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ace_NH_Villager_Icon.png\", \"birthday\": \"March 13th\"},\r\n    {\"id\": \"v-0002\", \"Label\": \"Admiral\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Admiral_NH_Villager_Icon.png\", \"birthday\": \"January 27th\"},\r\n    {\"id\": \"v-0003\", \"Label\": \"Alfonso\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Alfonso_NH_Villager_Icon.png\", \"birthday\": \"June 9th\"},\r\n    {\"id\": \"v-0004\", \"Label\": \"Alli\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Alli_NH_Villager_Icon.png\", \"birthday\": \"November 9th\"},\r\n    {\"id\": \"v-0005\", \"Label\": \"Amelia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Amelia_NH_Villager_Icon.png\", \"birthday\": \"November 19th\"},\r\n    {\"id\": \"v-0006\", \"Label\": \"Anchovy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Anchovy_NH_Villager_Icon.png\", \"birthday\": \"March 4th\"},\r\n    {\"id\": \"v-0007\", \"Label\": \"Anicotti\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Anicotti_NH_Villager_Icon.png\", \"birthday\": \"February 24th\"},\r\n    {\"id\": \"v-0008\", \"Label\": \"Apollo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Apollo_NH_Villager_Icon.png\", \"birthday\": \"July 4th\"},\r\n    {\"id\": \"v-0009\", \"Label\": \"Astrid\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Astrid_NH_Villager_Icon.png\", \"birthday\": \"September 8th\"},\r\n    {\"id\": \"v-0010\", \"Label\": \"Aurora\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Aurora_NH_Villager_Icon.png\", \"birthday\": \"January 27th\"},\r\n    {\"id\": \"v-0011\", \"Label\": \"Ava\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ava_NH_Villager_Icon.png\", \"birthday\": \"April 28th\"},\r\n    {\"id\": \"v-0012\", \"Label\": \"Axel\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Axel_NH_Villager_Icon.png\", \"birthday\": \"March 23rd\"},\r\n    {\"id\": \"v-0013\", \"Label\": \"Aziz\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Aziz_PG_Model.png\", \"birthday\": \"February 26th\"},\r\n    {\"id\": \"v-0014\", \"Label\": \"Baabara\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Baabara_NH_Villager_Icon.png\", \"birthday\": \"March 28th\"},\r\n    {\"id\": \"v-0015\", \"Label\": \"Bangle\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bangle_NH_Villager_Icon.png\", \"birthday\": \"August 27th\"},\r\n    {\"id\": \"v-0016\", \"Label\": \"Bea\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bea_NH_Villager_Icon.png\", \"birthday\": \"October 15th\"},\r\n    {\"id\": \"v-0017\", \"Label\": \"Belle\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Belle_PG_Model.png\", \"birthday\": \"June 27th\"},\r\n    {\"id\": \"v-0018\", \"Label\": \"Bertha\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bertha_NH_Villager_Icon.png\", \"birthday\": \"April 25th\"},\r\n    {\"id\": \"v-0019\", \"Label\": \"Bessie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Bessie_PG_Model.png\", \"birthday\": \"May 10th\"},\r\n    {\"id\": \"v-0020\", \"Label\": \"Betty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Betty_PG_Model.png\", \"birthday\": \"June 13th\"},\r\n    {\"id\": \"v-0021\", \"Label\": \"Biff\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Biff_NH_Villager_Icon.png\", \"birthday\": \"March 29th\"},\r\n    {\"id\": \"v-0022\", \"Label\": \"Bill\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bill_NH_Villager_Icon.png\", \"birthday\": \"February 1st\"},\r\n    {\"id\": \"v-0023\", \"Label\": \"Billy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Billy_NH_Villager_Icon.png\", \"birthday\": \"March 25th\"},\r\n    {\"id\": \"v-0024\", \"Label\": \"Biskit\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Biskit_NH_Villager_Icon.png\", \"birthday\": \"May 13th\"},\r\n    {\"id\": \"v-0025\", \"Label\": \"Bitty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bitty_NH_Villager_Icon.png\", \"birthday\": \"October 6th\"},\r\n    {\"id\": \"v-0026\", \"Label\": \"Blaire\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Blaire_NH_Villager_Icon.png\", \"birthday\": \"July 3rd\"},\r\n    {\"id\": \"v-0027\", \"Label\": \"Bluebear\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bluebear_NH_Villager_Icon.png\", \"birthday\": \"June 24th\"},\r\n    {\"id\": \"v-0028\", \"Label\": \"Bob\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bob_NH_Villager_Icon.png\", \"birthday\": \"January 1st\"},\r\n    {\"id\": \"v-0029\", \"Label\": \"Bones\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bones_NH_Villager_Icon.png\", \"birthday\": \"August 4th\"},\r\n    {\"id\": \"v-0030\", \"Label\": \"Boots\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Boots_NH_Villager_Icon.png\", \"birthday\": \"August 7th\"},\r\n    {\"id\": \"v-0031\", \"Label\": \"Boris\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Boris_NH_Villager_Icon.png\", \"birthday\": \"November 6th\"},\r\n    {\"id\": \"v-0032\", \"Label\": \"Bubbles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bubbles_NH_Villager_Icon.png\", \"birthday\": \"September 18th\"},\r\n    {\"id\": \"v-0033\", \"Label\": \"Buck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Buck_NH_Villager_Icon.png\", \"birthday\": \"April 4th\"},\r\n    {\"id\": \"v-0034\", \"Label\": \"Bunnie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Bunnie_NH_Villager_Icon.png\", \"birthday\": \"May 9th\"},\r\n    {\"id\": \"v-0035\", \"Label\": \"Butch\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Butch_NH_Villager_Icon.png\", \"birthday\": \"November 1st\"},\r\n    {\"id\": \"v-0036\", \"Label\": \"Buzz\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Buzz_NH_Villager_Icon.png\", \"birthday\": \"December 7th\"},\r\n    {\"id\": \"v-0037\", \"Label\": \"Camofrog\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Camofrog_NH_Villager_Icon.png\", \"birthday\": \"June 5th\"},\r\n    {\"id\": \"v-0038\", \"Label\": \"Candi\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Candi_NH_Villager_Icon.png\", \"birthday\": \"April 13th\"},\r\n    {\"id\": \"v-0039\", \"Label\": \"Carmen\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Carmen_PG_Model.png\", \"birthday\": \"March 24th\"},\r\n    {\"id\": \"v-0040\", \"Label\": \"Carrie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Carrie_NH_Villager_Icon.png\", \"birthday\": \"December 5th\"},\r\n    {\"id\": \"v-0041\", \"Label\": \"Cashmere\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cashmere_NH_Villager_Icon.png\", \"birthday\": \"April 2nd\"},\r\n    {\"id\": \"v-0042\", \"Label\": \"Cesar\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cesar_NH_Villager_Icon.png\", \"birthday\": \"September 6th\"},\r\n    {\"id\": \"v-0043\", \"Label\": \"Cheri\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cheri_NH_Villager_Icon.png\", \"birthday\": \"March 17th\"},\r\n    {\"id\": \"v-0044\", \"Label\": \"Chevre\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Chevre_NH_Villager_Icon.png\", \"birthday\": \"March 6th\"},\r\n    {\"id\": \"v-0045\", \"Label\": \"Chico\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Chico_PG_Model.png\", \"birthday\": \"January 3rd\"},\r\n    {\"id\": \"v-0046\", \"Label\": \"Chief\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Chief_NH_Villager_Icon.png\", \"birthday\": \"December 19th\"},\r\n    {\"id\": \"v-0047\", \"Label\": \"Chow\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Chow_NH_Villager_Icon.png\", \"birthday\": \"July 22nd\"},\r\n    {\"id\": \"v-0048\", \"Label\": \"Chuck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Chuck_PG_Model.png\", \"birthday\": \"May 14th\"},\r\n    {\"id\": \"v-0049\", \"Label\": \"Claude\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Claude_NH_Villager_Icon.png\", \"birthday\": \"December 3rd\"},\r\n    {\"id\": \"v-0050\", \"Label\": \"Cleo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cleo_NH_Villager_Icon.png\", \"birthday\": \"February 9th\"},\r\n    {\"id\": \"v-0051\", \"Label\": \"Cobb\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cobb_NH_Villager_Icon.png\", \"birthday\": \"October 7th\"},\r\n    {\"id\": \"v-0052\", \"Label\": \"Coco\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Coco_NH_Villager_Icon.png\", \"birthday\": \"March 1st\"},\r\n    {\"id\": \"v-0053\", \"Label\": \"Cookie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cookie_NH_Villager_Icon.png\", \"birthday\": \"June 18th\"},\r\n    {\"id\": \"v-0054\", \"Label\": \"Cousteau\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cousteau_NH_Villager_Icon.png\", \"birthday\": \"December 17th\"},\r\n    {\"id\": \"v-0055\", \"Label\": \"Cube\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cube_NH_Villager_Icon.png\", \"birthday\": \"January 29th\"},\r\n    {\"id\": \"v-0056\", \"Label\": \"Cupcake\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Cupcake_PG_Model.png\", \"birthday\": \"May 29th\"},\r\n    {\"id\": \"v-0057\", \"Label\": \"Curly\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Curly_NH_Villager_Icon.png\", \"birthday\": \"July 26th\"},\r\n    {\"id\": \"v-0058\", \"Label\": \"Cyrano\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Cyrano_NH_Villager_Icon.png\", \"birthday\": \"March 9th\"},\r\n    {\"id\": \"v-0059\", \"Label\": \"Daisy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Daisy_NH_Villager_Icon.png\", \"birthday\": \"November 16th\"},\r\n    {\"id\": \"v-0060\", \"Label\": \"Deena\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Deena_NH_Villager_Icon.png\", \"birthday\": \"June 27th\"},\r\n    {\"id\": \"v-0061\", \"Label\": \"Derwin\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Derwin_NH_Villager_Icon.png\", \"birthday\": \"May 25th\"},\r\n    {\"id\": \"v-0062\", \"Label\": \"Dizzy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Dizzy_NH_Villager_Icon.png\", \"birthday\": \"July 14th\"},\r\n    {\"id\": \"v-0063\", \"Label\": \"Doc\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Doc_NH_Villager_Icon.png\", \"birthday\": \"March 16th\"},\r\n    {\"id\": \"v-0064\", \"Label\": \"Dora\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Dora_NH_Villager_Icon.png\", \"birthday\": \"February 18th\"},\r\n    {\"id\": \"v-0065\", \"Label\": \"Dotty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Dotty_NH_Villager_Icon.png\", \"birthday\": \"March 14th\"},\r\n    {\"id\": \"v-0066\", \"Label\": \"Dozer\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Dozer_PG_Model.png\", \"birthday\": \"March 10th\"},\r\n    {\"id\": \"v-0067\", \"Label\": \"Ed\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ed_NH_Villager_Icon.png\", \"birthday\": \"September 16th\"},\r\n    {\"id\": \"v-0068\", \"Label\": \"Egbert\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Egbert_NH_Villager_Icon.png\", \"birthday\": \"October 14th\"},\r\n    {\"id\": \"v-0069\", \"Label\": \"Ellie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ellie_NH_Villager_Icon.png\", \"birthday\": \"May 12th\"},\r\n    {\"id\": \"v-0070\", \"Label\": \"Elmer\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Elmer_NH_Villager_Icon.png\", \"birthday\": \"October 5th\"},\r\n    {\"id\": \"v-0071\", \"Label\": \"Eloise\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Eloise_NH_Villager_Icon.png\", \"birthday\": \"December 8th\"},\r\n    {\"id\": \"v-0072\", \"Label\": \"Emerald\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Emerald_PG_Model.png\", \"birthday\": \"July 11th\"},\r\n    {\"id\": \"v-0073\", \"Label\": \"Eunice\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Eunice_NH_Villager_Icon.png\", \"birthday\": \"April 3rd\"},\r\n    {\"id\": \"v-0074\", \"Label\": \"Fang\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Fang_NH_Villager_Icon.png\", \"birthday\": \"December 18th\"},\r\n    {\"id\": \"v-0075\", \"Label\": \"Filbert\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Filbert_NH_Villager_Icon.png\", \"birthday\": \"June 3rd\"},\r\n    {\"id\": \"v-0076\", \"Label\": \"Freckles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Freckles_NH_Villager_Icon.png\", \"birthday\": \"February 19th\"},\r\n    {\"id\": \"v-0077\", \"Label\": \"Freya\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Freya_NH_Villager_Icon.png\", \"birthday\": \"December 14th\"},\r\n    {\"id\": \"v-0078\", \"Label\": \"Friga\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Friga_NH_Villager_Icon.png\", \"birthday\": \"October 16th\"},\r\n    {\"id\": \"v-0079\", \"Label\": \"Gabi\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gabi_NH_Villager_Icon.png\", \"birthday\": \"December 16th\"},\r\n    {\"id\": \"v-0080\", \"Label\": \"Gaston\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gaston_NH_Villager_Icon.png\", \"birthday\": \"October 28th\"},\r\n    {\"id\": \"v-0081\", \"Label\": \"Genji\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Genji_NH_Villager_Icon.png\", \"birthday\": \"January 21st\"},\r\n    {\"id\": \"v-0082\", \"Label\": \"Goldie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Goldie_NH_Villager_Icon.png\", \"birthday\": \"December 27th\"},\r\n    {\"id\": \"v-0083\", \"Label\": \"Gonzo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gonzo_NH_Villager_Icon.png\", \"birthday\": \"October 13th\"},\r\n    {\"id\": \"v-0084\", \"Label\": \"Goose\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Goose_NH_Villager_Icon.png\", \"birthday\": \"October 4th\"},\r\n    {\"id\": \"v-0085\", \"Label\": \"Grizzly\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Grizzly_NH_Villager_Icon.png\", \"birthday\": \"July 29th\"},\r\n    {\"id\": \"v-0086\", \"Label\": \"Groucho\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Groucho_NH_Villager_Icon.png\", \"birthday\": \"October 23rd\"},\r\n    {\"id\": \"v-0087\", \"Label\": \"Gruff\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gruff_NH_Villager_Icon.png\", \"birthday\": \"August 31st\"},\r\n    {\"id\": \"v-0088\", \"Label\": \"Gwen\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Gwen_NH_Villager_Icon.png\", \"birthday\": \"January 23rd\"},\r\n    {\"id\": \"v-0089\", \"Label\": \"Hambo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Hambo_PG_Model.png\", \"birthday\": \"September 3rd\"},\r\n    {\"id\": \"v-0090\", \"Label\": \"Hank\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Hank_PG_Model.png\", \"birthday\": \"September 29th\"},\r\n    {\"id\": \"v-0091\", \"Label\": \"Hazel\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hazel_NH_Villager_Icon.png\", \"birthday\": \"June 19th\"},\r\n    {\"id\": \"v-0092\", \"Label\": \"Hector\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Hector_PG_Model.png\", \"birthday\": \"April 5th\"},\r\n    {\"id\": \"v-0093\", \"Label\": \"Hopper\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hopper_NH_Villager_Icon.png\", \"birthday\": \"April 6th\"},\r\n    {\"id\": \"v-0094\", \"Label\": \"Hornsby\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hornsby_NH_Villager_Icon.png\", \"birthday\": \"March 20th\"},\r\n    {\"id\": \"v-0095\", \"Label\": \"Huck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Huck_NH_Villager_Icon.png\", \"birthday\": \"December 30th\"},\r\n    {\"id\": \"v-0096\", \"Label\": \"Huggy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Huggy_PG_Model.png\", \"birthday\": \"February 17th\"},\r\n    {\"id\": \"v-0097\", \"Label\": \"Hugh\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Hugh_NH_Villager_Icon.png\", \"birthday\": \"December 30th\"},\r\n    {\"id\": \"v-0098\", \"Label\": \"Iggy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Iggy_PG_Model.png\", \"birthday\": \"August 11th\"},\r\n    {\"id\": \"v-0099\", \"Label\": \"Jambette\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Jambette_NH_Villager_Icon.png\", \"birthday\": \"October 27th\"},\r\n    {\"id\": \"v-0100\", \"Label\": \"Jane\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Jane_PG_Model.png\", \"birthday\": \"January 25th\"},\r\n    {\"id\": \"v-0101\", \"Label\": \"Jay\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Jay_NH_Villager_Icon.png\", \"birthday\": \"July 17th\"},\r\n    {\"id\": \"v-0102\", \"Label\": \"Jeremiah\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Jeremiah_NH_Villager_Icon.png\", \"birthday\": \"July 8th\"},\r\n    {\"id\": \"v-0103\", \"Label\": \"Joey\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Joey_NH_Villager_Icon.png\", \"birthday\": \"January 3rd\"},\r\n    {\"id\": \"v-0104\", \"Label\": \"Kabuki\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kabuki_NH_Villager_Icon.png\", \"birthday\": \"November 29th\"},\r\n    {\"id\": \"v-0105\", \"Label\": \"Kiki\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kiki_NH_Villager_Icon.png\", \"birthday\": \"October 8th\"},\r\n    {\"id\": \"v-0106\", \"Label\": \"Kitt\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kitt_NH_Villager_Icon.png\", \"birthday\": \"October 11th\"},\r\n    {\"id\": \"v-0107\", \"Label\": \"Kitty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kitty_NH_Villager_Icon.png\", \"birthday\": \"February 15th\"},\r\n    {\"id\": \"v-0108\", \"Label\": \"Kody\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Kody_NH_Villager_Icon.png\", \"birthday\": \"September 28th\"},\r\n    {\"id\": \"v-0109\", \"Label\": \"Leigh\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Leigh_PG_Model.png\", \"birthday\": \"December 5th\"},\r\n    {\"id\": \"v-0110\", \"Label\": \"Leopold\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Leopold_NH_Villager_Icon.png\", \"birthday\": \"August 14th\"},\r\n    {\"id\": \"v-0111\", \"Label\": \"Lily\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lily_NH_Villager_Icon.png\", \"birthday\": \"February 4th\"},\r\n    {\"id\": \"v-0112\", \"Label\": \"Limberg\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Limberg_NH_Villager_Icon.png\", \"birthday\": \"October 17th\"},\r\n    {\"id\": \"v-0113\", \"Label\": \"Liz\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Liz_PG_Model.png\", \"birthday\": \"September 7th\"},\r\n    {\"id\": \"v-0114\", \"Label\": \"Lobo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lobo_NH_Villager_Icon.png\", \"birthday\": \"November 5th\"},\r\n    {\"id\": \"v-0115\", \"Label\": \"Louie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Louie_NH_Villager_Icon.png\", \"birthday\": \"March 26th\"},\r\n    {\"id\": \"v-0116\", \"Label\": \"Lucky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lucky_NH_Villager_Icon.png\", \"birthday\": \"November 4th\"},\r\n    {\"id\": \"v-0117\", \"Label\": \"Lucy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Lucy_NH_Villager_Icon.png\", \"birthday\": \"June 2nd\"},\r\n    {\"id\": \"v-0118\", \"Label\": \"Lulu\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Lulu_PG_Model.png\", \"birthday\": \"December 19th\"},\r\n    {\"id\": \"v-0119\", \"Label\": \"Maddie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Maddie_NH_Villager_Icon.png\", \"birthday\": \"January 11th\"},\r\n    {\"id\": \"v-0120\", \"Label\": \"Mallary\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mallary_NH_Villager_Icon.png\", \"birthday\": \"April 8th\"},\r\n    {\"id\": \"v-0121\", \"Label\": \"Maple\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Maple_NH_Villager_Icon.png\", \"birthday\": \"June 15th\"},\r\n    {\"id\": \"v-0122\", \"Label\": \"Marcy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Marcy_PG_Model.png\", \"birthday\": \"May 31st\"},\r\n    {\"id\": \"v-0123\", \"Label\": \"Mathilda\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mathilda_NH_Villager_Icon.png\", \"birthday\": \"November 12th\"},\r\n    {\"id\": \"v-0124\", \"Label\": \"Midge\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Midge_NH_Villager_Icon.png\", \"birthday\": \"March 12th\"},\r\n    {\"id\": \"v-0125\", \"Label\": \"Mint\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mint_NH_Villager_Icon.png\", \"birthday\": \"May 2nd\"},\r\n    {\"id\": \"v-0126\", \"Label\": \"Mitzi\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Mitzi_NH_Villager_Icon.png\", \"birthday\": \"September 25th\"},\r\n    {\"id\": \"v-0127\", \"Label\": \"Monique\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Monique_NH_Villager_Icon.png\", \"birthday\": \"September 30th\"},\r\n    {\"id\": \"v-0128\", \"Label\": \"Murphy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Murphy_NH_Villager_Icon.png\", \"birthday\": \"December 29th\"},\r\n    {\"id\": \"v-0129\", \"Label\": \"Nate\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Nate_NH_Villager_Icon.png\", \"birthday\": \"August 16th\"},\r\n    {\"id\": \"v-0130\", \"Label\": \"Nibbles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Nibbles_NH_Villager_Icon.png\", \"birthday\": \"July 19th\"},\r\n    {\"id\": \"v-0131\", \"Label\": \"Nosegay\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Nosegay_PG_Model.png\", \"birthday\": \"February 23rd\"},\r\n    {\"id\": \"v-0132\", \"Label\": \"Octavian\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Octavian_NH_Villager_Icon.png\", \"birthday\": \"September 20th\"},\r\n    {\"id\": \"v-0133\", \"Label\": \"Olive\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Olive_NH_Villager_Icon.png\", \"birthday\": \"July 12th\"},\r\n    {\"id\": \"v-0134\", \"Label\": \"Olivia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Olivia_NH_Villager_Icon.png\", \"birthday\": \"February 3rd\"},\r\n    {\"id\": \"v-0135\", \"Label\": \"Opal\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Opal_NH_Villager_Icon.png\", \"birthday\": \"January 20th\"},\r\n    {\"id\": \"v-0136\", \"Label\": \"Otis\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Otis_PG_Model.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0137\", \"Label\": \"Oxford\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Oxford_PG_Model.png\", \"birthday\": \"May 7th\"},\r\n    {\"id\": \"v-0138\", \"Label\": \"Ozzie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ozzie_NH_Villager_Icon.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0139\", \"Label\": \"Pango\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pango_NH_Villager_Icon.png\", \"birthday\": \"November 9th\"},\r\n    {\"id\": \"v-0140\", \"Label\": \"Paolo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Paolo_NH_Villager_Icon.png\", \"birthday\": \"May 5th\"},\r\n    {\"id\": \"v-0141\", \"Label\": \"Pate\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pate_NH_Villager_Icon.png\", \"birthday\": \"February 23rd\"},\r\n    {\"id\": \"v-0142\", \"Label\": \"Patty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Patty_NH_Villager_Icon.png\", \"birthday\": \"May 10th\"},\r\n    {\"id\": \"v-0143\", \"Label\": \"Peaches\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Peaches_NH_Villager_Icon.png\", \"birthday\": \"November 28th\"},\r\n    {\"id\": \"v-0144\", \"Label\": \"Peanut\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Peanut_NH_Villager_Icon.png\", \"birthday\": \"June 8th\"},\r\n    {\"id\": \"v-0145\", \"Label\": \"Pecan\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pecan_NH_Villager_Icon.png\", \"birthday\": \"September 10th\"},\r\n    {\"id\": \"v-0146\", \"Label\": \"Peewee\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Peewee_NH_Villager_Icon.png\", \"birthday\": \"September 11th\"},\r\n    {\"id\": \"v-0147\", \"Label\": \"Penny\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Penny_PG_Model.png\", \"birthday\": \"June 18th\"},\r\n    {\"id\": \"v-0148\", \"Label\": \"Petunia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Petunia_PG_Model.png\", \"birthday\": \"April 24th\"},\r\n    {\"id\": \"v-0149\", \"Label\": \"Pierce\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pierce_NH_Villager_Icon.png\", \"birthday\": \"January 8th\"},\r\n    {\"id\": \"v-0150\", \"Label\": \"Pinky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pinky_NH_Villager_Icon.png\", \"birthday\": \"September 9th\"},\r\n    {\"id\": \"v-0151\", \"Label\": \"Piper\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Piper_NH_Villager_Icon.png\", \"birthday\": \"April 18th\"},\r\n    {\"id\": \"v-0152\", \"Label\": \"Pippy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pippy_NH_Villager_Icon.png\", \"birthday\": \"June 14th\"},\r\n    {\"id\": \"v-0153\", \"Label\": \"Pompom\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pompom_NH_Villager_Icon.png\", \"birthday\": \"February 11th\"},\r\n    {\"id\": \"v-0154\", \"Label\": \"Poncho\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Poncho_NH_Villager_Icon.png\", \"birthday\": \"January 2nd\"},\r\n    {\"id\": \"v-0155\", \"Label\": \"Portia\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Portia_NH_Villager_Icon.png\", \"birthday\": \"October 25th\"},\r\n    {\"id\": \"v-0156\", \"Label\": \"Prince\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Prince_NH_Villager_Icon.png\", \"birthday\": \"July 21st\"},\r\n    {\"id\": \"v-0157\", \"Label\": \"Puck\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Puck_NH_Villager_Icon.png\", \"birthday\": \"February 21st\"},\r\n    {\"id\": \"v-0158\", \"Label\": \"Puddles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Puddles_NH_Villager_Icon.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0159\", \"Label\": \"Pudge\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Pudge_NH_Villager_Icon.png\", \"birthday\": \"June 11th\"},\r\n    {\"id\": \"v-0160\", \"Label\": \"Punchy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Punchy_NH_Villager_Icon.png\", \"birthday\": \"April 11th\"},\r\n    {\"id\": \"v-0161\", \"Label\": \"Purrl\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Purrl_NH_Villager_Icon.png\", \"birthday\": \"May 29th\"},\r\n    {\"id\": \"v-0162\", \"Label\": \"Queenie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Queenie_NH_Villager_Icon.png\", \"birthday\": \"November 13th\"},\r\n    {\"id\": \"v-0163\", \"Label\": \"Quetzal\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Quetzal_PG_Model.png\", \"birthday\": \"September 2nd\"},\r\n    {\"id\": \"v-0164\", \"Label\": \"Rasher\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rasher_NH_Villager_Icon.png\", \"birthday\": \"April 7th\"},\r\n    {\"id\": \"v-0165\", \"Label\": \"Rex\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rex_NH_Villager_Icon.png\", \"birthday\": \"July 24th\"},\r\n    {\"id\": \"v-0166\", \"Label\": \"Rhoda\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Rhoda_PG_Model.png\", \"birthday\": \"March 31st\"},\r\n    {\"id\": \"v-0167\", \"Label\": \"Ribbot\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ribbot_NH_Villager_Icon.png\", \"birthday\": \"February 13th\"},\r\n    {\"id\": \"v-0168\", \"Label\": \"Ricky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ricky_NH_Villager_Icon.png\", \"birthday\": \"September 14th\"},\r\n    {\"id\": \"v-0169\", \"Label\": \"Rio\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rio_NH_Villager_Icon.png\", \"birthday\": \"October 11th\"},\r\n    {\"id\": \"v-0170\", \"Label\": \"Rizzo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rizzo_NH_Villager_Icon.png\", \"birthday\": \"January 17th\"},\r\n    {\"id\": \"v-0171\", \"Label\": \"Roald\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Roald_NH_Villager_Icon.png\", \"birthday\": \"January 5th\"},\r\n    {\"id\": \"v-0172\", \"Label\": \"Robin\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Robin_NH_Villager_Icon.png\", \"birthday\": \"December 4th\"},\r\n    {\"id\": \"v-0173\", \"Label\": \"Rocco\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rocco_NH_Villager_Icon.png\", \"birthday\": \"August 18th\"},\r\n    {\"id\": \"v-0174\", \"Label\": \"Rolf\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rolf_NH_Villager_Icon.png\", \"birthday\": \"August 22nd\"},\r\n    {\"id\": \"v-0175\", \"Label\": \"Rollo\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Rollo_PG_Model.png\", \"birthday\": \"July 22nd\"},\r\n    {\"id\": \"v-0176\", \"Label\": \"Rosie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Rosie_NH_Villager_Icon.png\", \"birthday\": \"February 27th\"},\r\n    {\"id\": \"v-0177\", \"Label\": \"Sally\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sally_NH_Villager_Icon.png\", \"birthday\": \"June 19th\"},\r\n    {\"id\": \"v-0178\", \"Label\": \"Samson\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Samson_NH_Villager_Icon.png\", \"birthday\": \"July 5th\"},\r\n    {\"id\": \"v-0179\", \"Label\": \"Sandy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sandy_NH_Villager_Icon.png\", \"birthday\": \"October 21st\"},\r\n    {\"id\": \"v-0180\", \"Label\": \"Savannah\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Savannah_NH_Villager_Icon.png\", \"birthday\": \"January 25th\"},\r\n    {\"id\": \"v-0181\", \"Label\": \"Scoot\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Scoot_NH_Villager_Icon.png\", \"birthday\": \"June 13th\"},\r\n    {\"id\": \"v-0182\", \"Label\": \"Snake\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Snake_NH_Villager_Icon.png\", \"birthday\": \"November 3rd\"},\r\n    {\"id\": \"v-0183\", \"Label\": \"Snooty\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Snooty_NH_Villager_Icon.png\", \"birthday\": \"October 25th\"},\r\n    {\"id\": \"v-0184\", \"Label\": \"Spike\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Spike_NH_Villager_Icon.png\", \"birthday\": \"June 17th\"},\r\n    {\"id\": \"v-0185\", \"Label\": \"Spork\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Spork_NH_Villager_Icon.png\", \"birthday\": \"September 3rd\"},\r\n    {\"id\": \"v-0186\", \"Label\": \"Sprocket\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sprocket_NH_Villager_Icon.png\", \"birthday\": \"December 21st\"},\r\n    {\"id\": \"v-0187\", \"Label\": \"Static\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Static_NH_Villager_Icon.png\", \"birthday\": \"July 9th\"},\r\n    {\"id\": \"v-0188\", \"Label\": \"Stella\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Stella_NH_Villager_Icon.png\", \"birthday\": \"April 29th\"},\r\n    {\"id\": \"v-0189\", \"Label\": \"Stinky\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Stinky_NH_Villager_Icon.png\", \"birthday\": \"August 17th\"},\r\n    {\"id\": \"v-0190\", \"Label\": \"Stu\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Stu_NH_Villager_Icon.png\", \"birthday\": \"April 20th\"},\r\n    {\"id\": \"v-0191\", \"Label\": \"Sue E\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Sue_E_PG_Model.png\", \"birthday\": \"October 20th\"},\r\n    {\"id\": \"v-0192\", \"Label\": \"Sven\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Sven_PG_Model.png\", \"birthday\": \"December 28th\"},\r\n    {\"id\": \"v-0193\", \"Label\": \"Sydney\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Sydney_NH_Villager_Icon.png\", \"birthday\": \"June 21st\"},\r\n    {\"id\": \"v-0194\", \"Label\": \"T-Bone\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/T-Bone_NH_Villager_Icon.png\", \"birthday\": \"May 20th\"},\r\n    {\"id\": \"v-0195\", \"Label\": \"Tabby\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tabby_NH_Villager_Icon.png\", \"birthday\": \"August 13th\"},\r\n    {\"id\": \"v-0196\", \"Label\": \"Tad\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tad_NH_Villager_Icon.png\", \"birthday\": \"August 3rd\"},\r\n    {\"id\": \"v-0197\", \"Label\": \"Tangy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tangy_NH_Villager_Icon.png\", \"birthday\": \"June 17th\"},\r\n    {\"id\": \"v-0198\", \"Label\": \"Tank\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tank_NH_Villager_Icon.png\", \"birthday\": \"May 6th\"},\r\n    {\"id\": \"v-0199\", \"Label\": \"Teddy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Teddy_NH_Villager_Icon.png\", \"birthday\": \"September 26th\"},\r\n    {\"id\": \"v-0200\", \"Label\": \"Tiara\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Tiara_PG_Model.png\", \"birthday\": \"January 17th\"},\r\n    {\"id\": \"v-0201\", \"Label\": \"Tom\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tom_NH_Villager_Icon.png\", \"birthday\": \"December 10th\"},\r\n    {\"id\": \"v-0202\", \"Label\": \"Truffles\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Truffles_NH_Villager_Icon.png\", \"birthday\": \"July 28th\"},\r\n    {\"id\": \"v-0203\", \"Label\": \"Tutu\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tutu_NH_Villager_Icon.png\", \"birthday\": \"September 15th\"},\r\n    {\"id\": \"v-0204\", \"Label\": \"Twiggy\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Twiggy_NH_Villager_Icon.png\", \"birthday\": \"July 13th\"},\r\n    {\"id\": \"v-0205\", \"Label\": \"Twirp\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Twirp_PG_Model.png\", \"birthday\": \"August 7th\"},\r\n    {\"id\": \"v-0206\", \"Label\": \"Tybalt\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Tybalt_NH_Villager_Icon.png\", \"birthday\": \"August 19th\"},\r\n    {\"id\": \"v-0207\", \"Label\": \"Ursala\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Ursala_NH_Villager_Icon.png\", \"birthday\": \"January 16th\"},\r\n    {\"id\": \"v-0208\", \"Label\": \"Valise\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Valise_PG_Model.png\", \"birthday\": \"December 16th\"},\r\n    {\"id\": \"v-0209\", \"Label\": \"Velma\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Velma_NH_Villager_Icon.png\", \"birthday\": \"January 14th\"},\r\n    {\"id\": \"v-0210\", \"Label\": \"Vesta\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Vesta_NH_Villager_Icon.png\", \"birthday\": \"April 16th\"},\r\n    {\"id\": \"v-0211\", \"Label\": \"Vladimir\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Vladimir_NH_Villager_Icon.png\", \"birthday\": \"August 2nd\"},\r\n    {\"id\": \"v-0212\", \"Label\": \"Wart Jr.\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Wart Jr._NH_Villager_Icon.png\", \"birthday\": \"August 21st\"},\r\n    {\"id\": \"v-0213\", \"Label\": \"Weber\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Weber_NH_Villager_Icon.png\", \"birthday\": \"June 30th\"},\r\n    {\"id\": \"v-0214\", \"Label\": \"Winnie\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Winnie_NH_Villager_Icon.png\", \"birthday\": \"January 13th\"},\r\n    {\"id\": \"v-0215\", \"Label\": \"Wolfgang\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Wolfgang_NH_Villager_Icon.png\", \"birthday\": \"November 25th\"},\r\n    {\"id\": \"v-0216\", \"Label\": \"Woolio\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/128px-Woolio_PG_Model.png\", \"birthday\": \"April 16th\"},\r\n    {\"id\": \"v-0217\", \"Label\": \"Yuka\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Yuka_NH_Villager_Icon.png\", \"birthday\": \"July 20th\"},\r\n    {\"id\": \"v-0218\", \"Label\": \"Zoe\", \"Icon\": \"https://acgc.sterner.digital/images/villagers/Zoe_NH_Villager_Icon.png\", \"birthday\": \"January 29th\"},\r\n    {\"id\": \"v-0219\", \"Label\": \"Agent S\", \"Icon\": \"https://raytrac3r.github.io/AC-Deluxe-Gamecube-Checklist/images/villagers/Zoe_NH_Villager_Icon.png\", \"birthday\": \"July 2nd\"}\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"eb419334-0b13-8f82-f52e-1d3d78dfdc76","type":"JavaScriptFunction","label":"Save Multiple Inputs to Local Storage","x":1219.4695572179849,"y":1501.366668168038,"parameters":{"functionScript":"// Define the inputs\nconst input1 = Inputs.Input1 || false;\nconst input2 = Inputs.Input2 || false;\nconst input3 = Inputs.Input3 || false;\nconst input4 = Inputs.Input4 || false;\nconst input5 = Inputs.Input5 || false;\nconst input6 = Inputs.Input6 || false;\nconst input7 = Inputs.Input7 || false;\nconst input8 = Inputs.Input8 || false;\nconst input9 = Inputs.Input9 || false;\nconst input10 = Inputs.Input10 || false;\nconst input11 = Inputs.Input11 || false;\nconst input12 = Inputs.Input12 || false;\nconst input13 = Inputs.Input13 || false;\nconst input14 = Inputs.Input14 || false;\nconst input15 = Inputs.Input15 || false;\n\n// Function to set value and date if the checkbox is changed to true\nconst setValueAndDate = (input, key) => {\n  const storedData = JSON.parse(localStorage.getItem(key)) || { value: false, date: null };\n  \n  if (input && !storedData.value) {\n    const currentDate = new Date().toISOString();\n    localStorage.setItem(key, JSON.stringify({ value: input, date: currentDate }));\n  } else {\n    localStorage.setItem(key, JSON.stringify({ value: input, date: storedData.date }));\n  }\n};\n\n// Save the inputs and dates to local storage\ntry {\n  setValueAndDate(input1, 'villagerdaily-0001');\n  setValueAndDate(input2, 'villagerdaily-0002');\n  setValueAndDate(input3, 'villagerdaily-0003');\n  setValueAndDate(input4, 'villagerdaily-0004');\n  setValueAndDate(input5, 'villagerdaily-0005');\n  setValueAndDate(input6, 'villagerdaily-0006');\n  setValueAndDate(input7, 'villagerdaily-0007');\n  setValueAndDate(input8, 'villagerdaily-0008');\n  setValueAndDate(input9, 'villagerdaily-0009');\n  setValueAndDate(input10, 'villagerdaily-0010');\n  setValueAndDate(input11, 'villagerdaily-0011');\n  setValueAndDate(input12, 'villagerdaily-0012');\n  setValueAndDate(input13, 'villagerdaily-0013');\n  setValueAndDate(input14, 'villagerdaily-0014');\n  setValueAndDate(input15, 'villagerdaily-0015');\n\n  Outputs.Success();\n} catch (error) {\n  Outputs.error = error;\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Input1","displayName":"Input1","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Input2","displayName":"Input2","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Input3","displayName":"Input3","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Input4","displayName":"Input4","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Input5","displayName":"Input5","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Input6","displayName":"Input6","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Input7","displayName":"Input7","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Input8","displayName":"Input8","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Input9","displayName":"Input9","plug":"input","type":"*","group":"Inputs","index":12},{"name":"in-Input10","displayName":"Input10","plug":"input","type":"*","group":"Inputs","index":13},{"name":"in-Input11","displayName":"Input11","plug":"input","type":"*","group":"Inputs","index":14},{"name":"in-Input12","displayName":"Input12","plug":"input","type":"*","group":"Inputs","index":15},{"name":"in-Input13","displayName":"Input13","plug":"input","type":"*","group":"Inputs","index":16},{"name":"in-Input14","displayName":"Input14","plug":"input","type":"*","group":"Inputs","index":17},{"name":"in-Input15","displayName":"Input15","plug":"input","type":"*","group":"Inputs","index":18},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":19},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":20},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"15 inputs that all individually save localstorage key \"villagerdaily-0001\" through \"villagerdaily-0015\".  This will save the \"checked\" state of 15 different checkboxes.","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the inputs\nconst input1 = Inputs.Input1 || false;\nconst input2 = Inputs.Input2 || false;\nconst input3 = Inputs.Input3 || false;\nconst input4 = Inputs.Input4 || false;\nconst input5 = Inputs.Input5 || false;\nconst input6 = Inputs.Input6 || false;\nconst input7 = Inputs.Input7 || false;\nconst input8 = Inputs.Input8 || false;\nconst input9 = Inputs.Input9 || false;\nconst input10 = Inputs.Input10 || false;\nconst input11 = Inputs.Input11 || false;\nconst input12 = Inputs.Input12 || false;\nconst input13 = Inputs.Input13 || false;\nconst input14 = Inputs.Input14 || false;\nconst input15 = Inputs.Input15 || false;\n\n// Save the inputs to local storage\ntry {\n  localStorage.setItem('villagerdaily-0001', input1);\n  localStorage.setItem('villagerdaily-0002', input2);\n  localStorage.setItem('villagerdaily-0003', input3);\n  localStorage.setItem('villagerdaily-0004', input4);\n  localStorage.setItem('villagerdaily-0005', input5);\n  localStorage.setItem('villagerdaily-0006', input6);\n  localStorage.setItem('villagerdaily-0007', input7);\n  localStorage.setItem('villagerdaily-0008', input8);\n  localStorage.setItem('villagerdaily-0009', input9);\n  localStorage.setItem('villagerdaily-0010', input10);\n  localStorage.setItem('villagerdaily-0011', input11);\n  localStorage.setItem('villagerdaily-0012', input12);\n  localStorage.setItem('villagerdaily-0013', input13);\n  localStorage.setItem('villagerdaily-0014', input14);\n  localStorage.setItem('villagerdaily-0015', input15);\n  Outputs.Success();\n} catch (error) {\n  Outputs.error = error;\n  Outputs.Failure();\n}\n"},"snowflakeId":"0191761d1c88-8xgs0n","type":"user"},{"type":"assistant","content":"\nThis function takes 15 inputs, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Input1</span> through <span style=\"color: var(--base-color-yellow-400);\">Inputs.Input15</span>, and saves each of them to local storage under keys 'villagerdaily-0001' through 'villagerdaily-0015'. \n\nIf the process is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error during the process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output with the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191761da26c-tbpufq","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5397d3be-d135-ece8-0efb-ecdbed4f48cd","type":"JavaScriptFunction","x":-744.633574021071,"y":1567.6028882528526,"parameters":{"functionScript":"// Function to check if the stored date is today's date\r\nconst isToday = (dateString) => {\r\n  const storedDate = new Date(dateString);\r\n  const today = new Date();\r\n  return storedDate.getFullYear() === today.getFullYear() &&\r\n         storedDate.getMonth() === today.getMonth() &&\r\n         storedDate.getDate() === today.getDate();\r\n};\r\n\r\n// Function to check if the stored date is valid\r\nconst isDateValid = (dateString) => {\r\n  const storedDate = new Date(dateString);\r\n  const today = new Date();\r\n  return dateString !== null && storedDate <= today;\r\n};\r\n\r\n// Function to handle retrieval of values\r\nconst getOutputValue = (key) => {\r\n  const storedData = JSON.parse(localStorage.getItem(key));\r\n  const value = storedData?.value || false;\r\n  const storedDate = storedData?.date || null;\r\n\r\n  if (value && isDateValid(storedDate) && isToday(storedDate)) {\r\n    return true;\r\n  } else {\r\n    // If the date is invalid or not today, clear the stored data\r\n    localStorage.removeItem(key);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Retrieve the inputs from local storage\r\ntry {\r\n  const output1 = getOutputValue('villagerdaily-0001');\r\n  const output2 = getOutputValue('villagerdaily-0002');\r\n  const output3 = getOutputValue('villagerdaily-0003');\r\n  const output4 = getOutputValue('villagerdaily-0004');\r\n  const output5 = getOutputValue('villagerdaily-0005');\r\n  const output6 = getOutputValue('villagerdaily-0006');\r\n  const output7 = getOutputValue('villagerdaily-0007');\r\n  const output8 = getOutputValue('villagerdaily-0008');\r\n  const output9 = getOutputValue('villagerdaily-0009');\r\n  const output10 = getOutputValue('villagerdaily-0010');\r\n  const output11 = getOutputValue('villagerdaily-0011');\r\n  const output12 = getOutputValue('villagerdaily-0012');\r\n  const output13 = getOutputValue('villagerdaily-0013');\r\n  const output14 = getOutputValue('villagerdaily-0014');\r\n  const output15 = getOutputValue('villagerdaily-0015');\r\n\r\n  // Output the retrieved values\r\n  Outputs.Output1 = output1;\r\n  Outputs.Output2 = output2;\r\n  Outputs.Output3 = output3;\r\n  Outputs.Output4 = output4;\r\n  Outputs.Output5 = output5;\r\n  Outputs.Output6 = output6;\r\n  Outputs.Output7 = output7;\r\n  Outputs.Output8 = output8;\r\n  Outputs.Output9 = output9;\r\n  Outputs.Output10 = output10;\r\n  Outputs.Output11 = output11;\r\n  Outputs.Output12 = output12;\r\n  Outputs.Output13 = output13;\r\n  Outputs.Output14 = output14;\r\n  Outputs.Output15 = output15;\r\n\r\n  Outputs.Success();\r\n} catch (error) {\r\n  Outputs.error = error;\r\n  Outputs.Failure();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Output1","displayName":"Output1","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-Output2","displayName":"Output2","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-Output3","displayName":"Output3","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-Output4","displayName":"Output4","plug":"output","type":"*","group":"Outputs","index":9},{"name":"out-Output5","displayName":"Output5","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Output6","displayName":"Output6","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Output7","displayName":"Output7","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Output8","displayName":"Output8","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Output9","displayName":"Output9","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Output10","displayName":"Output10","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Output11","displayName":"Output11","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Output12","displayName":"Output12","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Output13","displayName":"Output13","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Output14","displayName":"Output14","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Output15","displayName":"Output15","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"97f6a762-a63e-6be4-1a81-3b67d131485f","type":"JavaScriptFunction","label":"Play Audio File","x":-503.5929043810004,"y":1693.477259412612,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["6a0c7e10-9e68-29ec-3359-f598d5cec326"]}},{"name":"/Collection Pages/Daily/daily-splash","id":"11255bba-375b-2a84-b6cb-e8dd6c6a4d0d","graph":{"connections":[{"fromId":"8ee38149-eeb0-5b63-33ab-43ee35adfe40","fromProperty":"out-Success","toId":"4f21697e-ab47-57c1-d799-b953054c0416","toProperty":"play"}],"roots":[{"id":"ebd29c24-63f7-e76b-4f67-50ba946e633a","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"84a8b2d2-31d2-131c-a11d-1e0d4145f0fd","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"b0a1a743-324b-a9fd-9b43-5e5ece0c7a5e","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #7a3aaf; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/calendar.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8ac80d3a-3718-5bbc-5080-b21b6ad17b82","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4f21697e-ab47-57c1-d799-b953054c0416","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"8ee38149-eeb0-5b63-33ab-43ee35adfe40","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["ebd29c24-63f7-e76b-4f67-50ba946e633a"]}},{"name":"/Collection Pages/Fish/Fall Fish","id":"db8fa4f2-7a63-3659-b993-92eabedc0f6a","graph":{"connections":[{"fromId":"017e8fe7-5392-5799-379f-3b6598473221","fromProperty":"items","toId":"0405d49f-ead1-3198-4fb9-83abf340e9c3","toProperty":"items"},{"fromId":"d585cbf1-c978-0056-29fc-22f6ec813b0e","fromProperty":"out-Success","toId":"0405d49f-ead1-3198-4fb9-83abf340e9c3","toProperty":"refresh"},{"fromId":"908361ee-ce3f-fc01-2090-f4950448fb4b","fromProperty":"out-CountText","toId":"927098e3-11e7-7375-a0e2-e6a1fe4c901a","toProperty":"text"},{"fromId":"9dea84fc-2dc1-be1d-6dbd-eb83342dd892","fromProperty":"onClick","toId":"cdfd2437-f657-eb2b-b1fe-4edd62e118a1","toProperty":"run"},{"fromId":"17d2f7c7-538c-38a0-fec7-47a0036c2e29","fromProperty":"onClick","toId":"cdfd2437-f657-eb2b-b1fe-4edd62e118a1","toProperty":"run"},{"fromId":"485d89e6-ef9d-8364-c155-58608d755802","fromProperty":"onClick","toId":"cdfd2437-f657-eb2b-b1fe-4edd62e118a1","toProperty":"run"},{"fromId":"3b886a90-95bc-d71b-87c2-3bb13e582a20","fromProperty":"onClick","toId":"cdfd2437-f657-eb2b-b1fe-4edd62e118a1","toProperty":"run"},{"fromId":"3b886a90-95bc-d71b-87c2-3bb13e582a20","fromProperty":"onClick","toId":"e5574622-7ad9-bb76-ba69-5ddd2b5480ea","toProperty":"navigate"},{"fromId":"485d89e6-ef9d-8364-c155-58608d755802","fromProperty":"onClick","toId":"2e8ae9a0-c131-1c30-944b-1fb1b492d2e2","toProperty":"navigate"},{"fromId":"17d2f7c7-538c-38a0-fec7-47a0036c2e29","fromProperty":"onClick","toId":"a727c3f8-ce83-0a72-beb5-60c7eb4ebf46","toProperty":"navigate"},{"fromId":"9dea84fc-2dc1-be1d-6dbd-eb83342dd892","fromProperty":"onClick","toId":"88a39bfc-28b4-d7ee-35f4-ffdbb264b3f6","toProperty":"navigate"}],"roots":[{"id":"26c006ec-3eec-0b9e-8b1c-6c7bdd3c7344","type":"Page","x":0,"y":0,"parameters":{"cssClassName":""},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Fall Fish","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"fall-fish","index":32}],"children":[{"id":"9132c1a7-3a39-6496-dc38-7f6328bcf020","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"927098e3-11e7-7375-a0e2-e6a1fe4c901a","type":"Text","label":"","parameters":{"text":"Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"Nookmiles BG Light","textAlignX":"left","marginRight":{"value":10,"unit":"px"},"textAlignY":"top"},"ports":[],"dynamicports":[],"children":[]},{"id":"1505fe54-fd3b-21c2-be30-53015afbd859","type":"module.inlineHtml","label":"Fish Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fish.png'),\r\n    url('/images/background/fish.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"5dc08077-ce2d-e0a4-b655-3555675cb97a","type":"Group","label":"Fish Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c7d95038-bcca-ed72-43b9-28bc02cf6314","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nookmiles BG Light","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"33d59ef2-79fc-40fa-f7e2-48e8255b6023","type":"Group","label":"Fish Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"bc825092-c01e-99df-120e-6a26c5e7d79f","type":"Image","label":"Fish","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/sea_bass.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"baca34f1-6615-e73a-ad34-8f9b66ed0bd2","type":"Text","label":"","parameters":{"text":"Fall Fish","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nook Text","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8363c789-33a3-2211-7137-a95e515a1801","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"9dea84fc-2dc1-be1d-6dbd-eb83342dd892","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"17d2f7c7-538c-38a0-fec7-47a0036c2e29","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"485d89e6-ef9d-8364-c155-58608d755802","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"3b886a90-95bc-d71b-87c2-3bb13e582a20","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"0405d49f-ead1-3198-4fb9-83abf340e9c3","type":"For Each","parameters":{"template":"/Collection Pages/Fish/Fish Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]}]},{"id":"4239b484-8a77-7a20-157d-e0bd40f7e1d4","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"017e8fe7-5392-5799-379f-3b6598473221","type":"Collection2","label":"Fish Array","x":-287,"y":1071,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"fish-0001\",\r\n    \"Label\": \"Angelfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Angelfish.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"MA-OC\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0004\",\r\n    \"Label\": \"Barbel steed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Barbel_Steed.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0005\",\r\n    \"Label\": \"Barred Knifejaw\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Knifejaw.png\",\r\n    \"Price\": \"5000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0006\",\r\n    \"Label\": \"Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Black_Bass.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0008\",\r\n    \"Label\": \"Bluegill\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Bluegill.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0009\",\r\n    \"Label\": \"Brook Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Brook_Trout.png\",\r\n    \"Price\": \"150\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0010\",\r\n    \"Label\": \"Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Carp.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0011\",\r\n    \"Label\": \"Catfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Catfish.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"MA-OC\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0012\",\r\n    \"Label\": \"Cherry Salmon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Cherry_Salmon.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0013\",\r\n    \"Label\": \"Coelacanth\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Coelacanth.png\",\r\n    \"Price\": \"15000\",\r\n    \"Location\": \"Sea (raining)\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0015\",\r\n    \"Label\": \"Crucian Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Crucian_Carp.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0016\",\r\n    \"Label\": \"Dace\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Dace.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0018\",\r\n    \"Label\": \"Freshwater Goby\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Freshwater_Goby.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0022\",\r\n    \"Label\": \"Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0023\",\r\n    \"Label\": \"Guppy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Guppy.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"AL-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0026\",\r\n    \"Label\": \"Koi\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Koi.png\",\r\n    \"Price\": \"2000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0027\",\r\n    \"Label\": \"Large Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Bass.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0028\",\r\n    \"Label\": \"Large Char\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Char.png\",\r\n    \"Price\": \"10000\",\r\n    \"Location\": \"Waterfall\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0030\",\r\n    \"Label\": \"Pale Chub\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Pale_Chub.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0033\",\r\n    \"Label\": \"Popeyed Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Popeyed_Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0034\",\r\n    \"Label\": \"Rainbow Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Rainbow_Trout.png\",\r\n    \"Price\": \"650\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0035\",\r\n    \"Label\": \"Red Snapper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Red_Snapper.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0036\",\r\n    \"Label\": \"Salmon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Salmon.png\",\r\n    \"Price\": \"650\",\r\n    \"Location\": \"River (mouth)\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"SE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0037\",\r\n    \"Label\": \"Sea Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Sea_Bass.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NOT SE16-AU15\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Autumn, Winter, Spring\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0038\",\r\n    \"Label\": \"Small Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Small_Bass.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"d585cbf1-c978-0056-29fc-22f6ec813b0e","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":413,"y":1124,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"908361ee-ce3f-fc01-2090-f4950448fb4b","type":"JavaScriptFunction","label":"Count Fish Keys","x":-241,"y":5,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('fish-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n"},"snowflakeId":"01911e4c9075-1j057g","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in the format \"Fish Progress: # / 40\". \n\nThe function, named `getFishKeys`, is run once every second (1000 milliseconds). It first retrieves all keys from the local storage, then filters out the keys that start with \"fish-\". The number of these keys is counted and the count is set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output in the format \"Fish Progress: # / 40\". \n\nAfter the count is set, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output.\n","snowflakeId":"01911e4cb4ad-zfdz0v","metadata":{}},{"content":"Run on page load as well as once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e4f85bc-qnz0r7","type":"user"},{"type":"assistant","content":"\nThis function counts the progress of a fish collection task. It retrieves all keys from the local storage, filters out the keys that start with \"fish-\", and counts the number of these keys. \n\nThe count is then formatted as \"Fish Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span>. After this, the function signals a <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span>.\n\nThe function is set to run immediately when the page loads and then continues to run once every second, ensuring that the fish count is displayed as soon as the page is loaded and is updated every second.\n","snowflakeId":"01911e4fab9e-xpnwq4","metadata":{}},{"content":"Run on page load as well as once per second\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e515ac3-95o9r1","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in a specific format. \n\nThe function, named getFishKeys, first retrieves all keys from the local storage. It then filters these keys to only include those that start with \"fish-\". The number of these \"fish-\" keys is then counted and this count is outputted in the format \"Fish Progress: # / 40\" through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is outputted, the function signals that it has successfully completed its task by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThis function is set to run once per second and also when the page loads.\n","snowflakeId":"01911e517a5e-y0d4bl","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"88a39bfc-28b4-d7ee-35f4-ffdbb264b3f6","type":"RouterNavigate","x":408,"y":699,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Spring Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"cdfd2437-f657-eb2b-b1fe-4edd62e118a1","type":"JavaScriptFunction","label":"Play Audio File","x":-294,"y":828,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a727c3f8-ce83-0a72-beb5-60c7eb4ebf46","type":"RouterNavigate","x":407,"y":794,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Summer Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"2e8ae9a0-c131-1c30-944b-1fb1b492d2e2","type":"RouterNavigate","x":405,"y":891,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"e5574622-7ad9-bb76-ba69-5ddd2b5480ea","type":"RouterNavigate","x":407,"y":983,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Winter Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["26c006ec-3eec-0b9e-8b1c-6c7bdd3c7344"]}},{"name":"/Collection Pages/Fish/Fish","id":"35a337af-12a0-470c-b718-823210f86406","graph":{"connections":[{"fromId":"72e4f415-9d5c-9554-d33e-ab3c80114a51","fromProperty":"items","toId":"9593ad90-eee7-acd7-c631-eab7e839ac68","toProperty":"items"},{"fromId":"1fb6724e-5432-8d88-daa6-220721b8caac","fromProperty":"out-Success","toId":"9593ad90-eee7-acd7-c631-eab7e839ac68","toProperty":"refresh"},{"fromId":"7dd7a5fc-49ee-6513-1b25-3fbf33b3fdf7","fromProperty":"out-CountText","toId":"1d75205d-56a4-1ebc-3e4b-b4322c4ac2be","toProperty":"text"},{"fromId":"38669776-6ae6-b763-1066-5912e4902f13","fromProperty":"onClick","toId":"8efbad58-e72b-d1fb-1551-8c86a27eabd2","toProperty":"run"},{"fromId":"059901bc-7280-ba63-57eb-97a7be9fca3e","fromProperty":"onClick","toId":"8efbad58-e72b-d1fb-1551-8c86a27eabd2","toProperty":"run"},{"fromId":"37f12c6b-452c-2856-37ce-bc00cddcbaea","fromProperty":"onClick","toId":"8efbad58-e72b-d1fb-1551-8c86a27eabd2","toProperty":"run"},{"fromId":"5760d88d-564d-c846-7ddc-80b020510a2a","fromProperty":"onClick","toId":"8efbad58-e72b-d1fb-1551-8c86a27eabd2","toProperty":"run"},{"fromId":"5760d88d-564d-c846-7ddc-80b020510a2a","fromProperty":"onClick","toId":"83259e0b-0419-f0c2-8de5-1eac5889707d","toProperty":"navigate"},{"fromId":"37f12c6b-452c-2856-37ce-bc00cddcbaea","fromProperty":"onClick","toId":"4e24b423-c192-2739-a1fc-63995193eb3c","toProperty":"navigate"},{"fromId":"059901bc-7280-ba63-57eb-97a7be9fca3e","fromProperty":"onClick","toId":"609817b5-6b69-98c8-cb45-b0fd3afe3110","toProperty":"navigate"},{"fromId":"38669776-6ae6-b763-1066-5912e4902f13","fromProperty":"onClick","toId":"18782baa-f643-6ff4-46d2-e9b6db2f24ac","toProperty":"navigate"}],"roots":[{"id":"d07d0260-3263-f5c4-5d7f-eba5972d813d","type":"Page","x":0,"y":0,"parameters":{"cssClassName":""},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Fish","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"fish","index":32}],"children":[{"id":"6d78ee9f-5f77-dc03-0387-a50c6e131a26","type":"Group","parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"24660c66-8f1d-9a17-04a2-3172000b1317","type":"/Collection Pages/Fish/fish-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"dfef5ddd-f5e6-0bc7-c418-7203327ab081","type":"Group","parameters":{"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"1d75205d-56a4-1ebc-3e4b-b4322c4ac2be","type":"Text","label":"","parameters":{"text":"Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"Nookmiles BG Light","textAlignX":"left","marginRight":{"value":10,"unit":"px"},"textAlignY":"top"},"ports":[],"dynamicports":[],"children":[]},{"id":"4c9d62fe-37f5-4e78-3e1e-c173398f5176","type":"module.inlineHtml","label":"Fish Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fish.png'),\r\n    url('/images/background/fish.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"cc5b54d8-7ea0-353e-db80-0173ddf3e317","type":"Group","label":"Fish Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6b51e401-c0de-8c23-76ba-33c0880fa29e","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nookmiles BG Light","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f1f9f089-1a22-5cbe-299f-d6fb5ed4f855","type":"Group","label":"Fish Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1a652cce-9892-c654-55dc-c19e7a882690","type":"Image","label":"Fish","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/sea_bass.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"5c389c54-85ba-9511-2e16-d18c88592e0f","type":"Text","label":"","parameters":{"text":"All Fish","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nook Text","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3a386754-0261-a865-63bd-ed43fdd2c61b","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"38669776-6ae6-b763-1066-5912e4902f13","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"059901bc-7280-ba63-57eb-97a7be9fca3e","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"37f12c6b-452c-2856-37ce-bc00cddcbaea","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"5760d88d-564d-c846-7ddc-80b020510a2a","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"9593ad90-eee7-acd7-c631-eab7e839ac68","type":"For Each","parameters":{"template":"/Collection Pages/Fish/Fish Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]}]},{"id":"168b1db6-e7e8-868a-a3ef-364017314354","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"72e4f415-9d5c-9554-d33e-ab3c80114a51","type":"Collection2","label":"Fish Array","x":-287,"y":1071,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"fish-0001\",\r\n    \"Label\": \"Angelfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Angelfish.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"MA-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0002\",\r\n    \"Label\": \"Arapaima\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Arapaima.png\",\r\n    \"Price\": \"10000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"JL-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0003\",\r\n    \"Label\": \"Arowana\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Arowana.png\",\r\n    \"Price\": \"10000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0004\",\r\n    \"Label\": \"Barbel steed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Barbel_Steed.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0005\",\r\n    \"Label\": \"Barred Knifejaw\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Knifejaw.png\",\r\n    \"Price\": \"5000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0006\",\r\n    \"Label\": \"Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Black_Bass.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0007\",\r\n    \"Label\": \"Bitterling\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Bitterling.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"DE-FE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0008\",\r\n    \"Label\": \"Bluegill\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Bluegill.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0009\",\r\n    \"Label\": \"Brook Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Brook_Trout.png\",\r\n    \"Price\": \"150\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0010\",\r\n    \"Label\": \"Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Carp.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0011\",\r\n    \"Label\": \"Catfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Catfish.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"MA-OC\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0012\",\r\n    \"Label\": \"Cherry Salmon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Cherry_Salmon.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0013\",\r\n    \"Label\": \"Coelacanth\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Coelacanth.png\",\r\n    \"Price\": \"15000\",\r\n    \"Location\": \"Sea (raining)\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0014\",\r\n    \"Label\": \"Crawfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Crawfish.png\",\r\n    \"Price\": \"250\",\r\n    \"Location\": \"Pond\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0015\",\r\n    \"Label\": \"Crucian Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Crucian_Carp.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"fish-0016\",\r\n    \"Label\": \"Dace\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Dace.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0017\",\r\n    \"Label\": \"Eel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Eel.png\",\r\n    \"Price\": \"2000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0018\",\r\n    \"Label\": \"Freshwater Goby\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Freshwater_Goby.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0019\",\r\n    \"Label\": \"Frog\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Frog.png\",\r\n    \"Price\": \"250\",\r\n    \"Location\": \"Pond\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MA-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0020\",\r\n    \"Label\": \"Giant Catfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Giant_Catfish.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0021\",\r\n    \"Label\": \"Giant Snakehead\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Giant_Snakehead.png\",\r\n    \"Price\": \"6500\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0022\",\r\n    \"Label\": \"Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0023\",\r\n    \"Label\": \"Guppy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Guppy.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"AL-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0024\",\r\n    \"Label\": \"Jellyfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Jellyfish.png\",\r\n    \"Price\": \"100\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AU16-31\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0025\",\r\n    \"Label\": \"Killifish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Killifish.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-AU\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0026\",\r\n    \"Label\": \"Koi\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Koi.png\",\r\n    \"Price\": \"2000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0027\",\r\n    \"Label\": \"Large Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Bass.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0028\",\r\n    \"Label\": \"Large Char\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Char.png\",\r\n    \"Price\": \"10000\",\r\n    \"Location\": \"Waterfall\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0029\",\r\n    \"Label\": \"Loach\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Loach.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-MA\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0030\",\r\n    \"Label\": \"Pale Chub\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Pale_Chub.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0031\",\r\n    \"Label\": \"Piranha\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Piranha.png\",\r\n    \"Price\": \"6500\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9PM – 4AM; 9AM – 4PM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0032\",\r\n    \"Label\": \"Pond Smelt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Pond_Smelt.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"DE-FE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0033\",\r\n    \"Label\": \"Popeyed Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Popeyed_Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0034\",\r\n    \"Label\": \"Rainbow Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Rainbow_Trout.png\",\r\n    \"Price\": \"650\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0035\",\r\n    \"Label\": \"Red Snapper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Red_Snapper.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"fish-0036\",\r\n    \"Label\": \"Salmon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Salmon.png\",\r\n    \"Price\": \"650\",\r\n    \"Location\": \"River (mouth)\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"SE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0037\",\r\n    \"Label\": \"Sea Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Sea_Bass.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NOT SE16-AU15\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0038\",\r\n    \"Label\": \"Small Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Small_Bass.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0039\",\r\n    \"Label\": \"Stringfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Stringfish.png\",\r\n    \"Price\": \"15000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"DE-FE\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0040\",\r\n    \"Label\": \"Sweetfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Sweetfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"JL-SE\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"1fb6724e-5432-8d88-daa6-220721b8caac","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":413,"y":1124,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"7dd7a5fc-49ee-6513-1b25-3fbf33b3fdf7","type":"JavaScriptFunction","label":"Count Fish Keys","x":-241,"y":5,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('fish-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n"},"snowflakeId":"01911e4c9075-1j057g","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in the format \"Fish Progress: # / 40\". \n\nThe function, named `getFishKeys`, is run once every second (1000 milliseconds). It first retrieves all keys from the local storage, then filters out the keys that start with \"fish-\". The number of these keys is counted and the count is set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output in the format \"Fish Progress: # / 40\". \n\nAfter the count is set, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output.\n","snowflakeId":"01911e4cb4ad-zfdz0v","metadata":{}},{"content":"Run on page load as well as once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e4f85bc-qnz0r7","type":"user"},{"type":"assistant","content":"\nThis function counts the progress of a fish collection task. It retrieves all keys from the local storage, filters out the keys that start with \"fish-\", and counts the number of these keys. \n\nThe count is then formatted as \"Fish Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span>. After this, the function signals a <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span>.\n\nThe function is set to run immediately when the page loads and then continues to run once every second, ensuring that the fish count is displayed as soon as the page is loaded and is updated every second.\n","snowflakeId":"01911e4fab9e-xpnwq4","metadata":{}},{"content":"Run on page load as well as once per second\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e515ac3-95o9r1","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in a specific format. \n\nThe function, named getFishKeys, first retrieves all keys from the local storage. It then filters these keys to only include those that start with \"fish-\". The number of these \"fish-\" keys is then counted and this count is outputted in the format \"Fish Progress: # / 40\" through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is outputted, the function signals that it has successfully completed its task by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThis function is set to run once per second and also when the page loads.\n","snowflakeId":"01911e517a5e-y0d4bl","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"45f518d1-25ac-4433-f72c-296cbfb5daf0","type":"JavaScriptFunction","label":"Play Audio File","x":-243,"y":-131,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"18782baa-f643-6ff4-46d2-e9b6db2f24ac","type":"RouterNavigate","x":408,"y":699,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Spring Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"8efbad58-e72b-d1fb-1551-8c86a27eabd2","type":"JavaScriptFunction","label":"Play Audio File","x":-294,"y":828,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"609817b5-6b69-98c8-cb45-b0fd3afe3110","type":"RouterNavigate","x":407,"y":794,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Summer Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"4e24b423-c192-2739-a1fc-63995193eb3c","type":"RouterNavigate","x":405,"y":891,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fall Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"83259e0b-0419-f0c2-8de5-1eac5889707d","type":"RouterNavigate","x":407,"y":983,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Winter Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["d07d0260-3263-f5c4-5d7f-eba5972d813d"]}},{"name":"/Collection Pages/Fish/Fish Logic","id":"743aab3d-98b3-9925-26b2-d4befb4bc0fb","graph":{"connections":[{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-ID","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-ID"},{"fromId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","fromProperty":"out-ID","toId":"870cfb4c-7c94-b58f-fe47-8608ea537e51","toProperty":"modelId"},{"fromId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","fromProperty":"out-Checked","toId":"870cfb4c-7c94-b58f-fe47-8608ea537e51","toProperty":"prop-Checked"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Label","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Label"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"id","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-ID"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"prop-Label","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-Label"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"prop-Image","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-Icon"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Label","toId":"7ecfb115-f05c-e0e6-7663-9a39ac7c0fcb","toProperty":"text"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Icon","toId":"5eb5ceac-e239-2ac8-f2b6-387b879925e8","toProperty":"src"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Price","toId":"6957d9d1-5f90-484c-9e73-eb22752b5086","toProperty":"text"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"prop-Checked","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-Checked"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"prop-Price","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-Price"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Weather","toId":"c4f1f2e6-024f-fb50-75a7-d9accc651dea","toProperty":"text"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Time","toId":"403c9b9c-fcc9-a4c9-ffa3-bda2f56dde94","toProperty":"text"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Months","toId":"f28c0664-8493-43c5-9be0-7ee76a3e9f79","toProperty":"text"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Price","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Price"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Icon","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Icon"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"prop-Location","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-Weather"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"prop-Time","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-Time"},{"fromId":"6974af9b-1a24-4285-7d37-ffb29930967c","fromProperty":"prop-Months","toId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","toProperty":"in-Months"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Weather","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Weather"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Time","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Time"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Months","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Months"},{"fromId":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","fromProperty":"out-Checked","toId":"430d5c2d-65ca-d53f-de91-fc011c53155a","toProperty":"checked"},{"fromId":"430d5c2d-65ca-d53f-de91-fc011c53155a","fromProperty":"checked","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Checked"},{"fromId":"430d5c2d-65ca-d53f-de91-fc011c53155a","fromProperty":"onChange","toId":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","toProperty":"in-Changed"},{"fromId":"430d5c2d-65ca-d53f-de91-fc011c53155a","fromProperty":"onChange","toId":"870cfb4c-7c94-b58f-fe47-8608ea537e51","toProperty":"store"},{"fromId":"430d5c2d-65ca-d53f-de91-fc011c53155a","fromProperty":"onChange","toId":"e99b9308-03d3-4a6f-9c72-c6662a2ebb65","toProperty":"run"}],"roots":[{"id":"7e09a64a-b95a-0c80-b70f-fbf4dea3d9d0","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"401e95b2-156f-6221-2298-ee000e8e714b","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderLeftStyle":"none","borderTopStyle":"none","borderRightStyle":"none","alignX":"center","marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"borderTopLeftRadius":{"value":12,"unit":"px"},"borderTopRightRadius":{"value":12,"unit":"px"},"borderBottomRightRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d90683b6-605d-26bd-c9e4-581b9c511f9b","type":"Text","parameters":{"text":"Image","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"534bb674-31c4-872e-c919-69b21a2ff439","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"47c3c3a8-7f57-2075-4c99-6ba460c7632b","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"2389dc8f-ba73-2521-38c6-f49225350df5","type":"Text","parameters":{"text":"Donated","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"22d8d38b-f2b9-7d99-02d8-39e21ade0133","type":"Group","parameters":{"flexDirection":"row","marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"0ef3bb48-876d-eb7a-a299-661a92ed20ec","type":"Group","parameters":{"flexDirection":"row","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"5eb5ceac-e239-2ac8-f2b6-387b879925e8","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"7ecfb115-f05c-e0e6-7663-9a39ac7c0fcb","type":"Text","parameters":{"text":"Label","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"textAlignX":"center","textAlignY":"center","alignY":"center","fontSize":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"6957d9d1-5f90-484c-9e73-eb22752b5086","type":"Text","parameters":{"text":"Price","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"textAlignX":"center","textAlignY":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"33be2f33-cc50-9db4-9d1e-97d735ee9a10","type":"Group","parameters":{"flexDirection":"row","justifyContent":"center","marginBottom":{"value":1,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"sizeMode":"explicit"},"ports":[],"dynamicports":[],"children":[{"id":"430d5c2d-65ca-d53f-de91-fc011c53155a","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/owl.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"checked":false,"enabled":true,"alignX":"center","marginTop":{"value":2,"unit":"px"},"marginBottom":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"8a592295-90e0-6666-2541-6b6db1ec9dcb","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderLeftStyle":"none","borderTopStyle":"solid","borderRightStyle":"none","alignX":"center","marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"borderBottomRightRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"35056bf6-d3ac-a013-8358-9bafe41ac274","type":"Text","parameters":{"text":"Time","textAlignX":"center","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"7a3c4e42-8940-a826-63e8-60a38ce7e06a","type":"Text","parameters":{"text":"Months","textAlignX":"center","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"b8a781c4-f2cb-66e4-04c1-7e251886185b","type":"Text","parameters":{"text":"Location","textAlignX":"center","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"be0e4955-08c5-34d5-3c44-e9dc4f3ecd33","type":"Group","parameters":{"flexDirection":"row","marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"justifyContent":"center","marginBottom":{"value":-5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"403c9b9c-fcc9-a4c9-ffa3-bda2f56dde94","type":"Text","parameters":{"text":"Time","textAlignX":"center","wordBreak":"break-all","fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"f28c0664-8493-43c5-9be0-7ee76a3e9f79","type":"Text","parameters":{"text":"Months","fontSize":{"value":14,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"c4f1f2e6-024f-fb50-75a7-d9accc651dea","type":"Text","parameters":{"text":"Weather","textAlignX":"center","fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"6974af9b-1a24-4285-7d37-ffb29930967c","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,Location,Time,Months"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Location","displayName":"Location","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Location Changed","name":"changed-Location","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Time","displayName":"Time","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Time Changed","name":"changed-Time","index":20},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Months","displayName":"Months","index":21},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Months Changed","name":"changed-Months","index":22}],"children":[]},{"id":"870cfb4c-7c94-b58f-fe47-8608ea537e51","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"cf4f51be-ca06-98df-0b28-3c9145f04e9f","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Weather","displayName":"Weather","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Weather","displayName":"Weather","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"631e5ca8-a7d7-73c9-5afe-9ff0a411bee1","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst weather = Inputs.Weather || ''; // Added weather\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.weather !== selection.weather ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Weather = weather; // Added weather\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, weather, time, months }; // Added weather, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Weather","displayName":"Weather","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":12},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":13},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":15},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Weather","displayName":"Weather","plug":"output","type":"*","group":"Outputs","index":24},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":25},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":26}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"e99b9308-03d3-4a6f-9c72-c6662a2ebb65","type":"JavaScriptFunction","label":"Play Audio File","x":385,"y":791,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["7e09a64a-b95a-0c80-b70f-fbf4dea3d9d0"]}},{"name":"/Collection Pages/Fish/Fish Logic/Options","id":"098c9ab6-72fa-6115-4a29-e6e180836e9d","graph":{"connections":[{"fromId":"4ac86bd0-70c3-2413-bd9a-94505a0939eb","fromProperty":"id","toId":"73be9741-8110-71a4-db80-69d6f265bd43","toProperty":"in-ID"},{"fromId":"4ac86bd0-70c3-2413-bd9a-94505a0939eb","fromProperty":"prop-Label","toId":"73be9741-8110-71a4-db80-69d6f265bd43","toProperty":"in-Label"},{"fromId":"4ac86bd0-70c3-2413-bd9a-94505a0939eb","fromProperty":"prop-Checked","toId":"73be9741-8110-71a4-db80-69d6f265bd43","toProperty":"in-Checked"},{"fromId":"73be9741-8110-71a4-db80-69d6f265bd43","fromProperty":"out-ID","toId":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","toProperty":"in-ID"},{"fromId":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","fromProperty":"out-ID","toId":"3c92213b-4f67-6761-32dc-51a2c3893954","toProperty":"modelId"},{"fromId":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","fromProperty":"out-Checked","toId":"3c92213b-4f67-6761-32dc-51a2c3893954","toProperty":"prop-Checked"},{"fromId":"73be9741-8110-71a4-db80-69d6f265bd43","fromProperty":"out-Label","toId":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","toProperty":"in-Label"},{"fromId":"4ac86bd0-70c3-2413-bd9a-94505a0939eb","fromProperty":"prop-Icon","toId":"73be9741-8110-71a4-db80-69d6f265bd43","toProperty":"in-Icon"},{"fromId":"73be9741-8110-71a4-db80-69d6f265bd43","fromProperty":"out-Icon","toId":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","toProperty":"in-Icon"},{"fromId":"3c92213b-4f67-6761-32dc-51a2c3893954","fromProperty":"stored","toId":"fd95931f-2cf2-7b87-578c-1ad965fcfb69","toProperty":"Selection Changed"},{"fromId":"38990b24-b2f7-0c4c-1d6d-f92658f52c35","fromProperty":"onChange","toId":"3c92213b-4f67-6761-32dc-51a2c3893954","toProperty":"store"},{"fromId":"38990b24-b2f7-0c4c-1d6d-f92658f52c35","fromProperty":"onChange","toId":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","toProperty":"in-Changed"},{"fromId":"38990b24-b2f7-0c4c-1d6d-f92658f52c35","fromProperty":"checked","toId":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","toProperty":"in-Checked"},{"fromId":"73be9741-8110-71a4-db80-69d6f265bd43","fromProperty":"out-Checked","toId":"38990b24-b2f7-0c4c-1d6d-f92658f52c35","toProperty":"checked"},{"fromId":"73be9741-8110-71a4-db80-69d6f265bd43","fromProperty":"out-Label","toId":"38990b24-b2f7-0c4c-1d6d-f92658f52c35","toProperty":"label"}],"roots":[{"id":"4931c1cc-5485-e667-3f5d-d97217875082","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"38990b24-b2f7-0c4c-1d6d-f92658f52c35","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"4ac86bd0-70c3-2413-bd9a-94505a0939eb","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"3c92213b-4f67-6761-32dc-51a2c3893954","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"73be9741-8110-71a4-db80-69d6f265bd43","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"ad655e37-c5e9-9b54-043e-d3e04d46f8cc","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"fd95931f-2cf2-7b87-578c-1ad965fcfb69","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["4931c1cc-5485-e667-3f5d-d97217875082"]}},{"name":"/Collection Pages/Fish/fish-splash","id":"a78edffb-12e9-2df8-1016-64c78330b384","graph":{"connections":[{"fromId":"3be94966-1f0f-a44c-1f63-a0ac85d20d67","fromProperty":"out-Success","toId":"4de8766f-114f-544f-ceff-5798ff61b675","toProperty":"play"}],"roots":[{"id":"1845dc73-9d2a-d40e-39c1-5ecbd921e07d","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"e9c5ba7a-9656-9152-9475-48f2fc2dda60","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"0e227b62-c182-df7a-624c-c481b4d47099","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #77bcd9; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/fish.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a278f96e-221f-f52b-0295-d41f5f4f964d","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4de8766f-114f-544f-ceff-5798ff61b675","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"3be94966-1f0f-a44c-1f63-a0ac85d20d67","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"6aa1ce9f-2a92-6ba1-cd80-199104dd49da","type":"RouterNavigate","x":66,"y":360,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["1845dc73-9d2a-d40e-39c1-5ecbd921e07d"]}},{"name":"/Collection Pages/Fish/Spring Fish","id":"f88fc995-cdde-0d4c-2648-509606fb471a","graph":{"connections":[{"fromId":"7e440ef9-a4cc-b781-b917-9f91a0f082ed","fromProperty":"items","toId":"e98953bb-a528-361e-fc1c-18443aa53337","toProperty":"items"},{"fromId":"09ab4cce-7e89-6a81-7bf0-01d4aec2b897","fromProperty":"out-Success","toId":"e98953bb-a528-361e-fc1c-18443aa53337","toProperty":"refresh"},{"fromId":"bc9eb3ad-7e6b-bc33-305a-920c5f36b2b3","fromProperty":"out-CountText","toId":"564a1c66-aa12-483e-bb9e-7266a70cfd28","toProperty":"text"},{"fromId":"b201c881-cf09-f529-345d-de4095253002","fromProperty":"onClick","toId":"446e4e9d-7224-4106-9279-947e8f167986","toProperty":"run"},{"fromId":"a9ada227-077f-fd12-6643-92b95a043bd0","fromProperty":"onClick","toId":"446e4e9d-7224-4106-9279-947e8f167986","toProperty":"run"},{"fromId":"e30d8ba3-7326-5c37-0916-5d093b951b1e","fromProperty":"onClick","toId":"446e4e9d-7224-4106-9279-947e8f167986","toProperty":"run"},{"fromId":"07330573-213a-57a6-4419-6bd745ff4e27","fromProperty":"onClick","toId":"446e4e9d-7224-4106-9279-947e8f167986","toProperty":"run"},{"fromId":"07330573-213a-57a6-4419-6bd745ff4e27","fromProperty":"onClick","toId":"21f35113-8122-5dad-d5b6-06a10ad557b6","toProperty":"navigate"},{"fromId":"e30d8ba3-7326-5c37-0916-5d093b951b1e","fromProperty":"onClick","toId":"aebfe687-2caa-2283-c37a-4636e924a976","toProperty":"navigate"},{"fromId":"a9ada227-077f-fd12-6643-92b95a043bd0","fromProperty":"onClick","toId":"d63e14a3-3fa1-288d-6956-c5113961dde5","toProperty":"navigate"},{"fromId":"b201c881-cf09-f529-345d-de4095253002","fromProperty":"onClick","toId":"98b97305-e903-c99b-d3c8-b081c693903f","toProperty":"navigate"}],"roots":[{"id":"d060f325-2ec8-6538-1ff8-f20f77e3ebd3","type":"Page","x":0,"y":0,"parameters":{"cssClassName":""},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Spring Fish","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"spring-fish","index":32}],"children":[{"id":"45b66644-45a3-2ab5-bdf5-a2dc8cbd2cc0","type":"Group","parameters":{"cssClassName":""},"ports":[],"dynamicports":[],"children":[{"id":"564a1c66-aa12-483e-bb9e-7266a70cfd28","type":"Text","label":"","parameters":{"text":"Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"Nookmiles BG Light","textAlignX":"left","marginRight":{"value":10,"unit":"px"},"textAlignY":"top"},"ports":[],"dynamicports":[],"children":[]},{"id":"8170388c-c452-7bc7-ffe6-86b702ba844e","type":"module.inlineHtml","label":"Fish Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fish.png'),\r\n    url('/images/background/fish.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"36939ba6-e0a3-2add-870e-76dd961aeb69","type":"Group","label":"Fish Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"11085d85-7480-3450-d20f-f40e384206e4","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nookmiles BG Light","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a775f034-85bc-8dd4-c004-0aeae413e9e7","type":"Group","label":"Fish Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"07d06e9f-84ff-aec8-c142-93acc1afd1e7","type":"Image","label":"Fish","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/sea_bass.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"803876cb-377d-ff37-267b-1c9eaade78ad","type":"Text","label":"","parameters":{"text":"Spring Fish","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nook Text","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1c316862-7688-0da8-7f4b-a73a1a331731","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"b201c881-cf09-f529-345d-de4095253002","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a9ada227-077f-fd12-6643-92b95a043bd0","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e30d8ba3-7326-5c37-0916-5d093b951b1e","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"07330573-213a-57a6-4419-6bd745ff4e27","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e98953bb-a528-361e-fc1c-18443aa53337","type":"For Each","parameters":{"template":"/Collection Pages/Fish/Fish Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]}]},{"id":"a7cd04c2-0a73-82f6-8845-a0f59c95d975","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"7e440ef9-a4cc-b781-b917-9f91a0f082ed","type":"Collection2","label":"Fish Array","x":-287,"y":1071,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"fish-0001\",\r\n    \"Label\": \"Angelfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Angelfish.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"MA-OC\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0004\",\r\n    \"Label\": \"Barbel steed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Barbel_Steed.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0005\",\r\n    \"Label\": \"Barred Knifejaw\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Knifejaw.png\",\r\n    \"Price\": \"5000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0006\",\r\n    \"Label\": \"Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Black_Bass.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0008\",\r\n    \"Label\": \"Bluegill\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Bluegill.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0009\",\r\n    \"Label\": \"Brook Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Brook_Trout.png\",\r\n    \"Price\": \"150\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0010\",\r\n    \"Label\": \"Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Carp.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0011\",\r\n    \"Label\": \"Catfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Catfish.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"MA-OC\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0012\",\r\n    \"Label\": \"Cherry Salmon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Cherry_Salmon.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0013\",\r\n    \"Label\": \"Coelacanth\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Coelacanth.png\",\r\n    \"Price\": \"15000\",\r\n    \"Location\": \"Sea (raining)\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0014\",\r\n    \"Label\": \"Crawfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Crawfish.png\",\r\n    \"Price\": \"250\",\r\n    \"Location\": \"Pond\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-SE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0015\",\r\n    \"Label\": \"Crucian Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Crucian_Carp.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0016\",\r\n    \"Label\": \"Dace\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Dace.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0018\",\r\n    \"Label\": \"Freshwater Goby\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Freshwater_Goby.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0019\",\r\n    \"Label\": \"Frog\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Frog.png\",\r\n    \"Price\": \"250\",\r\n    \"Location\": \"Pond\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MA-AU\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0022\",\r\n    \"Label\": \"Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0023\",\r\n    \"Label\": \"Guppy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Guppy.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"AL-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0025\",\r\n    \"Label\": \"Killifish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Killifish.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-AU\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0026\",\r\n    \"Label\": \"Koi\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Koi.png\",\r\n    \"Price\": \"2000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0027\",\r\n    \"Label\": \"Large Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Bass.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0028\",\r\n    \"Label\": \"Large Char\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Char.png\",\r\n    \"Price\": \"10000\",\r\n    \"Location\": \"Waterfall\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0029\",\r\n    \"Label\": \"Loach\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Loach.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-MA\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0030\",\r\n    \"Label\": \"Pale Chub\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Pale_Chub.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0033\",\r\n    \"Label\": \"Popeyed Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Popeyed_Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0034\",\r\n    \"Label\": \"Rainbow Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Rainbow_Trout.png\",\r\n    \"Price\": \"650\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"MR-JN & SE-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0035\",\r\n    \"Label\": \"Red Snapper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Red_Snapper.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0037\",\r\n    \"Label\": \"Sea Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Sea_Bass.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NOT SE16-AU15\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Autumn, Winter, Spring\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0038\",\r\n    \"Label\": \"Small Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Small_Bass.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"09ab4cce-7e89-6a81-7bf0-01d4aec2b897","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":413,"y":1124,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"bc9eb3ad-7e6b-bc33-305a-920c5f36b2b3","type":"JavaScriptFunction","label":"Count Fish Keys","x":-241,"y":5,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('fish-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n"},"snowflakeId":"01911e4c9075-1j057g","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in the format \"Fish Progress: # / 40\". \n\nThe function, named `getFishKeys`, is run once every second (1000 milliseconds). It first retrieves all keys from the local storage, then filters out the keys that start with \"fish-\". The number of these keys is counted and the count is set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output in the format \"Fish Progress: # / 40\". \n\nAfter the count is set, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output.\n","snowflakeId":"01911e4cb4ad-zfdz0v","metadata":{}},{"content":"Run on page load as well as once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e4f85bc-qnz0r7","type":"user"},{"type":"assistant","content":"\nThis function counts the progress of a fish collection task. It retrieves all keys from the local storage, filters out the keys that start with \"fish-\", and counts the number of these keys. \n\nThe count is then formatted as \"Fish Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span>. After this, the function signals a <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span>.\n\nThe function is set to run immediately when the page loads and then continues to run once every second, ensuring that the fish count is displayed as soon as the page is loaded and is updated every second.\n","snowflakeId":"01911e4fab9e-xpnwq4","metadata":{}},{"content":"Run on page load as well as once per second\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e515ac3-95o9r1","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in a specific format. \n\nThe function, named getFishKeys, first retrieves all keys from the local storage. It then filters these keys to only include those that start with \"fish-\". The number of these \"fish-\" keys is then counted and this count is outputted in the format \"Fish Progress: # / 40\" through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is outputted, the function signals that it has successfully completed its task by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThis function is set to run once per second and also when the page loads.\n","snowflakeId":"01911e517a5e-y0d4bl","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"98b97305-e903-c99b-d3c8-b081c693903f","type":"RouterNavigate","x":408,"y":699,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"446e4e9d-7224-4106-9279-947e8f167986","type":"JavaScriptFunction","label":"Play Audio File","x":-294,"y":828,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d63e14a3-3fa1-288d-6956-c5113961dde5","type":"RouterNavigate","x":407,"y":794,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Summer Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"aebfe687-2caa-2283-c37a-4636e924a976","type":"RouterNavigate","x":405,"y":891,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fall Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"21f35113-8122-5dad-d5b6-06a10ad557b6","type":"RouterNavigate","x":407,"y":983,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Winter Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["d060f325-2ec8-6538-1ff8-f20f77e3ebd3"]}},{"name":"/Collection Pages/Fish/Summer Fish","id":"b9908c1a-ea3a-ed4a-64c9-272abc745f5f","graph":{"connections":[{"fromId":"2fdaa309-12ca-fa66-3a8d-580a7258c6f0","fromProperty":"items","toId":"1dbbfaf8-c657-347f-a7e1-7c816ee49c71","toProperty":"items"},{"fromId":"221bd045-bac5-4873-2186-29e74b22ed4c","fromProperty":"out-Success","toId":"1dbbfaf8-c657-347f-a7e1-7c816ee49c71","toProperty":"refresh"},{"fromId":"1405af2a-c922-9b2b-38bc-daae07b3d418","fromProperty":"out-CountText","toId":"7e40f3b7-b2ae-dc62-425e-081c79c01f33","toProperty":"text"},{"fromId":"cbd75f89-d15d-10fe-4c99-9da91d9bde38","fromProperty":"onClick","toId":"86d059b0-eb51-8a5d-21b0-4d5e3c09f4e3","toProperty":"run"},{"fromId":"0b6761c3-85a4-5044-39ff-11f166e9e44a","fromProperty":"onClick","toId":"86d059b0-eb51-8a5d-21b0-4d5e3c09f4e3","toProperty":"run"},{"fromId":"9953d1cf-ad78-d65b-fde5-f875c3373961","fromProperty":"onClick","toId":"86d059b0-eb51-8a5d-21b0-4d5e3c09f4e3","toProperty":"run"},{"fromId":"f44b3929-c5fb-2dce-3c42-728bdf347d45","fromProperty":"onClick","toId":"86d059b0-eb51-8a5d-21b0-4d5e3c09f4e3","toProperty":"run"},{"fromId":"f44b3929-c5fb-2dce-3c42-728bdf347d45","fromProperty":"onClick","toId":"33f62a14-a7ed-495d-c769-64b06a7a95ed","toProperty":"navigate"},{"fromId":"9953d1cf-ad78-d65b-fde5-f875c3373961","fromProperty":"onClick","toId":"1c3dcc3b-c335-3d70-693d-3bf741594e15","toProperty":"navigate"},{"fromId":"0b6761c3-85a4-5044-39ff-11f166e9e44a","fromProperty":"onClick","toId":"3dcdebb8-9b63-9aa2-58fe-eb98324f1891","toProperty":"navigate"},{"fromId":"cbd75f89-d15d-10fe-4c99-9da91d9bde38","fromProperty":"onClick","toId":"e1ea2bdb-0edb-513b-506f-94a6593d9349","toProperty":"navigate"}],"roots":[{"id":"f0dcb1ba-6337-e386-d375-7947705b7223","type":"Page","x":0,"y":0,"parameters":{"cssClassName":""},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Summer Fish","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"summer-fish","index":32}],"children":[{"id":"93ca1ec5-de70-0eaa-955f-e82afafaf94d","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"7e40f3b7-b2ae-dc62-425e-081c79c01f33","type":"Text","label":"","parameters":{"text":"Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"Nookmiles BG Light","textAlignX":"left","marginRight":{"value":10,"unit":"px"},"textAlignY":"top"},"ports":[],"dynamicports":[],"children":[]},{"id":"31abf3dd-b79d-0c9d-1736-ac811beddfbe","type":"module.inlineHtml","label":"Fish Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fish.png'),\r\n    url('/images/background/fish.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"c4aef721-7e74-cff1-3db2-b63c30d37a11","type":"Group","label":"Fish Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6617bf63-5cc4-69f9-0b7a-420393525bd0","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nookmiles BG Light","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"bdfe4788-8932-05fa-cba6-1a372aa77d07","type":"Group","label":"Fish Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"294741cf-a762-7d74-aa1c-e44279f8f595","type":"Image","label":"Fish","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/sea_bass.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"7975708b-0997-679b-c579-89b016cfcd31","type":"Text","label":"","parameters":{"text":"Summer Fish","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nook Text","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"87c7ac6a-9d4b-580b-eecb-63a5aa2e725c","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"cbd75f89-d15d-10fe-4c99-9da91d9bde38","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"0b6761c3-85a4-5044-39ff-11f166e9e44a","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"9953d1cf-ad78-d65b-fde5-f875c3373961","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"f44b3929-c5fb-2dce-3c42-728bdf347d45","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#c3c2ef","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1dbbfaf8-c657-347f-a7e1-7c816ee49c71","type":"For Each","parameters":{"template":"/Collection Pages/Fish/Fish Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]}]},{"id":"c7ff84bf-20f8-63a2-ef3c-a832a5477313","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"2fdaa309-12ca-fa66-3a8d-580a7258c6f0","type":"Collection2","label":"Fish Array","x":-287,"y":1071,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"fish-0001\",\r\n    \"Label\": \"Angelfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Angelfish.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"MA-OC\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0002\",\r\n    \"Label\": \"Arapaima\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Arapaima.png\",\r\n    \"Price\": \"10000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"JL-SE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0003\",\r\n    \"Label\": \"Arowana\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Arowana.png\",\r\n    \"Price\": \"10000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4AM – 9AM; 4PM – 9PM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0004\",\r\n    \"Label\": \"Barbel steed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Barbel_Steed.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0005\",\r\n    \"Label\": \"Barred Knifejaw\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Knifejaw.png\",\r\n    \"Price\": \"5000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MR-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0006\",\r\n    \"Label\": \"Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Black_Bass.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0008\",\r\n    \"Label\": \"Bluegill\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Bluegill.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0009\",\r\n    \"Label\": \"Brook Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Brook_Trout.png\",\r\n    \"Price\": \"150\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0010\",\r\n    \"Label\": \"Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Carp.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0013\",\r\n    \"Label\": \"Coelacanth\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Coelacanth.png\",\r\n    \"Price\": \"15000\",\r\n    \"Location\": \"Sea (raining)\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0015\",\r\n    \"Label\": \"Crucian Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Crucian_Carp.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0016\",\r\n    \"Label\": \"Dace\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Dace.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0017\",\r\n    \"Label\": \"Eel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Eel.png\",\r\n    \"Price\": \"2000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0018\",\r\n    \"Label\": \"Freshwater Goby\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Freshwater_Goby.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0019\",\r\n    \"Label\": \"Frog\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Frog.png\",\r\n    \"Price\": \"250\",\r\n    \"Location\": \"Pond\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"MA-AU\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0020\",\r\n    \"Label\": \"Giant Catfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Giant_Catfish.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0021\",\r\n    \"Label\": \"Giant Snakehead\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Giant_Snakehead.png\",\r\n    \"Price\": \"6500\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"JN-AU\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0022\",\r\n    \"Label\": \"Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0023\",\r\n    \"Label\": \"Guppy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Guppy.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"AL-NO\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer, Autumn\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0024\",\r\n    \"Label\": \"Jellyfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Jellyfish.png\",\r\n    \"Price\": \"100\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AU16-31\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0025\",\r\n    \"Label\": \"Killifish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Killifish.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"AL-AU\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Spring, Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0026\",\r\n    \"Label\": \"Koi\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Koi.png\",\r\n    \"Price\": \"2000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0027\",\r\n    \"Label\": \"Large Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Bass.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0030\",\r\n    \"Label\": \"Pale Chub\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Pale_Chub.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0031\",\r\n    \"Label\": \"Piranha\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Piranha.png\",\r\n    \"Price\": \"6500\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9PM – 4AM; 9AM – 4PM\",\r\n    \"Months\": \"JN-SE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0033\",\r\n    \"Label\": \"Popeyed Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Popeyed_Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0035\",\r\n    \"Label\": \"Red Snapper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Red_Snapper.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0038\",\r\n    \"Label\": \"Small Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Small_Bass.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0040\",\r\n    \"Label\": \"Sweetfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Sweetfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"JL-SE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Summer\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"221bd045-bac5-4873-2186-29e74b22ed4c","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":413,"y":1124,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"1405af2a-c922-9b2b-38bc-daae07b3d418","type":"JavaScriptFunction","label":"Count Fish Keys","x":-241,"y":5,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('fish-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n"},"snowflakeId":"01911e4c9075-1j057g","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in the format \"Fish Progress: # / 40\". \n\nThe function, named `getFishKeys`, is run once every second (1000 milliseconds). It first retrieves all keys from the local storage, then filters out the keys that start with \"fish-\". The number of these keys is counted and the count is set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output in the format \"Fish Progress: # / 40\". \n\nAfter the count is set, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output.\n","snowflakeId":"01911e4cb4ad-zfdz0v","metadata":{}},{"content":"Run on page load as well as once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e4f85bc-qnz0r7","type":"user"},{"type":"assistant","content":"\nThis function counts the progress of a fish collection task. It retrieves all keys from the local storage, filters out the keys that start with \"fish-\", and counts the number of these keys. \n\nThe count is then formatted as \"Fish Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span>. After this, the function signals a <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span>.\n\nThe function is set to run immediately when the page loads and then continues to run once every second, ensuring that the fish count is displayed as soon as the page is loaded and is updated every second.\n","snowflakeId":"01911e4fab9e-xpnwq4","metadata":{}},{"content":"Run on page load as well as once per second\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e515ac3-95o9r1","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in a specific format. \n\nThe function, named getFishKeys, first retrieves all keys from the local storage. It then filters these keys to only include those that start with \"fish-\". The number of these \"fish-\" keys is then counted and this count is outputted in the format \"Fish Progress: # / 40\" through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is outputted, the function signals that it has successfully completed its task by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThis function is set to run once per second and also when the page loads.\n","snowflakeId":"01911e517a5e-y0d4bl","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"e1ea2bdb-0edb-513b-506f-94a6593d9349","type":"RouterNavigate","x":408,"y":699,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Spring Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"86d059b0-eb51-8a5d-21b0-4d5e3c09f4e3","type":"JavaScriptFunction","label":"Play Audio File","x":-294,"y":828,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"3dcdebb8-9b63-9aa2-58fe-eb98324f1891","type":"RouterNavigate","x":407,"y":794,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"1c3dcc3b-c335-3d70-693d-3bf741594e15","type":"RouterNavigate","x":405,"y":891,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fall Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"33f62a14-a7ed-495d-c769-64b06a7a95ed","type":"RouterNavigate","x":407,"y":983,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Winter Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["f0dcb1ba-6337-e386-d375-7947705b7223"]}},{"name":"/Collection Pages/Fish/Winter Fish","id":"c5716835-94d2-03ae-79e5-251a921ce187","graph":{"connections":[{"fromId":"00265047-74f7-409a-b226-cd6e1ea30623","fromProperty":"items","toId":"a1b20b58-beaf-183a-2505-1073a4387659","toProperty":"items"},{"fromId":"8f08e103-2554-4a6d-3bcd-ca848a6d7ceb","fromProperty":"out-Success","toId":"a1b20b58-beaf-183a-2505-1073a4387659","toProperty":"refresh"},{"fromId":"96ab761a-9c0d-1371-051e-6f1ffea2b1bd","fromProperty":"out-CountText","toId":"cc715aec-b30e-75b9-1773-eb3406a35695","toProperty":"text"},{"fromId":"7bb5438a-d745-e879-f816-0a68253aaaf2","fromProperty":"onClick","toId":"42387564-f702-4c10-d307-2f5bea2813eb","toProperty":"run"},{"fromId":"cf371ea2-2aa9-8857-bf29-a5e573eab96b","fromProperty":"onClick","toId":"42387564-f702-4c10-d307-2f5bea2813eb","toProperty":"run"},{"fromId":"8ca7ab87-309d-0827-030e-25426e464438","fromProperty":"onClick","toId":"42387564-f702-4c10-d307-2f5bea2813eb","toProperty":"run"},{"fromId":"7a38a0ea-ea7c-2f2d-6488-a83f6f2a250c","fromProperty":"onClick","toId":"42387564-f702-4c10-d307-2f5bea2813eb","toProperty":"run"},{"fromId":"7a38a0ea-ea7c-2f2d-6488-a83f6f2a250c","fromProperty":"onClick","toId":"e44c8054-4dc8-993e-4352-1600358a14ff","toProperty":"navigate"},{"fromId":"8ca7ab87-309d-0827-030e-25426e464438","fromProperty":"onClick","toId":"f4e4aaaf-eb1b-fe6e-245f-4f6152296c16","toProperty":"navigate"},{"fromId":"cf371ea2-2aa9-8857-bf29-a5e573eab96b","fromProperty":"onClick","toId":"835304b2-3627-da0c-610c-e3da70c74004","toProperty":"navigate"},{"fromId":"7bb5438a-d745-e879-f816-0a68253aaaf2","fromProperty":"onClick","toId":"07b16e52-c9e1-413e-aa9c-246e019aaca2","toProperty":"navigate"}],"roots":[{"id":"2c9c31bf-39e1-c26c-e713-6c9447fee5ea","type":"Page","x":0,"y":0,"parameters":{"cssClassName":""},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Winter Fish","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"winter-fish","index":32}],"children":[{"id":"11a7ca07-c4ed-53fd-5d0f-09be716759b5","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"cc715aec-b30e-75b9-1773-eb3406a35695","type":"Text","label":"","parameters":{"text":"Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"Nookmiles BG Light","textAlignX":"left","marginRight":{"value":10,"unit":"px"},"textAlignY":"top"},"ports":[],"dynamicports":[],"children":[]},{"id":"6e1d9eed-86fd-5f60-b109-fcb9934e358a","type":"module.inlineHtml","label":"Fish Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fish.png'),\r\n    url('/images/background/fish.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"9d4a0f06-207c-d61d-9174-838fc90195ba","type":"Group","label":"Fish Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"dd09e42a-b851-5a71-bbf2-4afbaf59dab3","type":"Group","label":"Bugs","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nookmiles BG Light","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ab3f3465-500d-1181-f2f5-2bf464c6da2f","type":"Group","label":"Fish Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"11def249-c820-001d-904e-e8b6470187ee","type":"Image","label":"Fish","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/sea_bass.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"8ecb9d87-e96b-616b-9b91-6759e27ea15d","type":"Text","label":"","parameters":{"text":"Winter Fish","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nook Text","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3c798084-4c8f-a60c-2f55-98da90ebea8c","type":"Group","parameters":{"flexDirection":"row","marginTop":{"value":5,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"7bb5438a-d745-e879-f816-0a68253aaaf2","type":"net.noodl.controls.button","label":"Spring","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Spring.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#f8b9d6","borderBottomRightRadius":{"value":0,"unit":"px"},"borderTopRightRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"cf371ea2-2aa9-8857-bf29-a5e573eab96b","type":"net.noodl.controls.button","label":"Summer","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Summer.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#b9edf9","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"8ca7ab87-309d-0827-030e-25426e464438","type":"net.noodl.controls.button","label":"Fall","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Fall.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"#fad8b7","borderRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"7a38a0ea-ea7c-2f2d-6488-a83f6f2a250c","type":"net.noodl.controls.button","label":"Winter","parameters":{"useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/seasons/Winter.png","iconSize":{"value":30,"unit":"px"},"minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"backgroundColor":"Primary","borderTopLeftRadius":{"value":0,"unit":"px"},"borderBottomLeftRadius":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a1b20b58-beaf-183a-2505-1073a4387659","type":"For Each","parameters":{"template":"/Collection Pages/Fish/Fish Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]}]},{"id":"47455c59-fe20-4c7d-b8c9-1b3e03bfd41e","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"00265047-74f7-409a-b226-cd6e1ea30623","type":"Collection2","label":"Fish Array","x":-287,"y":1071,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"fish-0004\",\r\n    \"Label\": \"Barbel steed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Barbel_Steed.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0006\",\r\n    \"Label\": \"Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Black_Bass.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0007\",\r\n    \"Label\": \"Bitterling\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Bitterling.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"DE-FE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Winter\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0008\",\r\n    \"Label\": \"Bluegill\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Bluegill.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0009\",\r\n    \"Label\": \"Brook Trout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Brook_Trout.png\",\r\n    \"Price\": \"150\",\r\n    \"Location\": \"Lake\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0010\",\r\n    \"Label\": \"Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Carp.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0013\",\r\n    \"Label\": \"Coelacanth\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Coelacanth.png\",\r\n    \"Price\": \"15000\",\r\n    \"Location\": \"Sea (raining)\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0015\",\r\n    \"Label\": \"Crucian Carp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Crucian_Carp.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0016\",\r\n    \"Label\": \"Dace\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Dace.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0018\",\r\n    \"Label\": \"Freshwater Goby\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Freshwater_Goby.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0022\",\r\n    \"Label\": \"Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0026\",\r\n    \"Label\": \"Koi\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Koi.png\",\r\n    \"Price\": \"2000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0027\",\r\n    \"Label\": \"Large Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Large_Bass.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0030\",\r\n    \"Label\": \"Pale Chub\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Pale_Chub.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0032\",\r\n    \"Label\": \"Pond Smelt\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Pond_Smelt.png\",\r\n    \"Price\": \"300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"DE-FE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Winter\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0033\",\r\n    \"Label\": \"Popeyed Goldfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Popeyed_Goldfish.png\",\r\n    \"Price\": \"1300\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"9AM – 4PM\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0035\",\r\n    \"Label\": \"Red Snapper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Red_Snapper.png\",\r\n    \"Price\": \"3000\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0037\",\r\n    \"Label\": \"Sea Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Sea_Bass.png\",\r\n    \"Price\": \"120\",\r\n    \"Location\": \"Sea\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"NOT SE16-AU15\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Autumn, Winter, Spring\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0038\",\r\n    \"Label\": \"Small Bass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Small_Bass.png\",\r\n    \"Price\": \"200\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"All day\",\r\n    \"Months\": \"ALL\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"All seasons\"\r\n  },\r\n  {\r\n    \"id\": \"fish-0039\",\r\n    \"Label\": \"Stringfish\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fish/Stringfish.png\",\r\n    \"Price\": \"15000\",\r\n    \"Location\": \"River\",\r\n    \"Time\": \"4PM – 9AM\",\r\n    \"Months\": \"DE-FE\",\r\n    \"Checked\": \"\",\r\n    \"Season\": \"Winter\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"8f08e103-2554-4a6d-3bcd-ca848a6d7ceb","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":413,"y":1124,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"96ab761a-9c0d-1371-051e-6f1ffea2b1bd","type":"JavaScriptFunction","label":"Count Fish Keys","x":-241,"y":5,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('fish-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n"},"snowflakeId":"01911e4c9075-1j057g","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in the format \"Fish Progress: # / 40\". \n\nThe function, named `getFishKeys`, is run once every second (1000 milliseconds). It first retrieves all keys from the local storage, then filters out the keys that start with \"fish-\". The number of these keys is counted and the count is set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output in the format \"Fish Progress: # / 40\". \n\nAfter the count is set, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output.\n","snowflakeId":"01911e4cb4ad-zfdz0v","metadata":{}},{"content":"Run on page load as well as once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e4f85bc-qnz0r7","type":"user"},{"type":"assistant","content":"\nThis function counts the progress of a fish collection task. It retrieves all keys from the local storage, filters out the keys that start with \"fish-\", and counts the number of these keys. \n\nThe count is then formatted as \"Fish Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span>. After this, the function signals a <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span>.\n\nThe function is set to run immediately when the page loads and then continues to run once every second, ensuring that the fish count is displayed as soon as the page is loaded and is updated every second.\n","snowflakeId":"01911e4fab9e-xpnwq4","metadata":{}},{"content":"Run on page load as well as once per second\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get fish keys from local storage and count them\nfunction getFishKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"fish-\"\n    const fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n    // Count the number of fish keys\n    const count = fishKeys.length;\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fish Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getFishKeys, 1000);\n\n// Run the function on page load\ngetFishKeys();\n"},"snowflakeId":"01911e515ac3-95o9r1","type":"user"},{"type":"assistant","content":"\nThis function counts the number of keys in the local storage that start with \"fish-\" and outputs the count in a specific format. \n\nThe function, named getFishKeys, first retrieves all keys from the local storage. It then filters these keys to only include those that start with \"fish-\". The number of these \"fish-\" keys is then counted and this count is outputted in the format \"Fish Progress: # / 40\" through the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is outputted, the function signals that it has successfully completed its task by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThis function is set to run once per second and also when the page loads.\n","snowflakeId":"01911e517a5e-y0d4bl","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"07b16e52-c9e1-413e-aa9c-246e019aaca2","type":"RouterNavigate","x":408,"y":699,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Spring Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"42387564-f702-4c10-d307-2f5bea2813eb","type":"JavaScriptFunction","label":"Play Audio File","x":-294,"y":828,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"835304b2-3627-da0c-610c-e3da70c74004","type":"RouterNavigate","x":407,"y":794,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Summer Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"f4e4aaaf-eb1b-fe6e-245f-4f6152296c16","type":"RouterNavigate","x":405,"y":891,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fall Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"e44c8054-4dc8-993e-4352-1600358a14ff","type":"RouterNavigate","x":407,"y":983,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["2c9c31bf-39e1-c26c-e713-6c9447fee5ea"]}},{"name":"/Collection Pages/Fossils/Fossil Logic","id":"462a3937-da82-df38-d2ff-5988a9d65f3b","graph":{"connections":[{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-ID","toId":"2b647776-8266-fb54-a0b9-5739856ee395","toProperty":"in-ID"},{"fromId":"2b647776-8266-fb54-a0b9-5739856ee395","fromProperty":"out-ID","toId":"9e368a0d-a67b-654b-7b2e-b101fbf1ffa8","toProperty":"modelId"},{"fromId":"2b647776-8266-fb54-a0b9-5739856ee395","fromProperty":"out-Checked","toId":"9e368a0d-a67b-654b-7b2e-b101fbf1ffa8","toProperty":"prop-Checked"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-Label","toId":"2b647776-8266-fb54-a0b9-5739856ee395","toProperty":"in-Label"},{"fromId":"c9b28bcb-e7b5-e4ee-d727-6067ae92fa9f","fromProperty":"id","toId":"a52d374d-d65c-72f2-b53e-17e1db402c03","toProperty":"in-ID"},{"fromId":"c9b28bcb-e7b5-e4ee-d727-6067ae92fa9f","fromProperty":"prop-Label","toId":"a52d374d-d65c-72f2-b53e-17e1db402c03","toProperty":"in-Label"},{"fromId":"c9b28bcb-e7b5-e4ee-d727-6067ae92fa9f","fromProperty":"prop-Image","toId":"a52d374d-d65c-72f2-b53e-17e1db402c03","toProperty":"in-Icon"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-Label","toId":"35145e61-cd17-d27b-9706-fdd5f98e470a","toProperty":"text"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-Icon","toId":"0c9e3d5f-cb70-1dd5-130b-710dfa9e329b","toProperty":"src"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-Price","toId":"575cb9d8-dae2-3ef1-5a74-7b90547f35de","toProperty":"text"},{"fromId":"c9b28bcb-e7b5-e4ee-d727-6067ae92fa9f","fromProperty":"prop-Checked","toId":"a52d374d-d65c-72f2-b53e-17e1db402c03","toProperty":"in-Checked"},{"fromId":"c9b28bcb-e7b5-e4ee-d727-6067ae92fa9f","fromProperty":"prop-Price","toId":"a52d374d-d65c-72f2-b53e-17e1db402c03","toProperty":"in-Price"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-Price","toId":"2b647776-8266-fb54-a0b9-5739856ee395","toProperty":"in-Price"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-Icon","toId":"2b647776-8266-fb54-a0b9-5739856ee395","toProperty":"in-Icon"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-Checked","toId":"431108de-976e-e8cb-e81d-7c0e67348e90","toProperty":"checked"},{"fromId":"431108de-976e-e8cb-e81d-7c0e67348e90","fromProperty":"checked","toId":"2b647776-8266-fb54-a0b9-5739856ee395","toProperty":"in-Checked"},{"fromId":"431108de-976e-e8cb-e81d-7c0e67348e90","fromProperty":"onChange","toId":"2b647776-8266-fb54-a0b9-5739856ee395","toProperty":"in-Changed"},{"fromId":"431108de-976e-e8cb-e81d-7c0e67348e90","fromProperty":"onChange","toId":"9e368a0d-a67b-654b-7b2e-b101fbf1ffa8","toProperty":"store"},{"fromId":"c9b28bcb-e7b5-e4ee-d727-6067ae92fa9f","fromProperty":"prop-HRA","toId":"a52d374d-d65c-72f2-b53e-17e1db402c03","toProperty":"in-HRA"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-HRA","toId":"2b647776-8266-fb54-a0b9-5739856ee395","toProperty":"in-HRA"},{"fromId":"a52d374d-d65c-72f2-b53e-17e1db402c03","fromProperty":"out-HRA","toId":"636dff39-085f-5bfd-df3a-2c5358673c2f","toProperty":"text"},{"fromId":"431108de-976e-e8cb-e81d-7c0e67348e90","fromProperty":"onChange","toId":"7d5a091d-64a4-212a-bbc3-33cc267913c7","toProperty":"run"}],"roots":[{"id":"e5cbcd36-a923-645b-dcdd-237572691c6a","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6593bcca-adb4-bc24-87fc-e58fb8be3ccf","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1568601a-fd0b-85ce-38ea-2b87f465d3f9","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"fc728983-74a2-a2e3-e66e-2517f2a078b9","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"d7f28303-f3cf-44a0-1394-f429b717ce9f","type":"Text","parameters":{"text":"Donated","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"74b868a8-0b10-2ed8-637b-1fb0cd54a540","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9348e1d9-8744-ed95-96e2-cfc5d7877e41","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"0c9e3d5f-cb70-1dd5-130b-710dfa9e329b","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"35145e61-cd17-d27b-9706-fdd5f98e470a","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":26,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"15a1765e-47e7-3b94-dfca-188c734be59b","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"431108de-976e-e8cb-e81d-7c0e67348e90","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/owl.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"93c044d6-dfa0-0b9b-acb9-89f0847f2976","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":40,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cb40389d-6e7f-713a-1a34-646934df34d6","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"bec7da2e-b1ce-d6b7-5607-24ab9526bae4","type":"Text","parameters":{"text":"HRA Points","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"44529d77-6156-8258-6295-96dbf619b442","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"575cb9d8-dae2-3ef1-5a74-7b90547f35de","type":"Text","parameters":{"text":"Price","minWidth":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxHeight":{"value":50,"unit":"%"},"textAlignX":"center","marginTop":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"636dff39-085f-5bfd-df3a-2c5358673c2f","type":"Text","parameters":{"text":"HRA Points","minWidth":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxHeight":{"value":50,"unit":"%"},"alignX":"center","marginTop":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"c9b28bcb-e7b5-e4ee-d727-6067ae92fa9f","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18}],"children":[]},{"id":"9e368a0d-a67b-654b-7b2e-b101fbf1ffa8","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"a52d374d-d65c-72f2-b53e-17e1db402c03","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst hra = Inputs.HRA || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.HRA = hra;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.HRA = result.hra || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-HRA","displayName":"HRA","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-HRA","displayName":"HRA","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"2b647776-8266-fb54-a0b9-5739856ee395","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst hra = Inputs.HRA || ''; // Added hra\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.hra !== selection.hra ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.HRA = hra; // Added hra\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, hra, time, months }; // Added hra, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-HRA","displayName":"HRA","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":12},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":13},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":15},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-HRA","displayName":"HRA","plug":"output","type":"*","group":"Outputs","index":24},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":25},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":26}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"7d5a091d-64a4-212a-bbc3-33cc267913c7","type":"JavaScriptFunction","label":"Play Audio File","x":466,"y":595,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["e5cbcd36-a923-645b-dcdd-237572691c6a"]}},{"name":"/Collection Pages/Fossils/Fossil Logic/Options","id":"3ff7f41a-a6d0-ba70-64a7-6bccf210942b","graph":{"connections":[{"fromId":"cef9425b-7d84-f4c6-b6cb-735ae758153f","fromProperty":"id","toId":"80e8e644-514c-af64-095e-5829262ba5ef","toProperty":"in-ID"},{"fromId":"cef9425b-7d84-f4c6-b6cb-735ae758153f","fromProperty":"prop-Label","toId":"80e8e644-514c-af64-095e-5829262ba5ef","toProperty":"in-Label"},{"fromId":"cef9425b-7d84-f4c6-b6cb-735ae758153f","fromProperty":"prop-Checked","toId":"80e8e644-514c-af64-095e-5829262ba5ef","toProperty":"in-Checked"},{"fromId":"80e8e644-514c-af64-095e-5829262ba5ef","fromProperty":"out-ID","toId":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","toProperty":"in-ID"},{"fromId":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","fromProperty":"out-ID","toId":"9b830b36-3062-d7ef-e2e3-8ee6b2ef697a","toProperty":"modelId"},{"fromId":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","fromProperty":"out-Checked","toId":"9b830b36-3062-d7ef-e2e3-8ee6b2ef697a","toProperty":"prop-Checked"},{"fromId":"80e8e644-514c-af64-095e-5829262ba5ef","fromProperty":"out-Label","toId":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","toProperty":"in-Label"},{"fromId":"cef9425b-7d84-f4c6-b6cb-735ae758153f","fromProperty":"prop-Icon","toId":"80e8e644-514c-af64-095e-5829262ba5ef","toProperty":"in-Icon"},{"fromId":"80e8e644-514c-af64-095e-5829262ba5ef","fromProperty":"out-Icon","toId":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","toProperty":"in-Icon"},{"fromId":"9b830b36-3062-d7ef-e2e3-8ee6b2ef697a","fromProperty":"stored","toId":"d7f616d9-59bc-0fc1-b51a-760bfd987732","toProperty":"Selection Changed"},{"fromId":"a2c36107-711c-cb50-d61f-6b5b7628f152","fromProperty":"onChange","toId":"9b830b36-3062-d7ef-e2e3-8ee6b2ef697a","toProperty":"store"},{"fromId":"a2c36107-711c-cb50-d61f-6b5b7628f152","fromProperty":"onChange","toId":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","toProperty":"in-Changed"},{"fromId":"a2c36107-711c-cb50-d61f-6b5b7628f152","fromProperty":"checked","toId":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","toProperty":"in-Checked"},{"fromId":"80e8e644-514c-af64-095e-5829262ba5ef","fromProperty":"out-Checked","toId":"a2c36107-711c-cb50-d61f-6b5b7628f152","toProperty":"checked"},{"fromId":"80e8e644-514c-af64-095e-5829262ba5ef","fromProperty":"out-Label","toId":"a2c36107-711c-cb50-d61f-6b5b7628f152","toProperty":"label"}],"roots":[{"id":"bb7af4ea-a348-d01d-733f-80e2609eeb3a","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"a2c36107-711c-cb50-d61f-6b5b7628f152","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"cef9425b-7d84-f4c6-b6cb-735ae758153f","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"9b830b36-3062-d7ef-e2e3-8ee6b2ef697a","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"80e8e644-514c-af64-095e-5829262ba5ef","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"08cba5b7-751e-1542-b2e9-8e94fe539ffc","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"d7f616d9-59bc-0fc1-b51a-760bfd987732","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["bb7af4ea-a348-d01d-733f-80e2609eeb3a"]}},{"name":"/Collection Pages/Fossils/fossil-splash","id":"cdcdfe2b-5663-7e69-016b-a7b04fa0b2df","graph":{"connections":[{"fromId":"f6920abf-0ab4-e89a-ecbe-ebd1300ca940","fromProperty":"out-Success","toId":"a82347cc-46e4-17f0-9861-0214f4637a01","toProperty":"play"}],"roots":[{"id":"3e3a26cc-8b07-7e4a-6831-5fc769e3a775","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"5825ad33-9a62-5e08-4d96-6a71aa41094f","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"8d2e84ec-000a-e311-4c91-47c40d493c49","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #3f4089; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/fossil.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c8f3ea25-14e0-cedd-743f-f86dfc86e2ab","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a82347cc-46e4-17f0-9861-0214f4637a01","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"f6920abf-0ab4-e89a-ecbe-ebd1300ca940","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["3e3a26cc-8b07-7e4a-6831-5fc769e3a775"]}},{"name":"/Collection Pages/Fossils/Fossils","id":"7af7944b-856c-cc2d-d1c3-fde42e985946","graph":{"connections":[{"fromId":"2d89c240-e72f-cac4-fd0f-31cb851afd19","fromProperty":"items","toId":"3f2b681a-708a-fff4-843b-b5bc6a6b9e8a","toProperty":"items"},{"fromId":"de37139c-2986-8499-943b-93f9c40f402b","fromProperty":"out-Success","toId":"3f2b681a-708a-fff4-843b-b5bc6a6b9e8a","toProperty":"refresh"},{"fromId":"eee06975-af7c-cfdd-662d-f315eca4f1df","fromProperty":"out-CountText","toId":"7f3e1ea4-7e05-08b2-b812-bedd5cd6fb72","toProperty":"text"}],"roots":[{"id":"8136fe21-44a4-416e-66f5-3ae39307902d","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Fossils","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"fossils","index":32}],"children":[{"id":"3412a57c-6be5-4685-651f-3edfb7938d8e","type":"/Collection Pages/Fossils/fossil-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"bdd3ae40-8e79-be5f-7ad9-544201f1a30f","type":"module.inlineHtml","label":"Fossil Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fossil.png'),\r\n    url('/images/background/fossil.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"d421df40-4d20-cc4c-ed71-57331406aea0","type":"Group","label":"Fossil Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"7f3e1ea4-7e05-08b2-b812-bedd5cd6fb72","type":"Text","label":"","parameters":{"text":"Fossil Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#a39dc5"},"ports":[],"dynamicports":[],"children":[]},{"id":"4868036d-3a26-b860-5012-1c6f14bd711b","type":"Group","label":"Fossils","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#a39dc5","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e9ad3024-fa54-22d0-cc12-a4b74b3621c9","type":"Group","label":"Fossil Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4d3300ee-775e-6d46-6334-6cecaf4b300a","type":"Image","label":"Fish","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/fossil.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"3e2956c2-e5d0-36ef-9495-dc516b7065f7","type":"Text","label":"","parameters":{"text":"Fossils","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3f2b681a-708a-fff4-843b-b5bc6a6b9e8a","type":"For Each","parameters":{"template":"/Collection Pages/Fossils/Fossil Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"2983e8e5-67c7-2b7a-39e6-22d2b06d3b33","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"2d89c240-e72f-cac4-fd0f-31cb851afd19","type":"Collection2","label":"Fossil Array","x":-259,"y":454,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"fossil-0001\",\r\n    \"Label\": \"Amber\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Amber_PG_Model.png\",\r\n    \"Price\": \"1200\",\r\n    \"HRA\": \"300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0002\",\r\n    \"Label\": \"Ammonite\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Ammonite_PG_Model.png\",\r\n    \"Price\": \"1100\",\r\n    \"HRA\": \"300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0003\",\r\n    \"Label\": \"Apato skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Apato_Skull_PG_Model.png\",\r\n    \"Price\": \"5000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0004\",\r\n    \"Label\": \"Apato tail\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Apato_Tail_PG_Model.png\",\r\n    \"Price\": \"4000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0005\",\r\n    \"Label\": \"Apato torso\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Apato_Torso_PG_Model.png\",\r\n    \"Price\": \"4500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0006\",\r\n    \"Label\": \"Dinosaur egg\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Dinosaur_Egg_PG_Model.png\",\r\n    \"Price\": \"1400\",\r\n    \"HRA\": \"300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0007\",\r\n    \"Label\": \"Dinosaur track\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Dinosaur_Track_PG_Model.png\",\r\n    \"Price\": \"1000\",\r\n    \"HRA\": \"300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0008\",\r\n    \"Label\": \"Mammoth skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Mammoth_Skull_PG_Model.png\",\r\n    \"Price\": \"3000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0009\",\r\n    \"Label\": \"Mammoth torso\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Mammoth_Torso_PG_Model.png\",\r\n    \"Price\": \"2500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0010\",\r\n    \"Label\": \"Plesio neck\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Plesio_Neck_PG_Model.png\",\r\n    \"Price\": \"4500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0011\",\r\n    \"Label\": \"Plesio skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Plesio_Skull_PG_Model.png\",\r\n    \"Price\": \"4000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0012\",\r\n    \"Label\": \"Plesio torso\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Plesio_Torso_PG_Model.png\",\r\n    \"Price\": \"4500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0013\",\r\n    \"Label\": \"Ptera left wing\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Ptera_Left_Wing_PG_Model.png\",\r\n    \"Price\": \"4500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0014\",\r\n    \"Label\": \"Ptera right wing\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Ptera_Right_Wing_PG_Model.png\",\r\n    \"Price\": \"4500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0015\",\r\n    \"Label\": \"Ptera skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Ptera_Skull_PG_Model.png\",\r\n    \"Price\": \"4000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0016\",\r\n    \"Label\": \"Stego skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Stego_Skull_PG_Model.png\",\r\n    \"Price\": \"5000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0017\",\r\n    \"Label\": \"Stego tail\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Stego_Tail_PG_Model.png\",\r\n    \"Price\": \"4000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0018\",\r\n    \"Label\": \"Stego torso\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Stego_Torso_PG_Model.png\",\r\n    \"Price\": \"4500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0019\",\r\n    \"Label\": \"T-rex skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-T-Rex_Skull_PG_Model.png\",\r\n    \"Price\": \"6000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0020\",\r\n    \"Label\": \"T-rex tail\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-T-Rex_Tail_PG_Model.png\",\r\n    \"Price\": \"5000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0021\",\r\n    \"Label\": \"T-rex torso\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-T-Rex_Torso_PG_Model.png\",\r\n    \"Price\": \"5500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0022\",\r\n    \"Label\": \"Tricera skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Tricera_Skull_PG_Model.png\",\r\n    \"Price\": \"5500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0023\",\r\n    \"Label\": \"Tricera tail\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Tricera_Tail_PG_Model.png\",\r\n    \"Price\": \"4500\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0024\",\r\n    \"Label\": \"Tricera torso\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Tricera_Torso_PG_Model.png\",\r\n    \"Price\": \"5000\",\r\n    \"HRA\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fossil-0025\",\r\n    \"Label\": \"Trilobite\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fossils/64px-Trilobite_PG_Model.png\",\r\n    \"Price\": \"1300\",\r\n    \"HRA\": \"300\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"de37139c-2986-8499-943b-93f9c40f402b","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":317,"y":428,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"eee06975-af7c-cfdd-662d-f315eca4f1df","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":40,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('fossil-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fossil Progress: ${count} / 25`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"1712e737-f682-f4b7-9a2e-d0154eb71642","type":"JavaScriptFunction","label":"Play Audio File","x":-282,"y":-131,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["8136fe21-44a4-416e-66f5-3ae39307902d"]}},{"name":"/Collection Pages/Fruit/Fruit","id":"01a110a2-ba92-b0e6-5cbf-ccc3e72252ab","graph":{"connections":[{"fromId":"f597891f-a0f6-ca52-663d-8e17efcea48b","fromProperty":"items","toId":"fb8b67a2-2dd1-0c1a-fc7c-f802809bcf33","toProperty":"items"},{"fromId":"18ea6a3f-664c-3805-3725-2fd613d90dd5","fromProperty":"out-Success","toId":"fb8b67a2-2dd1-0c1a-fc7c-f802809bcf33","toProperty":"refresh"},{"fromId":"c31b4f29-035e-6387-f380-9d583845786b","fromProperty":"out-CountText","toId":"41096f28-725d-cd5b-e27e-5e7fc9269967","toProperty":"text"}],"roots":[{"id":"777a5d8c-7e98-301f-eef1-a58f5df5940e","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Fruit","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"fruit","index":32}],"children":[{"id":"ebbb3b42-7d40-15bd-4761-71da8e1c3fcd","type":"module.inlineHtml","label":"Fruit Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fruit.png'),\r\n    url('/images/background/fruit.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"3bc315d2-3b31-6f06-0791-26533e30188a","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"41096f28-725d-cd5b-e27e-5e7fc9269967","type":"Text","label":"","parameters":{"text":"Fruit Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#ff645e"},"ports":[],"dynamicports":[],"children":[]},{"id":"c328bc82-3d09-fd1f-3f5f-ab5bdd710d53","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#ff645e","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6c7eeac2-0c62-37aa-b60e-69e0b799e2e4","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"18033123-236d-de97-a51c-091413b210da","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/apple.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"8ac8b121-9795-dbd0-e55b-34bd922c1dcd","type":"Text","label":"","parameters":{"text":"Fruit","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e052b602-7561-9145-78aa-856a834310e3","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ba970e75-acf4-0118-3aa7-590e338b662a","type":"Text","label":"","parameters":{"text":"Non-native fruits can be acquired as gifts from villagers or as rewards from balloons, with a 20% chance of receiving them.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"fb8b67a2-2dd1-0c1a-fc7c-f802809bcf33","type":"For Each","parameters":{"template":"/Collection Pages/Fruit/Fruit Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"8611ea4c-a706-6776-b9c3-2fbec7779d49","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"f597891f-a0f6-ca52-663d-8e17efcea48b","type":"Collection2","label":"Fruit Array","x":-259,"y":454,"parameters":{"items":"[\r\n{\r\n    \"id\": \"fruit-0001\",\r\n    \"Label\": \"Apple\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fruit/Apple.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fruit-0002\",\r\n    \"Label\": \"Cherry\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fruit/Cherry.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fruit-0003\",\r\n    \"Label\": \"Coconut\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fruit/Coconut.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fruit-0004\",\r\n    \"Label\": \"Orange\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fruit/Orange.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fruit-0005\",\r\n    \"Label\": \"Peach\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fruit/Peach.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"fruit-0006\",\r\n    \"Label\": \"Pear\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/fruit/Pear.png\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"18ea6a3f-664c-3805-3725-2fd613d90dd5","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":317,"y":428,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"c31b4f29-035e-6387-f380-9d583845786b","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-239,"y":56,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('fruit-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Fruit Progress: ${count} / 6`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["777a5d8c-7e98-301f-eef1-a58f5df5940e"]}},{"name":"/Collection Pages/Fruit/Fruit Logic","id":"eaf75cfb-ef94-4c09-9e75-f45add723483","graph":{"connections":[{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-ID","toId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","toProperty":"in-ID"},{"fromId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","fromProperty":"out-ID","toId":"bf6fe722-671c-8303-0d6c-6fc4af12150c","toProperty":"modelId"},{"fromId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","fromProperty":"out-Checked","toId":"bf6fe722-671c-8303-0d6c-6fc4af12150c","toProperty":"prop-Checked"},{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-Label","toId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","toProperty":"in-Label"},{"fromId":"65040709-cdc5-19ce-ce14-8e2828ce6846","fromProperty":"id","toId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","toProperty":"in-ID"},{"fromId":"65040709-cdc5-19ce-ce14-8e2828ce6846","fromProperty":"prop-Label","toId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","toProperty":"in-Label"},{"fromId":"65040709-cdc5-19ce-ce14-8e2828ce6846","fromProperty":"prop-Image","toId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","toProperty":"in-Icon"},{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-Label","toId":"2cec4798-68c1-3d41-22ca-a9e0770733ab","toProperty":"text"},{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-Icon","toId":"49d568e5-9cc6-a979-ea9b-1ad83c7c8745","toProperty":"src"},{"fromId":"65040709-cdc5-19ce-ce14-8e2828ce6846","fromProperty":"prop-Checked","toId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","toProperty":"in-Checked"},{"fromId":"65040709-cdc5-19ce-ce14-8e2828ce6846","fromProperty":"prop-Price","toId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","toProperty":"in-Price"},{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-Price","toId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","toProperty":"in-Price"},{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-Icon","toId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","toProperty":"in-Icon"},{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-Checked","toId":"23ab090e-b467-4e32-3dae-6f809832f5df","toProperty":"checked"},{"fromId":"23ab090e-b467-4e32-3dae-6f809832f5df","fromProperty":"checked","toId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","toProperty":"in-Checked"},{"fromId":"23ab090e-b467-4e32-3dae-6f809832f5df","fromProperty":"onChange","toId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","toProperty":"in-Changed"},{"fromId":"23ab090e-b467-4e32-3dae-6f809832f5df","fromProperty":"onChange","toId":"bf6fe722-671c-8303-0d6c-6fc4af12150c","toProperty":"store"},{"fromId":"65040709-cdc5-19ce-ce14-8e2828ce6846","fromProperty":"prop-Obtained","toId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","toProperty":"in-Obtained"},{"fromId":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","fromProperty":"out-Obtained","toId":"42991075-edcf-65d2-fe4b-87b85d08f8d4","toProperty":"in-Obtained"}],"roots":[{"id":"9efad50f-70ad-4a03-894f-334da0df805f","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6b83f3c5-1929-ab4a-f964-40ade77dc13f","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"301cf5d2-8a00-2a37-f56c-3049245da4ef","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"d37136d4-376b-5f2d-54bb-7c47619ea307","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f7efe7a2-677b-4518-36c6-ba4f8ecda6e4","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b15f5f0f-844e-a4a2-3f48-3144892fba0b","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"447aa729-51e4-5f87-6a02-0595a210beea","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"49d568e5-9cc6-a979-ea9b-1ad83c7c8745","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"2cec4798-68c1-3d41-22ca-a9e0770733ab","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"b51d5c3a-111d-c34c-3f9c-d442b5e64c04","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"23ab090e-b467-4e32-3dae-6f809832f5df","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"65040709-cdc5-19ce-ce14-8e2828ce6846","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"bf6fe722-671c-8303-0d6c-6fc4af12150c","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"ba328fea-2bb7-3c1f-c8f9-82488461db6c","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"42991075-edcf-65d2-fe4b-87b85d08f8d4","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["9efad50f-70ad-4a03-894f-334da0df805f"]}},{"name":"/Collection Pages/Fruit/Fruit Logic/Options","id":"2dbab8e9-6be2-f694-1568-0dc227da58a0","graph":{"connections":[{"fromId":"28783a73-c64d-af8b-f5d2-6ac844157699","fromProperty":"id","toId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","toProperty":"in-ID"},{"fromId":"28783a73-c64d-af8b-f5d2-6ac844157699","fromProperty":"prop-Label","toId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","toProperty":"in-Label"},{"fromId":"28783a73-c64d-af8b-f5d2-6ac844157699","fromProperty":"prop-Checked","toId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","toProperty":"in-Checked"},{"fromId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","fromProperty":"out-ID","toId":"46070232-5719-aa70-2e28-fc58a33c3e97","toProperty":"in-ID"},{"fromId":"46070232-5719-aa70-2e28-fc58a33c3e97","fromProperty":"out-ID","toId":"65793f62-9844-9815-2ccf-2e875ab2b8dd","toProperty":"modelId"},{"fromId":"46070232-5719-aa70-2e28-fc58a33c3e97","fromProperty":"out-Checked","toId":"65793f62-9844-9815-2ccf-2e875ab2b8dd","toProperty":"prop-Checked"},{"fromId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","fromProperty":"out-Label","toId":"46070232-5719-aa70-2e28-fc58a33c3e97","toProperty":"in-Label"},{"fromId":"28783a73-c64d-af8b-f5d2-6ac844157699","fromProperty":"prop-Icon","toId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","toProperty":"in-Icon"},{"fromId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","fromProperty":"out-Icon","toId":"46070232-5719-aa70-2e28-fc58a33c3e97","toProperty":"in-Icon"},{"fromId":"65793f62-9844-9815-2ccf-2e875ab2b8dd","fromProperty":"stored","toId":"499d0ab2-ece5-4303-e08c-22f5a0c274b7","toProperty":"Selection Changed"},{"fromId":"305bd552-6cf2-5396-7d88-8e55b77fccfe","fromProperty":"onChange","toId":"65793f62-9844-9815-2ccf-2e875ab2b8dd","toProperty":"store"},{"fromId":"305bd552-6cf2-5396-7d88-8e55b77fccfe","fromProperty":"onChange","toId":"46070232-5719-aa70-2e28-fc58a33c3e97","toProperty":"in-Changed"},{"fromId":"305bd552-6cf2-5396-7d88-8e55b77fccfe","fromProperty":"checked","toId":"46070232-5719-aa70-2e28-fc58a33c3e97","toProperty":"in-Checked"},{"fromId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","fromProperty":"out-Checked","toId":"305bd552-6cf2-5396-7d88-8e55b77fccfe","toProperty":"checked"},{"fromId":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","fromProperty":"out-Label","toId":"305bd552-6cf2-5396-7d88-8e55b77fccfe","toProperty":"label"}],"roots":[{"id":"82c8fd70-51b7-436a-c23f-2ae78b3e0f53","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"305bd552-6cf2-5396-7d88-8e55b77fccfe","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"28783a73-c64d-af8b-f5d2-6ac844157699","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"65793f62-9844-9815-2ccf-2e875ab2b8dd","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"a31e2209-ff83-d5ef-710c-6e51524bc0a5","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"46070232-5719-aa70-2e28-fc58a33c3e97","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"499d0ab2-ece5-4303-e08c-22f5a0c274b7","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["82c8fd70-51b7-436a-c23f-2ae78b3e0f53"]}},{"name":"/Collection Pages/Furniture/Animal Island/Animal Island","id":"97cb497c-7dd5-d986-735d-11bb34314624","graph":{"connections":[{"fromId":"fde7650b-7e88-adf5-ee73-172a4778af9d","fromProperty":"items","toId":"439256b2-a68f-b65e-bee3-3a65e0f43e0c","toProperty":"items"},{"fromId":"6f54e25e-a4c3-0d24-b729-51e3bb462a3e","fromProperty":"out-Success","toId":"439256b2-a68f-b65e-bee3-3a65e0f43e0c","toProperty":"refresh"},{"fromId":"cbbd2d36-62d8-78b2-2e7e-3a23cfac5d42","fromProperty":"onClick","toId":"24a4dfbf-4b6b-f435-4df0-1c1876d87e15","toProperty":"do"},{"fromId":"1436aba8-f959-7429-7dc9-d15682661aa2","fromProperty":"out-CountText","toId":"7dfafb7e-86db-8ace-90e8-e86bfa192ea1","toProperty":"text"}],"roots":[{"id":"281966e4-ee73-ea7c-fff0-6605ee014e9c","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Animal Island","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"animal-island","index":32}],"children":[{"id":"82b51f8b-f3c9-f704-093c-2f4af2aff6dc","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"7a0a4ab8-1ca8-cbd5-99e9-903d2e0aa59d","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7dfafb7e-86db-8ace-90e8-e86bfa192ea1","type":"Text","label":"","parameters":{"text":"Animal Island Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"5bdfefae-778f-fe41-f851-fbfe14738be0","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d0f551ee-adc2-1d33-84da-6a1844e12403","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3c896d04-10a1-53b8-b7e4-47ae9ab82c52","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/animal_island.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"0fe42b91-59d0-ddbd-1a33-5e015f787a78","type":"Text","label":"","parameters":{"text":"Animal Island","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f9df1a6c-0c4e-b7e4-10e9-c6e03b06059e","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4b1d21fd-2050-d274-45f1-2368e1f8774f","type":"Text","label":"","parameters":{"text":"To earn items in this collection, you must play  the Animal Island minigame on a Game Boy Advance.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"1c939b31-1494-2caa-4af5-2a631c18687f","type":"Text","label":"","parameters":{"text":"Animal Island requires a Game Boy Advance to be connected to your Gamecube.  If you are playing on Dolphin, you must enable mGBA.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"cbbd2d36-62d8-78b2-2e7e-3a23cfac5d42","type":"net.noodl.controls.button","parameters":{"marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"paddingTop":{"value":8,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"label":"How to enable mGBA on Dolphin","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"alignX":"center","backgroundColor":"#6a61a0"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"439256b2-a68f-b65e-bee3-3a65e0f43e0c","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Animal Island/Animal Island Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"ce027bbb-c7c4-7bba-612c-b2539d47ecce","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"fde7650b-7e88-adf5-ee73-172a4778af9d","type":"Collection2","label":"Animal Island","x":-261,"y":715,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"animalisland-0010\",\r\n    \"Label\": \"Baseball\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Baseball_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0001\",\r\n    \"Label\": \"Beach chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Beach_Chair_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0002\",\r\n    \"Label\": \"Beach table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Beach_Table_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0003\",\r\n    \"Label\": \"Diver Dan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Diver_Dan_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0004\",\r\n    \"Label\": \"Life ring\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Life_Ring_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0005\",\r\n    \"Label\": \"Snowcone machine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Snowcone_Machine_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0006\",\r\n    \"Label\": \"Surfboard\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Surfboard_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0007\",\r\n    \"Label\": \"Treasure chest\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Treasure_Chest_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0008\",\r\n    \"Label\": \"Ukulele\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Ukulele_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0011\",\r\n    \"Label\": \"Wario's Woods\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Wario's_Woods_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"animalisland-0009\",\r\n    \"Label\": \"Wave breaker\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/animal_island/64px-Wave_Breaker_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"6f54e25e-a4c3-0d24-b729-51e3bb462a3e","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"24a4dfbf-4b6b-f435-4df0-1c1876d87e15","type":"net.noodl.externallink","x":323,"y":597,"parameters":{"link":"https://wiki.dolphin-emu.org/index.php?title=Integrated_GBA"},"ports":[],"dynamicports":[],"children":[]},{"id":"1436aba8-f959-7429-7dc9-d15682661aa2","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":40,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('animalisland-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Animal Island Progress: ${count} / 11`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["281966e4-ee73-ea7c-fff0-6605ee014e9c"]}},{"name":"/Collection Pages/Furniture/Animal Island/Animal Island Logic","id":"9e8d84dd-4344-89b8-910c-14c4c739738c","graph":{"connections":[{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-ID","toId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","toProperty":"in-ID"},{"fromId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","fromProperty":"out-ID","toId":"df010998-c879-3031-f77a-d3c35510d567","toProperty":"modelId"},{"fromId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","fromProperty":"out-Checked","toId":"df010998-c879-3031-f77a-d3c35510d567","toProperty":"prop-Checked"},{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-Label","toId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","toProperty":"in-Label"},{"fromId":"9af11923-d702-84ed-ebb1-29d873b114aa","fromProperty":"id","toId":"ce005264-150c-1994-ca7e-d7d51ade59a8","toProperty":"in-ID"},{"fromId":"9af11923-d702-84ed-ebb1-29d873b114aa","fromProperty":"prop-Label","toId":"ce005264-150c-1994-ca7e-d7d51ade59a8","toProperty":"in-Label"},{"fromId":"9af11923-d702-84ed-ebb1-29d873b114aa","fromProperty":"prop-Image","toId":"ce005264-150c-1994-ca7e-d7d51ade59a8","toProperty":"in-Icon"},{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-Label","toId":"36f8db58-abde-6604-0aac-6c2ae87a1565","toProperty":"text"},{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-Icon","toId":"4f528212-461e-c46c-83db-86c00bdba7b1","toProperty":"src"},{"fromId":"9af11923-d702-84ed-ebb1-29d873b114aa","fromProperty":"prop-Checked","toId":"ce005264-150c-1994-ca7e-d7d51ade59a8","toProperty":"in-Checked"},{"fromId":"9af11923-d702-84ed-ebb1-29d873b114aa","fromProperty":"prop-Price","toId":"ce005264-150c-1994-ca7e-d7d51ade59a8","toProperty":"in-Price"},{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-Price","toId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","toProperty":"in-Price"},{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-Icon","toId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","toProperty":"in-Icon"},{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-Checked","toId":"e7241b79-914c-3d55-27ae-51c636f914f8","toProperty":"checked"},{"fromId":"e7241b79-914c-3d55-27ae-51c636f914f8","fromProperty":"checked","toId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","toProperty":"in-Checked"},{"fromId":"e7241b79-914c-3d55-27ae-51c636f914f8","fromProperty":"onChange","toId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","toProperty":"in-Changed"},{"fromId":"e7241b79-914c-3d55-27ae-51c636f914f8","fromProperty":"onChange","toId":"df010998-c879-3031-f77a-d3c35510d567","toProperty":"store"},{"fromId":"9af11923-d702-84ed-ebb1-29d873b114aa","fromProperty":"prop-Obtained","toId":"ce005264-150c-1994-ca7e-d7d51ade59a8","toProperty":"in-Obtained"},{"fromId":"ce005264-150c-1994-ca7e-d7d51ade59a8","fromProperty":"out-Obtained","toId":"48660eb9-62cc-2588-0fbd-34644f82e5fe","toProperty":"in-Obtained"},{"fromId":"e7241b79-914c-3d55-27ae-51c636f914f8","fromProperty":"onChange","toId":"d642d377-3cf6-e0c9-da5e-f76e4a768536","toProperty":"run"}],"roots":[{"id":"697badd5-728a-03b9-101c-8b0f4ef73816","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"93e2bbc8-2035-8b2c-ab2d-44827b9c126b","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d25ddf41-7b33-62b7-8264-98d58139e517","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"cf3e6339-927e-0c03-54b6-fb9a68ebb8c2","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"cad62521-4048-84b4-d36a-b9adc345a85a","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"42e7fed2-3e6d-08a0-8055-02f7affc43da","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e0d575c7-1a45-4108-a12d-2bcc7f5560dc","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"4f528212-461e-c46c-83db-86c00bdba7b1","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"36f8db58-abde-6604-0aac-6c2ae87a1565","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"492c38f0-aecb-6c7d-2030-6ebf5b408205","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e7241b79-914c-3d55-27ae-51c636f914f8","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"9af11923-d702-84ed-ebb1-29d873b114aa","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"df010998-c879-3031-f77a-d3c35510d567","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"ce005264-150c-1994-ca7e-d7d51ade59a8","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"48660eb9-62cc-2588-0fbd-34644f82e5fe","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"d642d377-3cf6-e0c9-da5e-f76e4a768536","type":"JavaScriptFunction","label":"Play Audio File","x":403,"y":643,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["697badd5-728a-03b9-101c-8b0f4ef73816"]}},{"name":"/Collection Pages/Furniture/Animal Island/Animal Island Logic/Options","id":"662d4442-aa18-ee7e-707e-4f256dfee5cf","graph":{"connections":[{"fromId":"7e6101dc-116e-eadc-0e13-43850da71abc","fromProperty":"id","toId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","toProperty":"in-ID"},{"fromId":"7e6101dc-116e-eadc-0e13-43850da71abc","fromProperty":"prop-Label","toId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","toProperty":"in-Label"},{"fromId":"7e6101dc-116e-eadc-0e13-43850da71abc","fromProperty":"prop-Checked","toId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","toProperty":"in-Checked"},{"fromId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","fromProperty":"out-ID","toId":"8c504d30-8d89-16e0-ead9-288a67874ba6","toProperty":"in-ID"},{"fromId":"8c504d30-8d89-16e0-ead9-288a67874ba6","fromProperty":"out-ID","toId":"a5f4e4a9-2bb6-0cb5-2865-7d8acdffb8b4","toProperty":"modelId"},{"fromId":"8c504d30-8d89-16e0-ead9-288a67874ba6","fromProperty":"out-Checked","toId":"a5f4e4a9-2bb6-0cb5-2865-7d8acdffb8b4","toProperty":"prop-Checked"},{"fromId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","fromProperty":"out-Label","toId":"8c504d30-8d89-16e0-ead9-288a67874ba6","toProperty":"in-Label"},{"fromId":"7e6101dc-116e-eadc-0e13-43850da71abc","fromProperty":"prop-Icon","toId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","toProperty":"in-Icon"},{"fromId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","fromProperty":"out-Icon","toId":"8c504d30-8d89-16e0-ead9-288a67874ba6","toProperty":"in-Icon"},{"fromId":"a5f4e4a9-2bb6-0cb5-2865-7d8acdffb8b4","fromProperty":"stored","toId":"faa4533c-ccb3-a23f-c02c-00b1b77df467","toProperty":"Selection Changed"},{"fromId":"dc549fd1-b47a-230d-7f31-7b5a9d7c099d","fromProperty":"onChange","toId":"a5f4e4a9-2bb6-0cb5-2865-7d8acdffb8b4","toProperty":"store"},{"fromId":"dc549fd1-b47a-230d-7f31-7b5a9d7c099d","fromProperty":"onChange","toId":"8c504d30-8d89-16e0-ead9-288a67874ba6","toProperty":"in-Changed"},{"fromId":"dc549fd1-b47a-230d-7f31-7b5a9d7c099d","fromProperty":"checked","toId":"8c504d30-8d89-16e0-ead9-288a67874ba6","toProperty":"in-Checked"},{"fromId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","fromProperty":"out-Checked","toId":"dc549fd1-b47a-230d-7f31-7b5a9d7c099d","toProperty":"checked"},{"fromId":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","fromProperty":"out-Label","toId":"dc549fd1-b47a-230d-7f31-7b5a9d7c099d","toProperty":"label"}],"roots":[{"id":"57f24019-8cdf-dafc-541e-200d7fadfeb9","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"dc549fd1-b47a-230d-7f31-7b5a9d7c099d","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"7e6101dc-116e-eadc-0e13-43850da71abc","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"a5f4e4a9-2bb6-0cb5-2865-7d8acdffb8b4","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"302cb7ff-945d-fcd5-bb1d-dfc3b6dc298d","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"8c504d30-8d89-16e0-ead9-288a67874ba6","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"faa4533c-ccb3-a23f-c02c-00b1b77df467","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["57f24019-8cdf-dafc-541e-200d7fadfeb9"]}},{"name":"/Collection Pages/Furniture/Furniture","id":"60e3d394-eea5-4dfe-6bb2-b977b8e5eddb","graph":{"connections":[{"fromId":"b8541602-58a7-a94a-f540-0b0a1185b30e","fromProperty":"out-CountText","toId":"23dcf7ab-a294-76cc-9392-6a67424ec792","toProperty":"text"},{"fromId":"b25eedd2-5142-b99f-2d1a-b98b1390b630","fromProperty":"out-CountText","toId":"065116fc-9cb1-b6ea-aee6-93a1584664a7","toProperty":"text"},{"fromId":"a9cb3d27-593c-29bb-7faa-ffade610b277","fromProperty":"out-CountText","toId":"d5678324-25a2-8cfa-f294-bff2970e56af","toProperty":"text"},{"fromId":"c7bf477f-52e9-5636-6dcd-4f0789fb5eaf","fromProperty":"out-CountText","toId":"13287a33-a681-8378-6bae-ed51fa975445","toProperty":"text"},{"fromId":"567b9d20-0246-9c83-7759-b546fd97ae91","fromProperty":"out-CountText","toId":"ecdcffc6-c8f1-5d7b-53f1-5c39babcb488","toProperty":"text"},{"fromId":"7b0fad03-dabd-78f5-044f-62a8427b3090","fromProperty":"out-CountText","toId":"3dc699ff-3433-77c2-0ae5-98dabda5e4b1","toProperty":"text"},{"fromId":"96f81a83-0a68-5515-9ace-fc6ca2629cb6","fromProperty":"out-CountText","toId":"432b43fb-7215-f283-fc3b-5635fcc9f5f0","toProperty":"text"},{"fromId":"68402c88-688a-b737-d439-fe6dd2bd3783","fromProperty":"out-CountText","toId":"47286c6d-fbe6-e8ed-92ef-1552645a0279","toProperty":"text"},{"fromId":"41494cba-d2c2-b304-3d5d-fd63c6d5d9ec","fromProperty":"out-CountText","toId":"faea6f77-b724-55bd-2653-a6b4992ae2b2","toProperty":"text"},{"fromId":"42f52770-230d-4381-c747-ec95a79e459a","fromProperty":"out-CountText","toId":"30410b07-2fb5-c57c-b134-e38686cfd3d9","toProperty":"text"},{"fromId":"c51f84c5-674d-04c1-f823-0c34d45ca610","fromProperty":"out-CountText","toId":"f39e1228-7071-fbc4-a5b3-7b70c5cd564c","toProperty":"text"},{"fromId":"3dd26991-3943-e428-a5c3-7cae79a8a0c7","fromProperty":"out-CountText","toId":"d9599f2b-5589-6795-d675-db669928059f","toProperty":"text"},{"fromId":"3721dfa6-3f5d-feb3-0efe-497fedecf8fc","fromProperty":"onClick","toId":"8cd504e7-40aa-5d9c-e08e-4f399c7644fa","toProperty":"navigate"},{"fromId":"a77d2f2f-842d-95dd-7bc0-0699d10b2cdd","fromProperty":"onClick","toId":"7b548e09-933f-f2f3-d287-a8ff0a555554","toProperty":"navigate"},{"fromId":"c030f78b-2c78-b4ae-f2a6-1b65d22dadac","fromProperty":"onClick","toId":"12ba0472-80b3-19dc-a813-55246ff9edd9","toProperty":"navigate"},{"fromId":"c69afe77-7570-5900-f5de-5878dd2f74a4","fromProperty":"onClick","toId":"0b143781-6b4d-0173-9112-22e1332cf65b","toProperty":"navigate"},{"fromId":"bdcf0feb-fda8-ce9f-820d-d23b13728105","fromProperty":"onClick","toId":"db832100-f1c5-abdc-cf9a-6e40a6373a0b","toProperty":"navigate"},{"fromId":"441c749d-72ca-03de-6715-757564967804","fromProperty":"onClick","toId":"394da99e-40bd-1100-0235-e92457c6a5ea","toProperty":"navigate"},{"fromId":"032a1b82-0058-f66a-b14f-0fc604d73018","fromProperty":"onClick","toId":"dc1d8b64-a534-6739-9a45-b0d983a127f8","toProperty":"navigate"},{"fromId":"c1118dc6-d979-58c4-ef33-e9a73f5ff64f","fromProperty":"onClick","toId":"5b8e4c88-620c-0b4d-9cd6-c438b5ad3061","toProperty":"navigate"},{"fromId":"9d2fe367-3e4c-ea39-3380-79833b3f0388","fromProperty":"onClick","toId":"527e5d74-3fb5-a3ee-27c6-339115b7df61","toProperty":"navigate"},{"fromId":"5f75fe52-accf-e1a0-9b71-0cd456ec456e","fromProperty":"onClick","toId":"8757068d-5d8c-efba-7b1d-95f068c224cc","toProperty":"navigate"},{"fromId":"677b16ef-9195-f9e9-a589-5b4f83bbf3a5","fromProperty":"onClick","toId":"22ef79b2-24d2-7758-327a-0db66dba457f","toProperty":"navigate"},{"fromId":"3cca3062-bb39-eb42-bf91-e53e7f14f5e8","fromProperty":"onClick","toId":"755eb73f-f7cd-1454-122f-1e34a69c4044","toProperty":"navigate"},{"fromId":"6a822f3e-ecdc-516f-e998-38b577a56643","fromProperty":"onClick","toId":"38ebe5dd-4d72-f9f5-c8d1-d6abe1f5ab58","toProperty":"navigate"},{"fromId":"70d4f729-9ada-451a-be08-51a6c214db57","fromProperty":"onClick","toId":"65034af3-00e6-6407-f78b-e0f497605617","toProperty":"navigate"},{"fromId":"5efd9723-b805-466d-7f68-2141f9347691","fromProperty":"out-CountText","toId":"86cd0af7-8070-9563-6514-42bb274e9ac3","toProperty":"text"},{"fromId":"4f9fb5f3-bacb-4919-e082-a50ba104fee2","fromProperty":"out-CountText","toId":"784109f9-2c2a-9d26-760c-b162789e059c","toProperty":"text"},{"fromId":"3721dfa6-3f5d-feb3-0efe-497fedecf8fc","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"a77d2f2f-842d-95dd-7bc0-0699d10b2cdd","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"c030f78b-2c78-b4ae-f2a6-1b65d22dadac","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"c69afe77-7570-5900-f5de-5878dd2f74a4","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"bdcf0feb-fda8-ce9f-820d-d23b13728105","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"441c749d-72ca-03de-6715-757564967804","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"032a1b82-0058-f66a-b14f-0fc604d73018","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"677b16ef-9195-f9e9-a589-5b4f83bbf3a5","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"5f75fe52-accf-e1a0-9b71-0cd456ec456e","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"9d2fe367-3e4c-ea39-3380-79833b3f0388","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"c1118dc6-d979-58c4-ef33-e9a73f5ff64f","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"3cca3062-bb39-eb42-bf91-e53e7f14f5e8","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"6a822f3e-ecdc-516f-e998-38b577a56643","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"70d4f729-9ada-451a-be08-51a6c214db57","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"},{"fromId":"cd008f7c-524d-31c3-d0ad-2499f559fce0","fromProperty":"out-CountText","toId":"8b213719-1bed-16cc-b941-7707a8a8cc4b","toProperty":"text"},{"fromId":"786cb524-8ca2-cc94-216d-1ac1ed1d101c","fromProperty":"onClick","toId":"49fdfa57-8c48-5258-6909-53a65a8c1410","toProperty":"run"}],"roots":[{"id":"d2dec293-7d9e-b2bb-0367-d9e0ce8ce410","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Furniture","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"furniture","index":32}],"children":[{"id":"36270bfa-f6f8-eaad-ad0c-af791e3b55e8","type":"/Collection Pages/Furniture/furniture-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"0c60b6f9-be7e-673a-59db-60d189dcf882","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"cd779057-64c4-5e98-abd4-4ba673776fcb","type":"Group","parameters":{"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"f72b7121-8dcc-5b04-306e-60dc9c21082f","type":"Group","label":"Collection Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"dc52d226-3657-1dbb-f62a-daf1484f7283","type":"Text","label":"Furniture Progress","parameters":{"text":"Furniture Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"7d608ef6-cd03-f425-c94c-f34db1a4428a","type":"Group","label":"Furniture","parameters":{"marginLeft":{"value":10,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1f26e205-1bbf-33f0-86dd-e691f73aac1d","type":"Group","label":"Furniture Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1abfc6ea-cfd3-2abc-53e7-6a5946a2bc45","type":"Image","label":"Furniture","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/villager.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"e9ec0880-cca5-dc8d-8721-ed211f31674a","type":"Text","parameters":{"text":"Villagers","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3721dfa6-3f5d-feb3-0efe-497fedecf8fc","type":"Group","label":"Animal Island Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d0fd5987-626f-2dbc-ff9a-55cd25c8ab5c","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/animal_island.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"d74185f8-befa-4bb3-6e81-5b1e60f7eb50","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Animal Island","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"23dcf7ab-a294-76cc-9392-6a67424ec792","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a77d2f2f-842d-95dd-7bc0-0699d10b2cdd","type":"Group","label":"Summer Camper Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f4e16439-fd51-d56e-da11-119ea6c09739","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/furniture/campers/summer/64px-Tent_Model_PG_Model.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"eb14401b-0c45-bcd9-4dae-ab02adfd9df3","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Summer Camper","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"marginRight":{"value":-88,"unit":"px"},"alignX":"left"},"ports":[],"dynamicports":[],"children":[]},{"id":"86cd0af7-8070-9563-6514-42bb274e9ac3","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c030f78b-2c78-b4ae-f2a6-1b65d22dadac","type":"Group","label":"Winter Camper Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"72e4d10e-55dd-3f10-dc6f-09a061e5ebf3","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/furniture/campers/winter/64px-Igloo_Model_PG_Model.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"b6c7a5f5-d4c7-645c-9072-9f0f69298e0b","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Igloos","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"784109f9-2c2a-9d26-760c-b162789e059c","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c69afe77-7570-5900-f5de-5878dd2f74a4","type":"Group","label":"Gulliver","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"56c4de05-e324-959f-ef59-bd651320dcf8","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/gulliver.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"53462ca6-2f26-2a74-982d-80897d86d827","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Gulliver","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"065116fc-9cb1-b6ea-aee6-93a1584664a7","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"bdcf0feb-fda8-ce9f-820d-d23b13728105","type":"Group","label":"Nook's Store","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"5607962d-5b79-5490-4f16-b95ae82428f5","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/tom_nook.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"a27cf53b-b788-c181-41f0-0536d71c0ff3","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Nook's Store","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"d5678324-25a2-8cfa-f294-bff2970e56af","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"441c749d-72ca-03de-6715-757564967804","type":"Group","label":"Redd","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"dc80509d-cee3-9bcc-728f-cf065ef409fc","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/redd.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"a66252d4-c0c8-30c3-820b-badc7ee7661f","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Redd","alignX":"left","position":"relative","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"textAlignX":"left"},"ports":[],"dynamicports":[],"children":[]},{"id":"13287a33-a681-8378-6bae-ed51fa975445","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"032a1b82-0058-f66a-b14f-0fc604d73018","type":"Group","label":"Tortimer","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"df5ac3e1-08e7-f735-dd12-c6576fe63889","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/Tortimer_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"3ecc3da5-a677-e96e-96ba-a51a6e349fc8","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Tortimer","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"ecdcffc6-c8f1-5d7b-53f1-5c39babcb488","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"375e9798-833e-288b-5ae5-9bc52c12b048","type":"Group","label":"Furniture","parameters":{"marginLeft":{"value":10,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"24d634bd-b1d9-e8cf-c52f-0c031f7a1802","type":"Group","label":"Furniture Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2a20a4c8-9e50-38eb-cae2-40c121931271","type":"Image","label":"Furniture","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/leaf.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"63c6dace-f7c8-e848-c48c-4f11dc84c280","type":"Text","parameters":{"text":"Seasonal","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"677b16ef-9195-f9e9-a589-5b4f83bbf3a5","type":"Group","label":"Thanksgiving","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"de5d5956-e551-54a4-4f66-d8de7ba7240a","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/Franklin_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"c50099b8-b548-fb42-0afc-aed944fe5d5e","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Harvest Festival","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"marginRight":{"value":-89,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"d9599f2b-5589-6795-d675-db669928059f","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"5f75fe52-accf-e1a0-9b71-0cd456ec456e","type":"Group","label":"Halloween","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a467b845-88df-3045-bece-f86c787e3ca1","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/jack.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"80a75035-ea22-6c9e-7fb9-458ea1b4b769","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Halloween","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"432b43fb-7215-f283-fc3b-5635fcc9f5f0","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"9d2fe367-3e4c-ea39-3380-79833b3f0388","type":"Group","label":"Snowman","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e61b6025-0509-c681-2b99-7ed10469a550","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"objectFit":"contain","src":"images/snowman.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"2440c381-3c89-61ac-b219-26c262a9e3fe","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Snowman","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"f39e1228-7071-fbc4-a5b3-7b70c5cd564c","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c1118dc6-d979-58c4-ef33-e9a73f5ff64f","type":"Group","label":"Christmas Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a0fcf464-8869-ccc4-2172-1fb54562ea25","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/Jingle_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"3c6136b3-9e76-f66d-a8c7-0ce734e1bfd4","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Toy Day","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"3dc699ff-3433-77c2-0ae5-98dabda5e4b1","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"6db6413f-f6aa-78a5-30eb-e4fa273f2ef6","type":"Group","label":"Furniture","parameters":{"marginLeft":{"value":10,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ab19a056-c5ec-2a0e-5934-955a1dbf9f7c","type":"Group","label":"Furniture Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e5fa81f8-50f1-412c-b3aa-a2e744a36113","type":"Image","label":"Furniture","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/leaf.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"3d443c7b-1d9a-192e-ced7-c4fccb63270b","type":"Text","parameters":{"text":"Other","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"786cb524-8ca2-cc94-216d-1ac1ed1d101c","type":"Group","label":"ALL","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"},"scrollEnabled":false,"mounted":false},"ports":[],"dynamicports":[],"children":[{"id":"543b85a6-19f9-c522-627d-d43a58af37d6","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/leaf.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"799a2d16-0b32-0b7c-10fd-e481f2d2eb79","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"All Furniture","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginRight":{"value":-70,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"8b213719-1bed-16cc-b941-7707a8a8cc4b","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0 / 601","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3cca3062-bb39-eb42-bf91-e53e7f14f5e8","type":"Group","label":"Miscellaneous","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c0a35333-4042-8bf0-2e77-f35118f90402","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/furniture/misc/64px-Piggy_Bank_PG_Model.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"2ff62b7c-031a-7b10-dbf7-564c0fe24faf","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Miscellaneous","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginRight":{"value":-70,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"47286c6d-fbe6-e8ed-92ef-1552645a0279","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6a822f3e-ecdc-516f-e998-38b577a56643","type":"Group","label":"Raffle","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9d66c7d6-62c6-ecdf-20dd-9e56c9d133c2","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/ticket.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"e0720c3e-4963-ae05-66cf-c4b0138934a5","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Raffle","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"faea6f77-b724-55bd-2653-a6b4992ae2b2","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"70d4f729-9ada-451a-be08-51a6c214db57","type":"Group","label":"Secret Codes","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"792f23b5-48e0-f39c-3bb4-e112627bd27e","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/key.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"084ff2f6-d264-42e4-fceb-86810dc02adb","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Secret Codes","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"},"marginRight":{"value":-67,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"30410b07-2fb5-c57c-b134-e38686cfd3d9","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]}]},{"id":"3d1ff2fb-dbb6-545a-68aa-c0d3ab20204b","type":"PageInputs","x":-100,"y":-50,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"b8541602-58a7-a94a-f540-0b0a1185b30e","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-239,"y":639,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"animalisland-\"\nconst animalislandKeys = keys.filter(key => key.startsWith('animalisland-'));\n\n// Count the number of animalisland keys\nconst count = animalislandKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 11`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"b25eedd2-5142-b99f-2d1a-b98b1390b630","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-203,"y":1565,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"gulliver-\"\nconst gulliverKeys = keys.filter(key => key.startsWith('gulliver-'));\n\n// Count the number of gulliver keys\nconst count = gulliverKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 20`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a9cb3d27-593c-29bb-7faa-ffade610b277","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-197,"y":1854,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"nookstore-\"\nconst nookstoreKeys = keys.filter(key => key.startsWith('nook-'));\n\n// Count the number of nookstore keys\nconst count = nookstoreKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 309`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"c7bf477f-52e9-5636-6dcd-4f0789fb5eaf","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-239,"y":2168,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"redd-\" or \"painting-\"\nconst filteredKeys = keys.filter(key => key.startsWith('redd-') || key.startsWith('painting-'));\n\n// Count the number of filtered keys\nconst count = filteredKeys.length;\n\n// Output the count in the format \"# / 71\"\nOutputs.CountText = `${count} / 71`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"567b9d20-0246-9c83-7759-b546fd97ae91","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-236.30578260400728,"y":2467.556973670022,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"tortimer-\"\nconst tortimerKeys = keys.filter(key => key.startsWith('tortimer-'));\n\n// Count the number of tortimer keys\nconst count = tortimerKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 53`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"7b0fad03-dabd-78f5-044f-62a8427b3090","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-212.0811224259994,"y":3871.4508501179944,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"christmas-\"\nconst christmasKeys = keys.filter(key => key.startsWith('christmas-'));\n\n// Count the number of christmas keys\nconst count = christmasKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4f9fb5f3-bacb-4919-e082-a50ba104fee2","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-295,"y":1246,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"igloo-\"\nconst iglooKeys = keys.filter(key => key.startsWith('igloo-'));\n\n// Count the number of igloo keys\nconst count = iglooKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 8`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5efd9723-b805-466d-7f68-2141f9347691","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-274,"y":946,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"summercamper-\"\nconst summercamperKeys = keys.filter(key => key.startsWith('summercamper-'));\n\n// Count the number of summercamper keys\nconst count = summercamperKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"96f81a83-0a68-5515-9ace-fc6ca2629cb6","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-250.44149656799925,"y":3278.9127585260862,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"halloween-\"\nconst halloweenKeys = keys.filter(key => key.startsWith('halloween-'));\n\n// Count the number of halloween keys\nconst count = halloweenKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"68402c88-688a-b737-d439-fe6dd2bd3783","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-336,"y":4620.018707099991,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"misc-\"\nconst miscKeys = keys.filter(key => key.startsWith('misc-'));\n\n// Count the number of misc keys\nconst count = miscKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 25`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"41494cba-d2c2-b304-3d5d-fd63c6d5d9ec","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-335,"y":4873,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"raffle-\"\nconst raffleKeys = keys.filter(key => key.startsWith('raffle-'));\n\n// Count the number of raffle keys\nconst count = raffleKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 36`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"42f52770-230d-4381-c747-ec95a79e459a","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-318,"y":5312,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"secretcode-\"\nconst secretcodeKeys = keys.filter(key => key.startsWith('secret-'));\n\n// Count the number of secretcode keys\nconst count = secretcodeKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 18`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"c51f84c5-674d-04c1-f823-0c34d45ca610","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-218,"y":3580,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"snowman-\"\nconst snowmanKeys = keys.filter(key => key.startsWith('snowman-'));\n\n// Count the number of snowman keys\nconst count = snowmanKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"3dd26991-3943-e428-a5c3-7cae79a8a0c7","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-240.55850343200075,"y":2987.987761904171,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"thanksgiving-\"\nconst thanksgivingKeys = keys.filter(key => key.startsWith('thanksgiving-'));\n\n// Count the number of thanksgiving keys\nconst count = thanksgivingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"8cd504e7-40aa-5d9c-e08e-4f399c7644fa","type":"RouterNavigate","x":300,"y":475,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Animal Island/Animal Island"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"7b548e09-933f-f2f3-d287-a8ff0a555554","type":"RouterNavigate","x":371,"y":806,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Summer Camper/Summer Camper"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"12ba0472-80b3-19dc-a813-55246ff9edd9","type":"RouterNavigate","x":395,"y":1113,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Igloo/Igloo"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"0b143781-6b4d-0173-9112-22e1332cf65b","type":"RouterNavigate","x":309,"y":1402,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Gulliver/Gulliver"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"db832100-f1c5-abdc-cf9a-6e40a6373a0b","type":"RouterNavigate","x":317,"y":1692,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Nook Store/Nook Store"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"394da99e-40bd-1100-0235-e92457c6a5ea","type":"RouterNavigate","x":306,"y":1995,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Redd/Redd"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"dc1d8b64-a534-6739-9a45-b0d983a127f8","type":"RouterNavigate","x":309,"y":2284,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Tortimer/Tortimer"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"5b8e4c88-620c-0b4d-9cd6-c438b5ad3061","type":"RouterNavigate","x":296.48673455599646,"y":3717.9280561458722,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Toy Day/Toy Day"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"527e5d74-3fb5-a3ee-27c6-339115b7df61","type":"RouterNavigate","x":290.80187070999887,"y":3395.9095240240053,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Snowman/Snowman"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"8757068d-5d8c-efba-7b1d-95f068c224cc","type":"RouterNavigate","x":303.12636041399674,"y":3123.192010242087,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Halloween/Halloween"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"22ef79b2-24d2-7758-327a-0db66dba457f","type":"RouterNavigate","x":289.6489794079953,"y":2817.42925847217,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Harvest/Harvest"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"755eb73f-f7cd-1454-122f-1e34a69c4044","type":"RouterNavigate","x":327,"y":4671,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Miscellaneous/Miscellaneous"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"38ebe5dd-4d72-f9f5-c8d1-d6abe1f5ab58","type":"RouterNavigate","x":328,"y":4834,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Raffle/Raffle"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"65034af3-00e6-6407-f78b-e0f497605617","type":"RouterNavigate","x":354,"y":4982,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Secret Codes/Secret Codes"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"9bc22c38-038d-d563-6753-609f4c8f2ea3","type":"JavaScriptFunction","label":"Play Audio File","x":-286,"y":-157,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"49fdfa57-8c48-5258-6909-53a65a8c1410","type":"JavaScriptFunction","label":"Play Audio File","x":801.1614749296355,"y":3857.1278118845717,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"cd008f7c-524d-31c3-d0ad-2499f559fce0","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-315,"y":4391,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// List of prefixes to check\nconst prefixes = [\n    \"misc-\",\n    \"animalisland-\",\n    \"summercamper-\",\n    \"igloo-\",\n    \"gulliver-\",\n    \"nook-\",\n    \"redd-\",\n    \"painting-\",\n    \"tortimer-\",\n    \"thanksgiving-\",\n    \"halloween-\",\n    \"snowman-\",\n    \"christmas-\",\n    \"raffle-\",\n    \"secret-\"\n];\n\n// Filter keys that start with any of the specified prefixes\nconst filteredKeys = keys.filter(key => \n    prefixes.some(prefix => key.startsWith(prefix))\n);\n\n// Count the number of filtered keys\nconst count = filteredKeys.length;\n\n// Output the count in the format \"# / 641\"\nOutputs.CountText = `${count} / 601`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["d2dec293-7d9e-b2bb-0367-d9e0ce8ce410"]}},{"name":"/Collection Pages/Furniture/furniture-splash","id":"ea6f3a14-8794-d548-d211-7f3d03a1734c","graph":{"connections":[{"fromId":"8b760b0e-5048-1ff1-fd62-3ef5a17b0e18","fromProperty":"out-Success","toId":"e8f42598-274f-b7c9-804d-c192aebbed4a","toProperty":"play"}],"roots":[{"id":"5fd006ec-6c0e-c8e8-ba6a-e0e326c70606","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"a661b9f0-1f32-2fdd-f852-60a3a237a0e7","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"231fe75f-2a63-9195-3808-a716800bc099","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #f9d776; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: %;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/furniture.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"dbe38999-b4ca-74a6-ba53-dc360a6d21a0","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e8f42598-274f-b7c9-804d-c192aebbed4a","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"8b760b0e-5048-1ff1-fd62-3ef5a17b0e18","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["5fd006ec-6c0e-c8e8-ba6a-e0e326c70606"]}},{"name":"/Collection Pages/Furniture/Gulliver/Gulliver","id":"8a347cf6-96bb-c1e7-3169-e07db46d2641","graph":{"connections":[{"fromId":"fa8e46d7-8594-6f20-a25b-b5fcbdb8347f","fromProperty":"items","toId":"e52bb9ad-bdf5-1485-e5d9-1818eddd591d","toProperty":"items"},{"fromId":"b0c0ba32-2d6a-5b71-c24b-d8d74ee1079a","fromProperty":"out-Success","toId":"e52bb9ad-bdf5-1485-e5d9-1818eddd591d","toProperty":"refresh"},{"fromId":"a69d319f-2a46-d96c-29f5-f324fb381c93","fromProperty":"out-CountText","toId":"5e1a4953-4419-755f-cad1-1aff0aa5b75a","toProperty":"text"}],"roots":[{"id":"ed8a51de-2cf1-80c6-1fda-e8d2702f80c8","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Gulliver","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"gulliver","index":32}],"children":[{"id":"c171bc34-21f8-857e-ee17-da6628b458f2","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"7d78a097-ec5e-82c9-4b03-aa41e83614f8","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"5e1a4953-4419-755f-cad1-1aff0aa5b75a","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Gulliver Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"1c826691-ebfb-1568-17ef-f68afd51b71f","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e1331204-68c2-039d-9cf4-12a0f665fd9f","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f7b55f94-b5c4-2836-fe76-9955cafbe92f","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/gulliver.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"a92f3262-b32e-7fef-42e4-19ccf08f01dc","type":"Text","label":"","parameters":{"text":"Gulliver","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8f4ab96e-8d51-15e1-d256-100f258e7bbc","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c14ce6c8-e14e-dfbf-670b-860b0cf5c3ed","type":"Text","label":"","parameters":{"text":"Gulliver washes up on the shoreline once a week.  Talk to him until he wakes up and gives you an item.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e52bb9ad-bdf5-1485-e5d9-1818eddd591d","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Gulliver/Gulliver Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"423dc666-66bd-3c5c-dccd-564733f8a14d","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"fa8e46d7-8594-6f20-a25b-b5fcbdb8347f","type":"Collection2","label":"Igloos","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"gulliver-0001\",\r\n    \"Label\": \"Arc De Triomphe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Arc_De_Triomphe_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0002\",\r\n    \"Label\": \"Chinese lion\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Chinese_Lion_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0003\",\r\n    \"Label\": \"Chinese lioness\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Chinese_Lioness_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0004\",\r\n    \"Label\": \"Compass\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Compass_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0005\",\r\n    \"Label\": \"Fishing bear\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Fishing_Bear_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0006\",\r\n    \"Label\": \"Lady Liberty\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Lady_Liberty_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0007\",\r\n    \"Label\": \"Manekin Pis\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Manekin_Pis_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0008\",\r\n    \"Label\": \"Matryoshka\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Matryoshka_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0009\",\r\n    \"Label\": \"Merlion\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Merlion_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0010\",\r\n    \"Label\": \"Mermaid statue\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Mermaid_Statue_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0011\",\r\n    \"Label\": \"Moai statue\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Moai_Statue_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0012\",\r\n    \"Label\": \"Mouth of Truth\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Mouth_of_Truth_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0013\",\r\n    \"Label\": \"Pagoda\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Pagoda_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0014\",\r\n    \"Label\": \"Plate armor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Plate_Armor_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0015\",\r\n    \"Label\": \"Shogi piece\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Shogi_Piece_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0016\",\r\n    \"Label\": \"Stone coin\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Stone_Coin_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0017\",\r\n    \"Label\": \"Tiger bobblehead\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Tiger_Bobblehead_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0018\",\r\n    \"Label\": \"Tokyo Tower\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Tokyo_Tower_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0019\",\r\n    \"Label\": \"Tower of Pisa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Tower_of_Pisa_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gulliver-0020\",\r\n    \"Label\": \"Tribal mask\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/gulliver/64px-Tribal_Mask_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"b0c0ba32-2d6a-5b71-c24b-d8d74ee1079a","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a69d319f-2a46-d96c-29f5-f324fb381c93","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":42,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('gulliver-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Gulliver Progress: ${count} / 20`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["ed8a51de-2cf1-80c6-1fda-e8d2702f80c8"]}},{"name":"/Collection Pages/Furniture/Gulliver/Gulliver Logic","id":"c3bf7ee5-33ea-aaf7-38d8-53c413f56015","graph":{"connections":[{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-ID","toId":"485d5c87-63fe-cfd1-9630-3988cf014b49","toProperty":"in-ID"},{"fromId":"485d5c87-63fe-cfd1-9630-3988cf014b49","fromProperty":"out-ID","toId":"fc4412fe-48a4-d139-2b8f-66b9cc74e165","toProperty":"modelId"},{"fromId":"485d5c87-63fe-cfd1-9630-3988cf014b49","fromProperty":"out-Checked","toId":"fc4412fe-48a4-d139-2b8f-66b9cc74e165","toProperty":"prop-Checked"},{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-Label","toId":"485d5c87-63fe-cfd1-9630-3988cf014b49","toProperty":"in-Label"},{"fromId":"65bc63e4-337d-8d50-5070-37cdfd5eebe0","fromProperty":"id","toId":"e519d925-fcdf-d47e-7138-c3354659e887","toProperty":"in-ID"},{"fromId":"65bc63e4-337d-8d50-5070-37cdfd5eebe0","fromProperty":"prop-Label","toId":"e519d925-fcdf-d47e-7138-c3354659e887","toProperty":"in-Label"},{"fromId":"65bc63e4-337d-8d50-5070-37cdfd5eebe0","fromProperty":"prop-Image","toId":"e519d925-fcdf-d47e-7138-c3354659e887","toProperty":"in-Icon"},{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-Label","toId":"8e2225fe-1511-a30a-2a03-5bb8dc84e68c","toProperty":"text"},{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-Icon","toId":"973822c3-f387-db80-389f-c4f7af886349","toProperty":"src"},{"fromId":"65bc63e4-337d-8d50-5070-37cdfd5eebe0","fromProperty":"prop-Checked","toId":"e519d925-fcdf-d47e-7138-c3354659e887","toProperty":"in-Checked"},{"fromId":"65bc63e4-337d-8d50-5070-37cdfd5eebe0","fromProperty":"prop-Price","toId":"e519d925-fcdf-d47e-7138-c3354659e887","toProperty":"in-Price"},{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-Price","toId":"485d5c87-63fe-cfd1-9630-3988cf014b49","toProperty":"in-Price"},{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-Icon","toId":"485d5c87-63fe-cfd1-9630-3988cf014b49","toProperty":"in-Icon"},{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-Checked","toId":"b55a83a4-1890-97da-ddee-6f8a7b935acd","toProperty":"checked"},{"fromId":"b55a83a4-1890-97da-ddee-6f8a7b935acd","fromProperty":"checked","toId":"485d5c87-63fe-cfd1-9630-3988cf014b49","toProperty":"in-Checked"},{"fromId":"b55a83a4-1890-97da-ddee-6f8a7b935acd","fromProperty":"onChange","toId":"485d5c87-63fe-cfd1-9630-3988cf014b49","toProperty":"in-Changed"},{"fromId":"b55a83a4-1890-97da-ddee-6f8a7b935acd","fromProperty":"onChange","toId":"fc4412fe-48a4-d139-2b8f-66b9cc74e165","toProperty":"store"},{"fromId":"65bc63e4-337d-8d50-5070-37cdfd5eebe0","fromProperty":"prop-Obtained","toId":"e519d925-fcdf-d47e-7138-c3354659e887","toProperty":"in-Obtained"},{"fromId":"e519d925-fcdf-d47e-7138-c3354659e887","fromProperty":"out-Obtained","toId":"485d5c87-63fe-cfd1-9630-3988cf014b49","toProperty":"in-Obtained"},{"fromId":"b55a83a4-1890-97da-ddee-6f8a7b935acd","fromProperty":"onChange","toId":"1e8aa3a1-d69e-ed3f-7769-5caa9c27823e","toProperty":"run"}],"roots":[{"id":"87599b33-60b3-8d27-02dc-66bc6bd88f95","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"46daa55e-c462-86c5-811e-37fd9daf93d4","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4ef80655-4270-838f-8d54-cb2c9601d23b","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"cbd0b761-eea0-967e-9537-725ef8101a4a","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"87653c95-82e8-a932-92d3-eba1c201ffa1","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"02f6f6e8-8605-a9b9-6e30-1eb498ac5bfa","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9fb82b07-6e29-8b28-3d0b-af79ed784c0f","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"973822c3-f387-db80-389f-c4f7af886349","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8e2225fe-1511-a30a-2a03-5bb8dc84e68c","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"5767e249-866d-613e-402e-1a6785e6d96f","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b55a83a4-1890-97da-ddee-6f8a7b935acd","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"65bc63e4-337d-8d50-5070-37cdfd5eebe0","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"fc4412fe-48a4-d139-2b8f-66b9cc74e165","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"e519d925-fcdf-d47e-7138-c3354659e887","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"485d5c87-63fe-cfd1-9630-3988cf014b49","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"1e8aa3a1-d69e-ed3f-7769-5caa9c27823e","type":"JavaScriptFunction","label":"Play Audio File","x":446,"y":669,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["87599b33-60b3-8d27-02dc-66bc6bd88f95"]}},{"name":"/Collection Pages/Furniture/Gulliver/Gulliver Logic/Options","id":"80c34291-f2fd-adeb-366e-eead6385f2ec","graph":{"connections":[{"fromId":"200bd492-103a-c154-e673-dd9d82b8429b","fromProperty":"id","toId":"af165063-facd-8645-7a19-e29899fb7187","toProperty":"in-ID"},{"fromId":"200bd492-103a-c154-e673-dd9d82b8429b","fromProperty":"prop-Label","toId":"af165063-facd-8645-7a19-e29899fb7187","toProperty":"in-Label"},{"fromId":"200bd492-103a-c154-e673-dd9d82b8429b","fromProperty":"prop-Checked","toId":"af165063-facd-8645-7a19-e29899fb7187","toProperty":"in-Checked"},{"fromId":"af165063-facd-8645-7a19-e29899fb7187","fromProperty":"out-ID","toId":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","toProperty":"in-ID"},{"fromId":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","fromProperty":"out-ID","toId":"a7d97115-e1b8-2843-66c8-0deba294920e","toProperty":"modelId"},{"fromId":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","fromProperty":"out-Checked","toId":"a7d97115-e1b8-2843-66c8-0deba294920e","toProperty":"prop-Checked"},{"fromId":"af165063-facd-8645-7a19-e29899fb7187","fromProperty":"out-Label","toId":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","toProperty":"in-Label"},{"fromId":"200bd492-103a-c154-e673-dd9d82b8429b","fromProperty":"prop-Icon","toId":"af165063-facd-8645-7a19-e29899fb7187","toProperty":"in-Icon"},{"fromId":"af165063-facd-8645-7a19-e29899fb7187","fromProperty":"out-Icon","toId":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","toProperty":"in-Icon"},{"fromId":"a7d97115-e1b8-2843-66c8-0deba294920e","fromProperty":"stored","toId":"8e3da480-cf59-0d39-60ca-30dd0e4448c3","toProperty":"Selection Changed"},{"fromId":"dedca577-4d5c-8fdd-3863-c73693e3e7be","fromProperty":"onChange","toId":"a7d97115-e1b8-2843-66c8-0deba294920e","toProperty":"store"},{"fromId":"dedca577-4d5c-8fdd-3863-c73693e3e7be","fromProperty":"onChange","toId":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","toProperty":"in-Changed"},{"fromId":"dedca577-4d5c-8fdd-3863-c73693e3e7be","fromProperty":"checked","toId":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","toProperty":"in-Checked"},{"fromId":"af165063-facd-8645-7a19-e29899fb7187","fromProperty":"out-Checked","toId":"dedca577-4d5c-8fdd-3863-c73693e3e7be","toProperty":"checked"},{"fromId":"af165063-facd-8645-7a19-e29899fb7187","fromProperty":"out-Label","toId":"dedca577-4d5c-8fdd-3863-c73693e3e7be","toProperty":"label"}],"roots":[{"id":"a3d77685-cab1-32f7-a829-1031d7746396","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"dedca577-4d5c-8fdd-3863-c73693e3e7be","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"200bd492-103a-c154-e673-dd9d82b8429b","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"a7d97115-e1b8-2843-66c8-0deba294920e","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"af165063-facd-8645-7a19-e29899fb7187","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"62f44ed9-edec-6145-1f5d-5c5dd73ba69e","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"8e3da480-cf59-0d39-60ca-30dd0e4448c3","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["a3d77685-cab1-32f7-a829-1031d7746396"]}},{"name":"/Collection Pages/Furniture/Halloween/Halloween","id":"f58376bf-3993-07c8-ecb7-6321593a816d","graph":{"connections":[{"fromId":"34ec0f49-0115-6490-5368-3b446ec5138d","fromProperty":"items","toId":"b724bc73-5a5d-9229-e96b-55e589825ecd","toProperty":"items"},{"fromId":"a1d8ed9a-b4ca-8b56-2a0f-4eea80190103","fromProperty":"out-Success","toId":"b724bc73-5a5d-9229-e96b-55e589825ecd","toProperty":"refresh"},{"fromId":"3d50abfd-a0d7-ba21-2f4c-50438efc83b7","fromProperty":"out-CountText","toId":"1858f8df-e19e-1b81-3f14-ee2aa7cb8597","toProperty":"text"}],"roots":[{"id":"aeafa713-db45-ffbc-0fd3-f72795274cef","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Halloween","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"halloween","index":32}],"children":[{"id":"a8304fa7-7895-a5ed-1591-f3f901d30153","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"fed375be-58dd-ba37-8ae6-cffb1dca8e04","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1858f8df-e19e-1b81-3f14-ee2aa7cb8597","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Igloo Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"db981e3d-c819-95ea-d811-5cfae225f5c5","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"91eb9c37-be52-5feb-53eb-1053e85c057c","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"798c17b2-0bc1-e9a9-3f8c-ee94f64f5de9","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/jack.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"145bdd15-547b-1c7a-1bd2-f288595c8dc6","type":"Text","label":"","parameters":{"text":"Halloween","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d631ab5e-0e4e-63f0-4d02-be82b59e53b9","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"acc5d3e0-b966-b3cd-cb52-e2b56154fc36","type":"Text","label":"","parameters":{"text":"You can obtain Spooky items by talking to Jack on Halloween.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b724bc73-5a5d-9229-e96b-55e589825ecd","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Halloween/Halloween Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"e240f862-1b2b-67b9-fc00-ee0d77f57fa9","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"34ec0f49-0115-6490-5368-3b446ec5138d","type":"Collection2","label":"Igloos","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"halloween-0001\",\r\n    \"Label\": \"Spooky bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Bed_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0002\",\r\n    \"Label\": \"Spooky bookcase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Bookcase_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0003\",\r\n    \"Label\": \"Spooky chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Chair_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0004\",\r\n    \"Label\": \"Spooky clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Clock_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0005\",\r\n    \"Label\": \"Spooky dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Dresser_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0006\",\r\n    \"Label\": \"Spooky lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Lamp_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0007\",\r\n    \"Label\": \"Spooky sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Sofa_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0008\",\r\n    \"Label\": \"Spooky table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Table_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0009\",\r\n    \"Label\": \"Spooky vanity\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Vanity_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"halloween-0010\",\r\n    \"Label\": \"Spooky wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/halloween/64px-Spooky_Wardrobe_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"a1d8ed9a-b4ca-8b56-2a0f-4eea80190103","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":383,"y":628,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"3d50abfd-a0d7-ba21-2f4c-50438efc83b7","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":48,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('halloween-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Halloween Progress: ${count} / 10`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["aeafa713-db45-ffbc-0fd3-f72795274cef"]}},{"name":"/Collection Pages/Furniture/Halloween/Halloween Logic","id":"379c8d64-8279-d0b2-7149-ded855553995","graph":{"connections":[{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-ID","toId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","toProperty":"in-ID"},{"fromId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","fromProperty":"out-ID","toId":"15424179-2244-506b-8747-c5be78e8dc6d","toProperty":"modelId"},{"fromId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","fromProperty":"out-Checked","toId":"15424179-2244-506b-8747-c5be78e8dc6d","toProperty":"prop-Checked"},{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-Label","toId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","toProperty":"in-Label"},{"fromId":"7e1bd349-d057-a27c-10ef-b896e993e976","fromProperty":"id","toId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","toProperty":"in-ID"},{"fromId":"7e1bd349-d057-a27c-10ef-b896e993e976","fromProperty":"prop-Label","toId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","toProperty":"in-Label"},{"fromId":"7e1bd349-d057-a27c-10ef-b896e993e976","fromProperty":"prop-Image","toId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","toProperty":"in-Icon"},{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-Label","toId":"c1f8747d-7fdb-7049-5baa-1e4683717cb3","toProperty":"text"},{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-Icon","toId":"69656dc0-233f-923f-3b17-f5af2d7b9a05","toProperty":"src"},{"fromId":"7e1bd349-d057-a27c-10ef-b896e993e976","fromProperty":"prop-Checked","toId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","toProperty":"in-Checked"},{"fromId":"7e1bd349-d057-a27c-10ef-b896e993e976","fromProperty":"prop-Price","toId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","toProperty":"in-Price"},{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-Price","toId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","toProperty":"in-Price"},{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-Icon","toId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","toProperty":"in-Icon"},{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-Checked","toId":"328c4a44-218c-458c-5f61-338958ac7af2","toProperty":"checked"},{"fromId":"328c4a44-218c-458c-5f61-338958ac7af2","fromProperty":"checked","toId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","toProperty":"in-Checked"},{"fromId":"328c4a44-218c-458c-5f61-338958ac7af2","fromProperty":"onChange","toId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","toProperty":"in-Changed"},{"fromId":"328c4a44-218c-458c-5f61-338958ac7af2","fromProperty":"onChange","toId":"15424179-2244-506b-8747-c5be78e8dc6d","toProperty":"store"},{"fromId":"7e1bd349-d057-a27c-10ef-b896e993e976","fromProperty":"prop-Obtained","toId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","toProperty":"in-Obtained"},{"fromId":"3ba96498-25b8-26d8-d6bf-5233b93adb47","fromProperty":"out-Obtained","toId":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","toProperty":"in-Obtained"},{"fromId":"328c4a44-218c-458c-5f61-338958ac7af2","fromProperty":"onChange","toId":"e8637b2c-e167-48e5-ca43-ae6c14c174a8","toProperty":"run"}],"roots":[{"id":"f1a98d55-b2cc-05a1-560b-f9a9c3bcce84","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f1bc0850-ca7a-34ec-9db4-6d1c4b15b379","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7a836105-4ea3-8fd7-01ae-b169159a6f63","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"9110f0b9-f24e-655f-1cd1-9cfd559dcec1","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"1bb4412f-bd2e-563f-8881-63da8193639f","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d95a31b0-9798-7c96-8108-41d12547a5fc","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"fc54479a-1d4d-b869-fb92-f4c3661dfced","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"69656dc0-233f-923f-3b17-f5af2d7b9a05","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c1f8747d-7fdb-7049-5baa-1e4683717cb3","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"6a193e3f-3e85-55eb-9f98-b6a867db5972","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"328c4a44-218c-458c-5f61-338958ac7af2","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"7e1bd349-d057-a27c-10ef-b896e993e976","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"15424179-2244-506b-8747-c5be78e8dc6d","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"3ba96498-25b8-26d8-d6bf-5233b93adb47","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"46551e9f-9bf4-17fd-61e8-729e0f5fef63","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"e8637b2c-e167-48e5-ca43-ae6c14c174a8","type":"JavaScriptFunction","label":"Play Audio File","x":307,"y":651,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["f1a98d55-b2cc-05a1-560b-f9a9c3bcce84"]}},{"name":"/Collection Pages/Furniture/Halloween/Halloween Logic/Options","id":"81896577-b776-4d80-4849-c05e99cc005c","graph":{"connections":[{"fromId":"d0306867-8bc6-0b31-224e-b9e374f0c264","fromProperty":"id","toId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","toProperty":"in-ID"},{"fromId":"d0306867-8bc6-0b31-224e-b9e374f0c264","fromProperty":"prop-Label","toId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","toProperty":"in-Label"},{"fromId":"d0306867-8bc6-0b31-224e-b9e374f0c264","fromProperty":"prop-Checked","toId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","toProperty":"in-Checked"},{"fromId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","fromProperty":"out-ID","toId":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","toProperty":"in-ID"},{"fromId":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","fromProperty":"out-ID","toId":"61cfe488-ac09-7c9b-e1c1-e4339775a4d0","toProperty":"modelId"},{"fromId":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","fromProperty":"out-Checked","toId":"61cfe488-ac09-7c9b-e1c1-e4339775a4d0","toProperty":"prop-Checked"},{"fromId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","fromProperty":"out-Label","toId":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","toProperty":"in-Label"},{"fromId":"d0306867-8bc6-0b31-224e-b9e374f0c264","fromProperty":"prop-Icon","toId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","toProperty":"in-Icon"},{"fromId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","fromProperty":"out-Icon","toId":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","toProperty":"in-Icon"},{"fromId":"61cfe488-ac09-7c9b-e1c1-e4339775a4d0","fromProperty":"stored","toId":"11bc2fb6-98df-cbf7-7149-5cae90b3499e","toProperty":"Selection Changed"},{"fromId":"a315bfee-26d6-a9fc-62cd-7ded4e11e069","fromProperty":"onChange","toId":"61cfe488-ac09-7c9b-e1c1-e4339775a4d0","toProperty":"store"},{"fromId":"a315bfee-26d6-a9fc-62cd-7ded4e11e069","fromProperty":"onChange","toId":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","toProperty":"in-Changed"},{"fromId":"a315bfee-26d6-a9fc-62cd-7ded4e11e069","fromProperty":"checked","toId":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","toProperty":"in-Checked"},{"fromId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","fromProperty":"out-Checked","toId":"a315bfee-26d6-a9fc-62cd-7ded4e11e069","toProperty":"checked"},{"fromId":"c407c8fe-aa36-5d17-4359-4df183b82f3b","fromProperty":"out-Label","toId":"a315bfee-26d6-a9fc-62cd-7ded4e11e069","toProperty":"label"}],"roots":[{"id":"3827b4a4-86fd-6424-57b6-5282c7869c16","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"a315bfee-26d6-a9fc-62cd-7ded4e11e069","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d0306867-8bc6-0b31-224e-b9e374f0c264","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"61cfe488-ac09-7c9b-e1c1-e4339775a4d0","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"c407c8fe-aa36-5d17-4359-4df183b82f3b","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5ecc2d3e-49b8-3719-bbf9-35dc4f1e89c1","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"11bc2fb6-98df-cbf7-7149-5cae90b3499e","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["3827b4a4-86fd-6424-57b6-5282c7869c16"]}},{"name":"/Collection Pages/Furniture/Harvest/Harvest","id":"d88ea23d-13bd-2782-903b-e0d8639f6078","graph":{"connections":[{"fromId":"39fffc73-0d98-60f3-3a79-f4ffbc0eaabb","fromProperty":"items","toId":"8f536009-18f1-1a02-236a-de345f25040f","toProperty":"items"},{"fromId":"f7b0da56-81fa-1cd9-6296-d5d9d26886b1","fromProperty":"out-Success","toId":"8f536009-18f1-1a02-236a-de345f25040f","toProperty":"refresh"},{"fromId":"c632ce88-2fd0-7eb6-f624-a5e415819224","fromProperty":"out-CountText","toId":"4a86dfe1-d490-195f-d592-b39bdd8cd5c8","toProperty":"text"}],"roots":[{"id":"8e5c835c-a191-1449-13d2-b5b91a78eb69","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Harvest","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"harvest","index":32}],"children":[{"id":"ad01317e-32f5-c19c-97e3-301cf251a1da","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"1f94a7f3-a3c0-eb1c-556a-bf252cd8a571","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4a86dfe1-d490-195f-d592-b39bdd8cd5c8","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Igloo Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"ad39adf9-16f9-a96c-9f1a-eb70ff2ce3be","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4285243c-280c-d50f-1bb8-f187f15af182","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"52eed22f-217b-ffae-ef76-3a095d36e5ef","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/Franklin_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"c6d68dc1-1b3c-75e9-d676-6e637c984c61","type":"Text","label":"","parameters":{"text":"Harvest Festival","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b16c7fa3-8de1-ef6c-2ae3-bc4f34f6926f","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6c84eaa8-f431-805f-8b24-286ac55a9dee","type":"Text","label":"","parameters":{"text":"You can obtain Harvest items by talking to Franklin during the Harvest Festival, after bringing Franklin a fork and knife.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8f536009-18f1-1a02-236a-de345f25040f","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Harvest/Harvest Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"de05c60f-6e12-55c8-2c46-9ed132e5a64f","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"39fffc73-0d98-60f3-3a79-f4ffbc0eaabb","type":"Collection2","label":"Igloos","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"thanksgiving-0001\",\r\n    \"Label\": \"Harvest bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Bed_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0002\",\r\n    \"Label\": \"Harvest bureau\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Bureau_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0003\",\r\n    \"Label\": \"Harvest chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Chair_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0004\",\r\n    \"Label\": \"Harvest clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Clock_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0005\",\r\n    \"Label\": \"Harvest dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Dresser_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0006\",\r\n    \"Label\": \"Harvest lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Lamp_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0007\",\r\n    \"Label\": \"Harvest mirror\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Mirror_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0008\",\r\n    \"Label\": \"Harvest sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Sofa_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0009\",\r\n    \"Label\": \"Harvest table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_Table_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"thanksgiving-0010\",\r\n    \"Label\": \"Harvest TV\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/thanksgiving/64px-Harvest_TV_PG_Model.png\",\r\n    \"Value\": \"\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"f7b0da56-81fa-1cd9-6296-d5d9d26886b1","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":383,"y":628,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"c632ce88-2fd0-7eb6-f624-a5e415819224","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":48,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('thanksgiving-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Harvest Festival Progress: ${count} / 10`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["8e5c835c-a191-1449-13d2-b5b91a78eb69"]}},{"name":"/Collection Pages/Furniture/Harvest/Harvest Logic","id":"f57bb930-ddfd-805f-09e2-25ce2bf23ee8","graph":{"connections":[{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-ID","toId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","toProperty":"in-ID"},{"fromId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","fromProperty":"out-ID","toId":"f4d2452d-3ecf-a235-c9dc-1fafa6d41d75","toProperty":"modelId"},{"fromId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","fromProperty":"out-Checked","toId":"f4d2452d-3ecf-a235-c9dc-1fafa6d41d75","toProperty":"prop-Checked"},{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-Label","toId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","toProperty":"in-Label"},{"fromId":"0c172b28-73ad-0c7a-a97c-aba0733fc3ea","fromProperty":"id","toId":"2398c431-b377-b9ed-4cd1-40a4a3799103","toProperty":"in-ID"},{"fromId":"0c172b28-73ad-0c7a-a97c-aba0733fc3ea","fromProperty":"prop-Label","toId":"2398c431-b377-b9ed-4cd1-40a4a3799103","toProperty":"in-Label"},{"fromId":"0c172b28-73ad-0c7a-a97c-aba0733fc3ea","fromProperty":"prop-Image","toId":"2398c431-b377-b9ed-4cd1-40a4a3799103","toProperty":"in-Icon"},{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-Label","toId":"51a4b264-c986-fd32-60e6-531524633752","toProperty":"text"},{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-Icon","toId":"2c1c74ed-9343-ebfb-e795-20ac40968020","toProperty":"src"},{"fromId":"0c172b28-73ad-0c7a-a97c-aba0733fc3ea","fromProperty":"prop-Checked","toId":"2398c431-b377-b9ed-4cd1-40a4a3799103","toProperty":"in-Checked"},{"fromId":"0c172b28-73ad-0c7a-a97c-aba0733fc3ea","fromProperty":"prop-Price","toId":"2398c431-b377-b9ed-4cd1-40a4a3799103","toProperty":"in-Price"},{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-Price","toId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","toProperty":"in-Price"},{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-Icon","toId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","toProperty":"in-Icon"},{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-Checked","toId":"22982801-7c39-e348-2508-582a592db44c","toProperty":"checked"},{"fromId":"22982801-7c39-e348-2508-582a592db44c","fromProperty":"checked","toId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","toProperty":"in-Checked"},{"fromId":"22982801-7c39-e348-2508-582a592db44c","fromProperty":"onChange","toId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","toProperty":"in-Changed"},{"fromId":"22982801-7c39-e348-2508-582a592db44c","fromProperty":"onChange","toId":"f4d2452d-3ecf-a235-c9dc-1fafa6d41d75","toProperty":"store"},{"fromId":"0c172b28-73ad-0c7a-a97c-aba0733fc3ea","fromProperty":"prop-Obtained","toId":"2398c431-b377-b9ed-4cd1-40a4a3799103","toProperty":"in-Obtained"},{"fromId":"2398c431-b377-b9ed-4cd1-40a4a3799103","fromProperty":"out-Obtained","toId":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","toProperty":"in-Obtained"},{"fromId":"22982801-7c39-e348-2508-582a592db44c","fromProperty":"onChange","toId":"18f29e5c-8686-6805-53f1-93114d6962c7","toProperty":"run"}],"roots":[{"id":"f76bd3d6-2f39-bc18-0ff0-15dffe76af70","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"99fc3261-4305-8485-6eae-3f53901fae86","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"95cb73ab-1d59-22bf-befc-5241b980f1fb","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"86a04e8e-edb8-63d6-bf2e-d0fa17869fc7","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"6b9a639e-c870-c455-1916-9c7438508926","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"bccaf220-2f67-f872-44be-d3267a589d6e","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d591e9f1-72ba-88e5-b247-6e89abf6871a","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"2c1c74ed-9343-ebfb-e795-20ac40968020","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"51a4b264-c986-fd32-60e6-531524633752","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"5d126dab-705a-012c-1a98-fff70c5f6608","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"22982801-7c39-e348-2508-582a592db44c","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"0c172b28-73ad-0c7a-a97c-aba0733fc3ea","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"f4d2452d-3ecf-a235-c9dc-1fafa6d41d75","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"2398c431-b377-b9ed-4cd1-40a4a3799103","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"7aeb7337-1d0d-ecbf-eea9-c6c0e55918bf","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"18f29e5c-8686-6805-53f1-93114d6962c7","type":"JavaScriptFunction","label":"Play Audio File","x":380,"y":625,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["f76bd3d6-2f39-bc18-0ff0-15dffe76af70"]}},{"name":"/Collection Pages/Furniture/Harvest/Harvest Logic/Options","id":"c6ff3641-add4-0b6d-bce1-ff83fa532a8f","graph":{"connections":[{"fromId":"d26fe29e-e2a1-e092-a7e4-bc0d3df57727","fromProperty":"id","toId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","toProperty":"in-ID"},{"fromId":"d26fe29e-e2a1-e092-a7e4-bc0d3df57727","fromProperty":"prop-Label","toId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","toProperty":"in-Label"},{"fromId":"d26fe29e-e2a1-e092-a7e4-bc0d3df57727","fromProperty":"prop-Checked","toId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","toProperty":"in-Checked"},{"fromId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","fromProperty":"out-ID","toId":"a389bf15-8c13-5160-c364-bb924b5463e8","toProperty":"in-ID"},{"fromId":"a389bf15-8c13-5160-c364-bb924b5463e8","fromProperty":"out-ID","toId":"9c27e5ff-4590-a39e-942a-957ac19bcba1","toProperty":"modelId"},{"fromId":"a389bf15-8c13-5160-c364-bb924b5463e8","fromProperty":"out-Checked","toId":"9c27e5ff-4590-a39e-942a-957ac19bcba1","toProperty":"prop-Checked"},{"fromId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","fromProperty":"out-Label","toId":"a389bf15-8c13-5160-c364-bb924b5463e8","toProperty":"in-Label"},{"fromId":"d26fe29e-e2a1-e092-a7e4-bc0d3df57727","fromProperty":"prop-Icon","toId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","toProperty":"in-Icon"},{"fromId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","fromProperty":"out-Icon","toId":"a389bf15-8c13-5160-c364-bb924b5463e8","toProperty":"in-Icon"},{"fromId":"9c27e5ff-4590-a39e-942a-957ac19bcba1","fromProperty":"stored","toId":"f1dd050a-1512-7b0c-f6bc-fdf8222a9555","toProperty":"Selection Changed"},{"fromId":"92c1c40c-5f67-b762-0aed-d8b2ac147a78","fromProperty":"onChange","toId":"9c27e5ff-4590-a39e-942a-957ac19bcba1","toProperty":"store"},{"fromId":"92c1c40c-5f67-b762-0aed-d8b2ac147a78","fromProperty":"onChange","toId":"a389bf15-8c13-5160-c364-bb924b5463e8","toProperty":"in-Changed"},{"fromId":"92c1c40c-5f67-b762-0aed-d8b2ac147a78","fromProperty":"checked","toId":"a389bf15-8c13-5160-c364-bb924b5463e8","toProperty":"in-Checked"},{"fromId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","fromProperty":"out-Checked","toId":"92c1c40c-5f67-b762-0aed-d8b2ac147a78","toProperty":"checked"},{"fromId":"6a87e6f4-e251-b87e-ac64-037b183e6c45","fromProperty":"out-Label","toId":"92c1c40c-5f67-b762-0aed-d8b2ac147a78","toProperty":"label"}],"roots":[{"id":"8e07901b-9a54-9de5-2d91-7205653e1632","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"92c1c40c-5f67-b762-0aed-d8b2ac147a78","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d26fe29e-e2a1-e092-a7e4-bc0d3df57727","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"9c27e5ff-4590-a39e-942a-957ac19bcba1","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"6a87e6f4-e251-b87e-ac64-037b183e6c45","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a389bf15-8c13-5160-c364-bb924b5463e8","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"f1dd050a-1512-7b0c-f6bc-fdf8222a9555","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["8e07901b-9a54-9de5-2d91-7205653e1632"]}},{"name":"/Collection Pages/Furniture/Igloo/Igloo","id":"8f592c0b-2b12-45e2-f74e-204d36371f62","graph":{"connections":[{"fromId":"50f84ca5-4617-981f-dced-ca87971999cc","fromProperty":"items","toId":"1de1b683-e25a-d58f-ace1-cdfa40601717","toProperty":"items"},{"fromId":"76ba9574-f134-b5d4-0786-ea01ddc28f05","fromProperty":"out-Success","toId":"1de1b683-e25a-d58f-ace1-cdfa40601717","toProperty":"refresh"},{"fromId":"5bbb23e4-8278-bc0e-4381-88ffceb2c168","fromProperty":"out-CountText","toId":"ab92a972-7932-880b-a3b0-2f903bc305de","toProperty":"text"}],"roots":[{"id":"1ab827e9-a48e-3b82-e3c6-d460f025ead5","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Igloo","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"igloo","index":32}],"children":[{"id":"471474bf-28bb-ada6-6723-07e986410ff4","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"a791da27-4bb2-c255-d2b6-783c253b52da","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ab92a972-7932-880b-a3b0-2f903bc305de","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Igloo Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"a646ac31-fa66-4b85-1605-1b6109cb8fbc","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a44ab398-2e8e-60b2-7da8-fa401814d16e","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a2665144-cb6e-708f-345d-2291faba7c17","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/furniture/campers/winter/64px-Igloo_Model_PG_Model.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"1170bddf-a704-2313-fd8b-74f4a28cdf06","type":"Text","label":"","parameters":{"text":"Igloos","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d0926ade-456d-5166-ff33-f2436c0a8d1b","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1d51ba2c-9391-922e-627e-bed5c2159f0f","type":"Text","label":"","parameters":{"text":"Igloos are Summer Campers... but in the winter.  They visit your town in January and February from 10:00 AM to 9:59 PM.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1de1b683-e25a-d58f-ace1-cdfa40601717","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Igloo/Igloo Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"ccc28ab9-717b-3ff0-2dfb-30e980cca5d2","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"50f84ca5-4617-981f-dced-ca87971999cc","type":"Collection2","label":"Igloos","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"igloo-0001\",\r\n    \"Label\": \"Chowder\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Chowder_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"igloo-0002\",\r\n    \"Label\": \"Crab stew\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Crab_Stew_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"igloo-0003\",\r\n    \"Label\": \"Fireplace\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Fireplace_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"igloo-0004\",\r\n    \"Label\": \"Sleigh\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Sleigh_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"igloo-0005\",\r\n    \"Label\": \"Snow bunny\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Snow_Bunny_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"igloo-0006\",\r\n    \"Label\": \"Snowboard\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Snowboard_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"igloo-0007\",\r\n    \"Label\": \"Snowy tree model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Snowy_Tree_Model_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"igloo-0008\",\r\n    \"Label\": \"Igloo model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/winter/64px-Igloo_Model_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"76ba9574-f134-b5d4-0786-ea01ddc28f05","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5bbb23e4-8278-bc0e-4381-88ffceb2c168","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":48,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('igloo-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Igloo Progress: ${count} / 8`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["1ab827e9-a48e-3b82-e3c6-d460f025ead5"]}},{"name":"/Collection Pages/Furniture/Igloo/Igloo Logic","id":"003b35a4-278d-df4e-bc4d-d2db0b11f050","graph":{"connections":[{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-ID","toId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","toProperty":"in-ID"},{"fromId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","fromProperty":"out-ID","toId":"e7d341a9-3933-9494-1492-a7dd9866a044","toProperty":"modelId"},{"fromId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","fromProperty":"out-Checked","toId":"e7d341a9-3933-9494-1492-a7dd9866a044","toProperty":"prop-Checked"},{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-Label","toId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","toProperty":"in-Label"},{"fromId":"c55be071-2096-dc29-0de1-9f97727b46e6","fromProperty":"id","toId":"600b6d36-a67c-254f-6b62-68de0b7904ce","toProperty":"in-ID"},{"fromId":"c55be071-2096-dc29-0de1-9f97727b46e6","fromProperty":"prop-Label","toId":"600b6d36-a67c-254f-6b62-68de0b7904ce","toProperty":"in-Label"},{"fromId":"c55be071-2096-dc29-0de1-9f97727b46e6","fromProperty":"prop-Image","toId":"600b6d36-a67c-254f-6b62-68de0b7904ce","toProperty":"in-Icon"},{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-Label","toId":"35dbcea1-f973-d68c-4828-54f4b3d3aabd","toProperty":"text"},{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-Icon","toId":"920c2255-0508-b88c-40a0-982726a5f925","toProperty":"src"},{"fromId":"c55be071-2096-dc29-0de1-9f97727b46e6","fromProperty":"prop-Checked","toId":"600b6d36-a67c-254f-6b62-68de0b7904ce","toProperty":"in-Checked"},{"fromId":"c55be071-2096-dc29-0de1-9f97727b46e6","fromProperty":"prop-Price","toId":"600b6d36-a67c-254f-6b62-68de0b7904ce","toProperty":"in-Price"},{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-Price","toId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","toProperty":"in-Price"},{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-Icon","toId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","toProperty":"in-Icon"},{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-Checked","toId":"5a3e96e7-09fa-5eb9-00f1-9b019830dd1f","toProperty":"checked"},{"fromId":"5a3e96e7-09fa-5eb9-00f1-9b019830dd1f","fromProperty":"checked","toId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","toProperty":"in-Checked"},{"fromId":"5a3e96e7-09fa-5eb9-00f1-9b019830dd1f","fromProperty":"onChange","toId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","toProperty":"in-Changed"},{"fromId":"5a3e96e7-09fa-5eb9-00f1-9b019830dd1f","fromProperty":"onChange","toId":"e7d341a9-3933-9494-1492-a7dd9866a044","toProperty":"store"},{"fromId":"c55be071-2096-dc29-0de1-9f97727b46e6","fromProperty":"prop-Obtained","toId":"600b6d36-a67c-254f-6b62-68de0b7904ce","toProperty":"in-Obtained"},{"fromId":"600b6d36-a67c-254f-6b62-68de0b7904ce","fromProperty":"out-Obtained","toId":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","toProperty":"in-Obtained"},{"fromId":"5a3e96e7-09fa-5eb9-00f1-9b019830dd1f","fromProperty":"onChange","toId":"b7e6009e-740a-ddc6-2c80-8dec2cb0f765","toProperty":"run"}],"roots":[{"id":"6e85054f-dc47-2802-236e-9a14e6c95ff4","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f29150af-baae-99c3-cd9a-41f86763d432","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"184c2a68-40e8-23e8-ad03-101efe95b6ab","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"d722c953-9acd-5658-93fc-18650a9ead14","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"5d0b8c1c-91d5-eb64-2299-06ffe5415ddf","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e930d6c0-97a0-e073-f786-7347eb574b5c","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c00e7580-b992-82ba-8ff0-21c23fd42eb1","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"920c2255-0508-b88c-40a0-982726a5f925","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"35dbcea1-f973-d68c-4828-54f4b3d3aabd","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"036ce38f-7347-201d-1f44-4f94e68388f4","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"5a3e96e7-09fa-5eb9-00f1-9b019830dd1f","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"c55be071-2096-dc29-0de1-9f97727b46e6","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"e7d341a9-3933-9494-1492-a7dd9866a044","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"600b6d36-a67c-254f-6b62-68de0b7904ce","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"f7e68255-8b18-1a60-efa0-21ceea94f1c6","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"b7e6009e-740a-ddc6-2c80-8dec2cb0f765","type":"JavaScriptFunction","label":"Play Audio File","x":453,"y":640,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["6e85054f-dc47-2802-236e-9a14e6c95ff4"]}},{"name":"/Collection Pages/Furniture/Igloo/Igloo Logic/Options","id":"81c4a7a9-391c-7230-8064-dcc4af4d37dd","graph":{"connections":[{"fromId":"c3634410-5105-315b-5501-d7a5b492c9d5","fromProperty":"id","toId":"a633b1ef-5429-f24e-4449-0f8402c81956","toProperty":"in-ID"},{"fromId":"c3634410-5105-315b-5501-d7a5b492c9d5","fromProperty":"prop-Label","toId":"a633b1ef-5429-f24e-4449-0f8402c81956","toProperty":"in-Label"},{"fromId":"c3634410-5105-315b-5501-d7a5b492c9d5","fromProperty":"prop-Checked","toId":"a633b1ef-5429-f24e-4449-0f8402c81956","toProperty":"in-Checked"},{"fromId":"a633b1ef-5429-f24e-4449-0f8402c81956","fromProperty":"out-ID","toId":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","toProperty":"in-ID"},{"fromId":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","fromProperty":"out-ID","toId":"eb33a175-64b5-0e19-4145-6ad025f00e07","toProperty":"modelId"},{"fromId":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","fromProperty":"out-Checked","toId":"eb33a175-64b5-0e19-4145-6ad025f00e07","toProperty":"prop-Checked"},{"fromId":"a633b1ef-5429-f24e-4449-0f8402c81956","fromProperty":"out-Label","toId":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","toProperty":"in-Label"},{"fromId":"c3634410-5105-315b-5501-d7a5b492c9d5","fromProperty":"prop-Icon","toId":"a633b1ef-5429-f24e-4449-0f8402c81956","toProperty":"in-Icon"},{"fromId":"a633b1ef-5429-f24e-4449-0f8402c81956","fromProperty":"out-Icon","toId":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","toProperty":"in-Icon"},{"fromId":"eb33a175-64b5-0e19-4145-6ad025f00e07","fromProperty":"stored","toId":"5eda15d3-d6e0-bc61-0d5e-1383a8daffeb","toProperty":"Selection Changed"},{"fromId":"d06e7685-ad47-20a1-a095-c9231d4214a0","fromProperty":"onChange","toId":"eb33a175-64b5-0e19-4145-6ad025f00e07","toProperty":"store"},{"fromId":"d06e7685-ad47-20a1-a095-c9231d4214a0","fromProperty":"onChange","toId":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","toProperty":"in-Changed"},{"fromId":"d06e7685-ad47-20a1-a095-c9231d4214a0","fromProperty":"checked","toId":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","toProperty":"in-Checked"},{"fromId":"a633b1ef-5429-f24e-4449-0f8402c81956","fromProperty":"out-Checked","toId":"d06e7685-ad47-20a1-a095-c9231d4214a0","toProperty":"checked"},{"fromId":"a633b1ef-5429-f24e-4449-0f8402c81956","fromProperty":"out-Label","toId":"d06e7685-ad47-20a1-a095-c9231d4214a0","toProperty":"label"}],"roots":[{"id":"731acf8a-50de-733c-db7a-9242040735fc","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"d06e7685-ad47-20a1-a095-c9231d4214a0","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c3634410-5105-315b-5501-d7a5b492c9d5","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"eb33a175-64b5-0e19-4145-6ad025f00e07","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"a633b1ef-5429-f24e-4449-0f8402c81956","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"9fb7c7f3-eb27-29db-5b15-20f5b9c9ca6f","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"5eda15d3-d6e0-bc61-0d5e-1383a8daffeb","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["731acf8a-50de-733c-db7a-9242040735fc"]}},{"name":"/Collection Pages/Furniture/Miscellaneous/Miscellaneous","id":"d308b08b-e3a7-c799-c139-f55d950feb23","graph":{"connections":[{"fromId":"69249ed1-cd19-0fa2-d759-7eb842267608","fromProperty":"items","toId":"294a6849-8325-32cd-e311-0cf390931c37","toProperty":"items"},{"fromId":"9fbf0254-938d-1287-bf48-6959b6ea3cfa","fromProperty":"out-Success","toId":"294a6849-8325-32cd-e311-0cf390931c37","toProperty":"refresh"},{"fromId":"112a8f1f-e549-061f-b26f-c7f89e17c742","fromProperty":"out-CountText","toId":"70c56758-5263-f15e-d6ff-e9a34b77d2bb","toProperty":"text"}],"roots":[{"id":"81719585-fa5f-dda2-dd79-e66868c4b9b1","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Miscellaneous","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"miscellaneous","index":32}],"children":[{"id":"1323aa16-d551-218a-a7a7-d7433a0bfb05","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"31acb481-ead3-113c-79e8-7a0d20ba9cac","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"70c56758-5263-f15e-d6ff-e9a34b77d2bb","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Miscellaneous Progress: 0 / 307","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"61e3af35-d9ad-b72d-333e-5ebed7608bd0","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"01301928-1e00-4ac1-4255-8251a92c1237","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0c5a5476-8306-7701-fcb0-5f62210b5220","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/tom_nook.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"5a837083-e3b3-107c-4e5a-7183ff6caf3e","type":"Text","label":"","parameters":{"text":"Miscellaneous Furniture","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"294a6849-8325-32cd-e311-0cf390931c37","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Miscellaneous/Miscellaneous Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"0aff1d7c-1c42-2c42-384d-6b89aa1961e4","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"69249ed1-cd19-0fa2-d759-7eb842267608","type":"Collection2","label":"Nook","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"misc-0001\",\r\n    \"Label\": \"Birthday Cake\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Birthday_Cake_PG_Model.png\",\r\n    \"Price\": \"Mom will mail you a letter on your birthday.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0002\",\r\n    \"Label\": \"Tissue\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Tissue_PG_Model.png\",\r\n    \"Price\": \"The Post Office will mail you this if you have at least 1,000,000 Bells in the bank.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0003\",\r\n    \"Label\": \"Piggy bank\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Piggy_Bank_PG_Model.png\",\r\n    \"Price\": \"The Post Office will mail you this if you have at least 10,000,000 Bells in the bank.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0004\",\r\n    \"Label\": \"Mailbox\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Mailbox_PG_Model.png\",\r\n    \"Price\": \"The Post Office will mail you this if you have at least 100,000,000 Bells in the bank.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0005\",\r\n    \"Label\": \"Post model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Post_Model_PG_Model.png\",\r\n    \"Price\": \"The Post Office will mail you this if you have at least 999,999,999 Bells in the bank.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0006\",\r\n    \"Label\": \"House model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-House_Model_PG_Model.png\",\r\n    \"Price\": \"The Happy Room Academy will mail you this after you have a HRA Score greater than 70,000.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0007\",\r\n    \"Label\": \"Manor model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Manor_Model_PG_Model.png\",\r\n    \"Price\": \"The Happy Room Academy will mail you this after you have a HRA Score greater than 100,000.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0008\",\r\n    \"Label\": \"Museum model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Museum_Model_PG_Model.png\",\r\n    \"Price\": \"The Farway Museum will mail you this after you complete the Museum.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0009\",\r\n    \"Label\": \"Jack in the Box\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Jack-in-the-Box_PG_Model.png\",\r\n    \"Price\": \"Villagers can give you this on Halloween.  If you decline when a villager asks for candy, a random item from your inventory may turn into this.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0010\",\r\n    \"Label\": \"Jack o' Lantern\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Jack-o'-Lantern_PG_Model.png\",\r\n    \"Price\": \"Villagers can give you this on Halloween.  If you decline when a villager asks for candy, a random item from your inventory may turn into this.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0011\",\r\n    \"Label\": \"Blue diary\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Blue_Diary_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0012\",\r\n    \"Label\": \"Blue polka pad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Blue_Polka_Pad_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0013\",\r\n    \"Label\": \"Captain's log\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Captain's_Log_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0014\",\r\n    \"Label\": \"Diary\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Diary_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0015\",\r\n    \"Label\": \"French notebook\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-French_Notebook_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0016\",\r\n    \"Label\": \"Green plaid pad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Green_Plaid_Pad_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0017\",\r\n    \"Label\": \"Journal\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Journal_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0018\",\r\n    \"Label\": \"Organizer\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Organizer_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0019\",\r\n    \"Label\": \"Pink diary\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Pink_Diary_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0020\",\r\n    \"Label\": \"Pink plaid pad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Pink_Plaid_Pad_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0021\",\r\n    \"Label\": \"Red polka pad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Red_Polka_Pad_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0022\",\r\n    \"Label\": \"School pad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-School_Pad_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0023\",\r\n    \"Label\": \"Scroll\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Scroll_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0024\",\r\n    \"Label\": \"Yellow plaid pad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-Yellow_Plaid_Pad_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"misc-0025\",\r\n    \"Label\": \"College rule\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/misc/64px-College_Rule_PG_Model.png\",\r\n    \"Price\": \"This can be purchased from Tom Nook's store, or received from Tortimer on New Year's Day.\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"9fbf0254-938d-1287-bf48-6959b6ea3cfa","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"112a8f1f-e549-061f-b26f-c7f89e17c742","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":47,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('misc-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Miscellaneous Progress: ${count} / 25`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["81719585-fa5f-dda2-dd79-e66868c4b9b1"]}},{"name":"/Collection Pages/Furniture/Miscellaneous/Miscellaneous Logic","id":"1adb09e4-27ef-630e-d5e1-a3fa13756629","graph":{"connections":[{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-ID","toId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","toProperty":"in-ID"},{"fromId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","fromProperty":"out-ID","toId":"e6852009-72e0-47d2-69d5-472e02557f49","toProperty":"modelId"},{"fromId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","fromProperty":"out-Checked","toId":"e6852009-72e0-47d2-69d5-472e02557f49","toProperty":"prop-Checked"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Label","toId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","toProperty":"in-Label"},{"fromId":"b9c26d35-7468-3d69-d6ec-0991d20de00d","fromProperty":"id","toId":"567b87bb-a275-6e8a-1621-55776309e91a","toProperty":"in-ID"},{"fromId":"b9c26d35-7468-3d69-d6ec-0991d20de00d","fromProperty":"prop-Label","toId":"567b87bb-a275-6e8a-1621-55776309e91a","toProperty":"in-Label"},{"fromId":"b9c26d35-7468-3d69-d6ec-0991d20de00d","fromProperty":"prop-Image","toId":"567b87bb-a275-6e8a-1621-55776309e91a","toProperty":"in-Icon"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Label","toId":"f7232f89-554d-e554-6022-fc76c64942d4","toProperty":"text"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Icon","toId":"ad76b5c5-f549-7057-7a90-456a2e73d109","toProperty":"src"},{"fromId":"b9c26d35-7468-3d69-d6ec-0991d20de00d","fromProperty":"prop-Checked","toId":"567b87bb-a275-6e8a-1621-55776309e91a","toProperty":"in-Checked"},{"fromId":"b9c26d35-7468-3d69-d6ec-0991d20de00d","fromProperty":"prop-Price","toId":"567b87bb-a275-6e8a-1621-55776309e91a","toProperty":"in-Price"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Price","toId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","toProperty":"in-Price"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Icon","toId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","toProperty":"in-Icon"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Checked","toId":"f6f2320c-e213-f6a9-1e00-2ccb654c3d03","toProperty":"checked"},{"fromId":"f6f2320c-e213-f6a9-1e00-2ccb654c3d03","fromProperty":"checked","toId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","toProperty":"in-Checked"},{"fromId":"f6f2320c-e213-f6a9-1e00-2ccb654c3d03","fromProperty":"onChange","toId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","toProperty":"in-Changed"},{"fromId":"f6f2320c-e213-f6a9-1e00-2ccb654c3d03","fromProperty":"onChange","toId":"e6852009-72e0-47d2-69d5-472e02557f49","toProperty":"store"},{"fromId":"b9c26d35-7468-3d69-d6ec-0991d20de00d","fromProperty":"prop-Obtained","toId":"567b87bb-a275-6e8a-1621-55776309e91a","toProperty":"in-Obtained"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Obtained","toId":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","toProperty":"in-Obtained"},{"fromId":"567b87bb-a275-6e8a-1621-55776309e91a","fromProperty":"out-Price","toId":"f0856cbe-2908-cd98-afa5-b014fc5984cc","toProperty":"text"},{"fromId":"f6f2320c-e213-f6a9-1e00-2ccb654c3d03","fromProperty":"onChange","toId":"51cc071e-c1d3-569c-e114-9218066a9039","toProperty":"run"}],"roots":[{"id":"df8d6fab-8f1e-01cb-871a-f9e990fb53fb","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"54e2d8b4-d246-7e61-1bea-7777399e707a","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"834ef1c5-b02d-fc19-e011-85c45cd385b3","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"cd4706e3-f410-d284-1173-9f09594ea3a4","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"c73c5f4e-5206-308a-a685-d02d5411568a","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"eab7c482-5b71-f07f-58f6-2b8f15c79950","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c63d7df4-ee58-ee28-416e-3fc295b2038c","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"ad76b5c5-f549-7057-7a90-456a2e73d109","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f7232f89-554d-e554-6022-fc76c64942d4","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"a84217d1-c795-b580-c65b-4415c11ce530","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"f6f2320c-e213-f6a9-1e00-2ccb654c3d03","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"cc178d5d-7f76-4d88-d9d4-478652922dd4","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":35,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2ce3233a-6926-2d33-ce73-f93026570886","type":"Text","parameters":{"text":"Obtained from","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f0856cbe-2908-cd98-afa5-b014fc5984cc","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","marginTop":{"value":10,"unit":"px"},"alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"b9c26d35-7468-3d69-d6ec-0991d20de00d","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"e6852009-72e0-47d2-69d5-472e02557f49","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"567b87bb-a275-6e8a-1621-55776309e91a","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"82d971b8-af95-7e5a-0ced-9684ddfaeca8","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"51cc071e-c1d3-569c-e114-9218066a9039","type":"JavaScriptFunction","label":"Play Audio File","x":326,"y":664,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["df8d6fab-8f1e-01cb-871a-f9e990fb53fb"]}},{"name":"/Collection Pages/Furniture/Miscellaneous/Miscellaneous Logic/Options","id":"c95a06d7-2efb-8add-8646-e301c80783c3","graph":{"connections":[{"fromId":"ff6209ba-0ac0-a20e-3561-4e99c678d0df","fromProperty":"id","toId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","toProperty":"in-ID"},{"fromId":"ff6209ba-0ac0-a20e-3561-4e99c678d0df","fromProperty":"prop-Label","toId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","toProperty":"in-Label"},{"fromId":"ff6209ba-0ac0-a20e-3561-4e99c678d0df","fromProperty":"prop-Checked","toId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","toProperty":"in-Checked"},{"fromId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","fromProperty":"out-ID","toId":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","toProperty":"in-ID"},{"fromId":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","fromProperty":"out-ID","toId":"2a38f76e-cb2d-cafc-c9a3-ad2c4d458e23","toProperty":"modelId"},{"fromId":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","fromProperty":"out-Checked","toId":"2a38f76e-cb2d-cafc-c9a3-ad2c4d458e23","toProperty":"prop-Checked"},{"fromId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","fromProperty":"out-Label","toId":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","toProperty":"in-Label"},{"fromId":"ff6209ba-0ac0-a20e-3561-4e99c678d0df","fromProperty":"prop-Icon","toId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","toProperty":"in-Icon"},{"fromId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","fromProperty":"out-Icon","toId":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","toProperty":"in-Icon"},{"fromId":"2a38f76e-cb2d-cafc-c9a3-ad2c4d458e23","fromProperty":"stored","toId":"315432d2-9431-62a6-dba6-d9636101bb5a","toProperty":"Selection Changed"},{"fromId":"7a3c423d-f6e1-14bc-0dd0-952b1924df5f","fromProperty":"onChange","toId":"2a38f76e-cb2d-cafc-c9a3-ad2c4d458e23","toProperty":"store"},{"fromId":"7a3c423d-f6e1-14bc-0dd0-952b1924df5f","fromProperty":"onChange","toId":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","toProperty":"in-Changed"},{"fromId":"7a3c423d-f6e1-14bc-0dd0-952b1924df5f","fromProperty":"checked","toId":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","toProperty":"in-Checked"},{"fromId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","fromProperty":"out-Checked","toId":"7a3c423d-f6e1-14bc-0dd0-952b1924df5f","toProperty":"checked"},{"fromId":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","fromProperty":"out-Label","toId":"7a3c423d-f6e1-14bc-0dd0-952b1924df5f","toProperty":"label"}],"roots":[{"id":"9f6a7b0b-19fc-dcfd-ffc5-ca1567110c84","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"7a3c423d-f6e1-14bc-0dd0-952b1924df5f","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ff6209ba-0ac0-a20e-3561-4e99c678d0df","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"2a38f76e-cb2d-cafc-c9a3-ad2c4d458e23","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"5b68f07e-dcd8-8332-4e77-ebfd962f8027","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5ba6c6cd-28bc-d994-ed55-4ae15a567796","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"315432d2-9431-62a6-dba6-d9636101bb5a","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["9f6a7b0b-19fc-dcfd-ffc5-ca1567110c84"]}},{"name":"/Collection Pages/Furniture/Nook Store/Nook Store","id":"eca783d3-c74c-a63a-6852-1caa3e81bb23","graph":{"connections":[{"fromId":"33f82139-87d8-46e9-e9fd-1551ce8226bd","fromProperty":"items","toId":"e941f96b-9268-18a8-fc2a-82978c966bad","toProperty":"items"},{"fromId":"9a310189-fa45-6a36-a13d-336db69170cb","fromProperty":"out-Success","toId":"e941f96b-9268-18a8-fc2a-82978c966bad","toProperty":"refresh"},{"fromId":"18d83705-429a-06b8-c397-72098f7c373a","fromProperty":"out-CountText","toId":"303356ae-315e-8583-1cd4-e36cdf4d29c8","toProperty":"text"}],"roots":[{"id":"fae3918d-9099-c377-a7b4-1d849ccdc354","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Nook Store","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"nook-store","index":32}],"children":[{"id":"e46a14d3-c52f-c3e8-8e24-8abee91544d3","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"a1c70b22-58ca-93e2-bd99-9a9fb7278340","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"303356ae-315e-8583-1cd4-e36cdf4d29c8","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Nook Store Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"4bd404e4-1833-11e6-b4b4-d372001a244a","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"376c0560-881b-9c89-1b22-8626beed089e","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0ffa2384-032d-b737-34dd-3b73b3ff1be1","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/tom_nook.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"4ed5e586-877a-dafd-d6fd-3b5d5e3a493b","type":"Text","label":"","parameters":{"text":"Tom Nook's Store","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e941f96b-9268-18a8-fc2a-82978c966bad","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Nook Store/Nook Store Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"cbe6e138-7676-e4e8-0e0f-b55c26fdff62","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"33f82139-87d8-46e9-e9fd-1551ce8226bd","type":"Collection2","label":"Nook","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"nook-0001\",\r\n    \"Label\": \"Alarm clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Alarm_Clock_PG_Model.png\",\r\n    \"Price\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0002\",\r\n    \"Label\": \"Aloe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Aloe_PG_Model.png\",\r\n    \"Price\": \"1200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0003\",\r\n    \"Label\": \"Antique clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Antique_Clock_PG_Model.png\",\r\n    \"Price\": \"2350\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0004\",\r\n    \"Label\": \"Apple clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Apple_Clock_PG_Model.png\",\r\n    \"Price\": \"1200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0005\",\r\n    \"Label\": \"Apple TV\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Apple_TV_PG_Model.png\",\r\n    \"Price\": \"1600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0006\",\r\n    \"Label\": \"Asteroid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Asteroid_PG_Model.png\",\r\n    \"Price\": \"1800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0007\",\r\n    \"Label\": \"Azalea bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Azalea_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0008\",\r\n    \"Label\": \"Baby bear\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Baby_Bear_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0009\",\r\n    \"Label\": \"Barbecue\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Barbecue_PG_Model.png\",\r\n    \"Price\": \"1760\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0010\",\r\n    \"Label\": \"Barber's pole\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Barber's_Pole_PG_Model.png\",\r\n    \"Price\": \"1600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0011\",\r\n    \"Label\": \"Barrel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Barrel_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0012\",\r\n    \"Label\": \"Bear pole\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Bear_Pole_PG_Model.png\",\r\n    \"Price\": \"1400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0013\",\r\n    \"Label\": \"Big festive tree\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Big_Festive_Tree_PG_Model.png\",\r\n    \"Price\": \"2480\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0014\",\r\n    \"Label\": \"Billiard table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Billiard_Table_PG_Model.png\",\r\n    \"Price\": \"1800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0015\",\r\n    \"Label\": \"Bird bath\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Bird_Bath_PG_Model.png\",\r\n    \"Price\": \"1450\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0016\",\r\n    \"Label\": \"Bird feeder\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Bird_Feeder_PG_Model.png\",\r\n    \"Price\": \"1260\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0017\",\r\n    \"Label\": \"Birdcage\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Birdcage_PG_Model.png\",\r\n    \"Price\": \"1700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0018\",\r\n    \"Label\": \"Birdhouse\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Birdhouse_PG_Model.png\",\r\n    \"Price\": \"1620\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0019\",\r\n    \"Label\": \"Biwa lute\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Biwa_Lute_PG_Model.png\",\r\n    \"Price\": \"1800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0020\",\r\n    \"Label\": \"Black pawn\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Black_Pawn_PG_Model.png\",\r\n    \"Price\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0021\",\r\n    \"Label\": \"Blue bench\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Bench_PG_Model.png\",\r\n    \"Price\": \"1900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0022\",\r\n    \"Label\": \"Blue bookcase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Bookcase_PG_Model.png\",\r\n    \"Price\": \"1900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0023\",\r\n    \"Label\": \"Blue bureau\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Bureau_PG_Model.png\",\r\n    \"Price\": \"2160\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0024\",\r\n    \"Label\": \"Blue cabinet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Cabinet_PG_Model.png\",\r\n    \"Price\": \"2400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0025\",\r\n    \"Label\": \"Blue chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Chair_PG_Model.png\",\r\n    \"Price\": \"1900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0026\",\r\n    \"Label\": \"Blue clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Clock_PG_Model.png\",\r\n    \"Price\": \"1600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0027\",\r\n    \"Label\": \"Blue golf bag\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Golf_Bag_PG_Model.png\",\r\n    \"Price\": \"1600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0028\",\r\n    \"Label\": \"Blue vase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Vase_PG_Model.png\",\r\n    \"Price\": \"2500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0029\",\r\n    \"Label\": \"Blue wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Blue_Wardrobe_PG_Model.png\",\r\n    \"Price\": \"1920\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0030\",\r\n    \"Label\": \"Boxing barricade\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Boxing_Barricade_PG_Model.png\",\r\n    \"Price\": \"1050\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0031\",\r\n    \"Label\": \"Boxing mat\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Boxing_Mat_PG_Model.png\",\r\n    \"Price\": \"1180\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0032\",\r\n    \"Label\": \"Bromeliaceae\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Bromeliaceae_PG_Model.png\",\r\n    \"Price\": \"1300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0033\",\r\n    \"Label\": \"Bug zapper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Bug_Zapper_PG_Model.png\",\r\n    \"Price\": \"1200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0034\",\r\n    \"Label\": \"Bus stop\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Bus_Stop_PG_Model.png\",\r\n    \"Price\": \"820\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0035\",\r\n    \"Label\": \"Cabana bookcase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabana_Bookcase_PG_Model.png\",\r\n    \"Price\": \"2400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0036\",\r\n    \"Label\": \"Cabana dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabana_Dresser_PG_Model.png\",\r\n    \"Price\": \"2400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0037\",\r\n    \"Label\": \"Cabana lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabana_Lamp_PG_Model.png\",\r\n    \"Price\": \"1700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0038\",\r\n    \"Label\": \"Cabana screen\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabana_Screen_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0039\",\r\n    \"Label\": \"Cabana table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabana_Table_PG_Model.png\",\r\n    \"Price\": \"1800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0040\",\r\n    \"Label\": \"Cabana vanity\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabana_Vanity_PG_Model.png\",\r\n    \"Price\": \"1800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0041\",\r\n    \"Label\": \"Cabana wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabana_Wardrobe_PG_Model.png\",\r\n    \"Price\": \"2240\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0042\",\r\n    \"Label\": \"Cabin armchair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabin_Armchair_PG_Model.png\",\r\n    \"Price\": \"2280\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0043\",\r\n    \"Label\": \"Cabin bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabin_Bed_PG_Model.png\",\r\n    \"Price\": \"2400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0044\",\r\n    \"Label\": \"Cabin clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabin_Clock_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0045\",\r\n    \"Label\": \"Cabin couch\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabin_Couch_PG_Model.png\",\r\n    \"Price\": \"2480\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0046\",\r\n    \"Label\": \"Cabin low table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabin_Low_Table_PG_Model.png\",\r\n    \"Price\": \"2100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0047\",\r\n    \"Label\": \"Cabin table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabin_Table_PG_Model.png\",\r\n    \"Price\": \"2100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0048\",\r\n    \"Label\": \"Cabin wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cabin_Wardrobe_PG_Model.png\",\r\n    \"Price\": \"2480\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0049\",\r\n    \"Label\": \"Cactus\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cactus_PG_Model.png\",\r\n    \"Price\": \"1700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0050\",\r\n    \"Label\": \"Caladium\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Caladium_PG_Model.png\",\r\n    \"Price\": \"1300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0051\",\r\n    \"Label\": \"Calligraphy pad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Calligraphy_Pad_PG_Model.png\",\r\n    \"Price\": \"860\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0052\",\r\n    \"Label\": \"Candy machine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Candy_Machine_PG_Model.png\",\r\n    \"Price\": \"2200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0053\",\r\n    \"Label\": \"CD player\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-CD_Player_PG_Model.png\",\r\n    \"Price\": \"1600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0054\",\r\n    \"Label\": \"Cello\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cello_PG_Model.png\",\r\n    \"Price\": \"1800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0055\",\r\n    \"Label\": \"Chalk board\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Chalk_Board_PG_Model.png\",\r\n    \"Price\": \"1400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0056\",\r\n    \"Label\": \"Chess table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Chess_Table_PG_Model.png\",\r\n    \"Price\": \"2200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0057\",\r\n    \"Label\": \"Classic bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Classic_Bed_PG_Model.png\",\r\n    \"Price\": \"2520\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0058\",\r\n    \"Label\": \"Classic cabinet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Classic_Cabinet_PG_Model.png\",\r\n    \"Price\": \"2560\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0059\",\r\n    \"Label\": \"Classic chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Classic_Chair_PG_Model.png\",\r\n    \"Price\": \"1800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0060\",\r\n    \"Label\": \"Classic clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Classic_Clock_PG_Model.png\",\r\n    \"Price\": \"2180\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0061\",\r\n    \"Label\": \"Classic desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Classic_Desk_PG_Model.png\",\r\n    \"Price\": \"2200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0062\",\r\n    \"Label\": \"Classic sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Classic_Sofa_PG_Model.png\",\r\n    \"Price\": \"2240\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0063\",\r\n    \"Label\": \"Classic table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Classic_Table_PG_Model.png\",\r\n    \"Price\": \"1600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0064\",\r\n    \"Label\": \"Coconut palm\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Coconut_Palm_PG_Model.png\",\r\n    \"Price\": \"1200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0065\",\r\n    \"Label\": \"Coffee machine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Coffee_Machine_PG_Model.png\",\r\n    \"Price\": \"2100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0066\",\r\n    \"Label\": \"Conga drum\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Conga_Drum_PG_Model.png\",\r\n    \"Price\": \"1600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0067\",\r\n    \"Label\": \"Corn plant\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Corn_Plant_PG_Model.png\",\r\n    \"Price\": \"1300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0068\",\r\n    \"Label\": \"Country guitar\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Country_Guitar_PG_Model.png\",\r\n    \"Price\": \"1700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0069\",\r\n    \"Label\": \"Cow skull\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cow_Skull_PG_Model.png\",\r\n    \"Price\": \"1020\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0070\",\r\n    \"Label\": \"Cream sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cream_Sofa_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0071\",\r\n    \"Label\": \"Croton\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Croton_PG_Model.png\",\r\n    \"Price\": \"1300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0072\",\r\n    \"Label\": \"Cubby hole\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cubby_Hole_PG_Model.png\",\r\n    \"Price\": \"2200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0073\",\r\n    \"Label\": \"Cube clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Cube_Clock_PG_Model.png\",\r\n    \"Price\": \"1100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0074\",\r\n    \"Label\": \"Daffodil\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Daffodil_PG_Model.png\",\r\n    \"Price\": \"680\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0075\",\r\n    \"Label\": \"Daffodil chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Daffodil_Chair_PG_Model.png\",\r\n    \"Price\": \"1400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0076\",\r\n    \"Label\": \"Daffodil table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Daffodil_Table_PG_Model.png\",\r\n    \"Price\": \"1900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0077\",\r\n    \"Label\": \"Dark stone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Dark_Stone_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0078\",\r\n    \"Label\": \"Desert cactus\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Desert_Cactus_PG_Model.png\",\r\n    \"Price\": \"890\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0079\",\r\n    \"Label\": \"Detour arrow\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Detour_Arrow_PG_Model.png\",\r\n    \"Price\": \"600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0080\",\r\n    \"Label\": \"Detour sign\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Detour_Sign_PG_Model.png\",\r\n    \"Price\": \"830\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0081\",\r\n    \"Label\": \"Dirt model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Dirt_Model_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0082\",\r\n    \"Label\": \"Djimbe drum\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Djimbe_Drum_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0083\",\r\n    \"Label\": \"Eagle pole\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Eagle_Pole_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0084\",\r\n    \"Label\": \"Elephant slide\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Elephant_Slide_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0085\",\r\n    \"Label\": \"Emi figurine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Emi_Figurine_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0086\",\r\n    \"Label\": \"Executive toy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Executive_Toy_PG_Model.png\",\r\n    \"Price\": \"1,100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0087\",\r\n    \"Label\": \"Exotic bench\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Exotic_Bench_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0088\",\r\n    \"Label\": \"Exotic bureau\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Exotic_Bureau_PG_Model.png\",\r\n    \"Price\": \"2,180\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0089\",\r\n    \"Label\": \"Exotic chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Exotic_Chair_PG_Model.png\",\r\n    \"Price\": \"2,180\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0090\",\r\n    \"Label\": \"Exotic chest\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Exotic_Chest_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0091\",\r\n    \"Label\": \"Exotic end table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Exotic_End_Table_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0092\",\r\n    \"Label\": \"Exotic screen\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Exotic_Screen_PG_Model.png\",\r\n    \"Price\": \"2,250\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0093\",\r\n    \"Label\": \"Exotic wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Exotic_Wardrobe_PG_Model.png\",\r\n    \"Price\": \"2,180\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0094\",\r\n    \"Label\": \"Extinguisher\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Extinguisher_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0095\",\r\n    \"Label\": \"Fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Fan_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0096\",\r\n    \"Label\": \"Fan palm\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Fan_Palm_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0097\",\r\n    \"Label\": \"Festive candle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Festive_Candle_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0098\",\r\n    \"Label\": \"Festive flag\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Festive_Flag_PG_Model.png\",\r\n    \"Price\": \"680\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0099\",\r\n    \"Label\": \"Festive tree\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Festive_Tree_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0100\",\r\n    \"Label\": \"Flagman sign\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Flagman_Sign_PG_Model.png\",\r\n    \"Price\": \"850\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0101\",\r\n    \"Label\": \"Flip-top desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Flip-Top_Desk_PG_Model.png\",\r\n    \"Price\": \"1,320\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0102\",\r\n    \"Label\": \"Flying saucer\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Flying_Saucer_PG_Model.png\",\r\n    \"Price\": \"2,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0103\",\r\n    \"Label\": \"Folding chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Folding_Chair_PG_Model.png\",\r\n    \"Price\": \"600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0104\",\r\n    \"Label\": \"Folk guitar\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Folk_Guitar_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0105\",\r\n    \"Label\": \"Froggy chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Froggy_Chair_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0106\",\r\n    \"Label\": \"G logo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-G_Logo_PG_Model.png\",\r\n    \"Price\": \"2,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0107\",\r\n    \"Label\": \"Garbage can\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Garbage_Can_PG_Model.png\",\r\n    \"Price\": \"500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0108\",\r\n    \"Label\": \"Garden stone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Garden_Stone_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0109\",\r\n    \"Label\": \"Gerbera\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Gerbera_PG_Model.png\",\r\n    \"Price\": \"780\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0110\",\r\n    \"Label\": \"Glass-top table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Glass-Top_Table_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0111\",\r\n    \"Label\": \"Globe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Globe_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0112\",\r\n    \"Label\": \"Glow clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Glow_Clock_PG_Model.png\",\r\n    \"Price\": \"1,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0113\",\r\n    \"Label\": \"Gold econo-chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Gold_Econo-Chair_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0114\",\r\n    \"Label\": \"Gold stereo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Gold_Stereo_PG_Model.png\",\r\n    \"Price\": \"2,640\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0115\",\r\n    \"Label\": \"Grapefruit table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Grapefruit_Table_PG_Model.png\",\r\n    \"Price\": \"1,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0116\",\r\n    \"Label\": \"Grass model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Grass_Model_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0117\",\r\n    \"Label\": \"Green bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Bed_PG_Model.png\",\r\n    \"Price\": \"2,160\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0118\",\r\n    \"Label\": \"Green bench\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Bench_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0119\",\r\n    \"Label\": \"Green chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Chair_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0120\",\r\n    \"Label\": \"Green counter\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Counter_PG_Model.png\",\r\n    \"Price\": \"2,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0121\",\r\n    \"Label\": \"Green desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Desk_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0122\",\r\n    \"Label\": \"Green drum\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Drum_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0123\",\r\n    \"Label\": \"Green golf bag\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Golf_Bag_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0124\",\r\n    \"Label\": \"Green lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Lamp_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0125\",\r\n    \"Label\": \"Green table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Green_Table_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0126\",\r\n    \"Label\": \"Hammock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Hammock_PG_Model.png\",\r\n    \"Price\": \"1,320\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0127\",\r\n    \"Label\": \"Handcart\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Handcart_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0128\",\r\n    \"Label\": \"Harp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Harp_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0129\",\r\n    \"Label\": \"Hawthorn bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Hawthorn_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0130\",\r\n    \"Label\": \"Haz-mat barrel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Haz-Mat_Barrel_PG_Model.png\",\r\n    \"Price\": \"830\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0131\",\r\n    \"Label\": \"Holly bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Holly_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0132\",\r\n    \"Label\": \"Iris chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Iris_Chair_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0133\",\r\n    \"Label\": \"Iris table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Iris_Table_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0134\",\r\n    \"Label\": \"Iron frame\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Iron_Frame_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0135\",\r\n    \"Label\": \"Jackhammer\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Jackhammer_PG_Model.png\",\r\n    \"Price\": \"1,880\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0136\",\r\n    \"Label\": \"Jade econo-chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Jade_Econo-Chair_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0137\",\r\n    \"Label\": \"Jasmine bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Jasmine_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0138\",\r\n    \"Label\": \"Jersey barrier\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Jersey_Barrier_PG_Model.png\",\r\n    \"Price\": \"1,050\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0139\",\r\n    \"Label\": \"Keg\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Keg_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0140\",\r\n    \"Label\": \"Keiko figurine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Keiko_Figurine_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0141\",\r\n    \"Label\": \"Kiddie bookcase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kiddie_Bookcase_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0142\",\r\n    \"Label\": \"Kiddie bureau\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kiddie_Bureau_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0143\",\r\n    \"Label\": \"Kiddie chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kiddie_Chair_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0144\",\r\n    \"Label\": \"Kiddie couch\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kiddie_Couch_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0145\",\r\n    \"Label\": \"Kiddie dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kiddie_Dresser_PG_Model.png\",\r\n    \"Price\": \"2,150\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0146\",\r\n    \"Label\": \"Kiddie table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kiddie_Table_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0147\",\r\n    \"Label\": \"Kiddie wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kiddie_Wardrobe_PG_Model.png\",\r\n    \"Price\": \"2,180\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0148\",\r\n    \"Label\": \"Kitschy clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Kitschy_Clock_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0149\",\r\n    \"Label\": \"Lady palm\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lady_Palm_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0150\",\r\n    \"Label\": \"Lawn chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lawn_Chair_PG_Model.png\",\r\n    \"Price\": \"1,180\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0151\",\r\n    \"Label\": \"Leaning stone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Leaning_Stone_PG_Model.png\",\r\n    \"Price\": \"2,100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0152\",\r\n    \"Label\": \"Lefty desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lefty_Desk_PG_Model.png\",\r\n    \"Price\": \"1,240\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0153\",\r\n    \"Label\": \"Lemon table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lemon_Table_PG_Model.png\",\r\n    \"Price\": \"1,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0154\",\r\n    \"Label\": \"Lily-pad table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lily-Pad_Table_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0155\",\r\n    \"Label\": \"Lime chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lime_Chair_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0156\",\r\n    \"Label\": \"Lovely armchair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lovely_Armchair_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0157\",\r\n    \"Label\": \"Lovely bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lovely_Bed_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0158\",\r\n    \"Label\": \"Lovely chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lovely_Chair_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0159\",\r\n    \"Label\": \"Lovely dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lovely_Dresser_PG_Model.png\",\r\n    \"Price\": \"2,160\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0160\",\r\n    \"Label\": \"Lovely lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lovely_Lamp_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0161\",\r\n    \"Label\": \"Lovely table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lovely_Table_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0162\",\r\n    \"Label\": \"Lovely vanity\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lovely_Vanity_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0163\",\r\n    \"Label\": \"Low lantern\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Low_Lantern_PG_Model.png\",\r\n    \"Price\": \"2,100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0164\",\r\n    \"Label\": \"Lunar lander\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lunar_Lander_PG_Model.png\",\r\n    \"Price\": \"3,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0165\",\r\n    \"Label\": \"Lunar rover\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Lunar_Rover_PG_Model.png\",\r\n    \"Price\": \"2,560\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0166\",\r\n    \"Label\": \"Maki figurine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Maki_Figurine_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0167\",\r\n    \"Label\": \"Mama bear\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Mama_Bear_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0168\",\r\n    \"Label\": \"Manhole cover\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Manhole_Cover_PG_Model.png\",\r\n    \"Price\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0169\",\r\n    \"Label\": \"Maple bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Maple_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0170\",\r\n    \"Label\": \"Master Sword\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Master_Sword_PG_Model.png\",\r\n    \"Price\": \"2,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0171\",\r\n    \"Label\": \"Melon chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Melon_Chair_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0172\",\r\n    \"Label\": \"Men at work sign\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Men_at_Work_Sign_PG_Model.png\",\r\n    \"Price\": \"850\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0173\",\r\n    \"Label\": \"Merge sign\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Merge_Sign_PG_Model.png\",\r\n    \"Price\": \"850\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0174\",\r\n    \"Label\": \"Metronome\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Metronome_PG_Model.png\",\r\n    \"Price\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0175\",\r\n    \"Label\": \"Mochi pestle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Mochi_Pestle_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0176\",\r\n    \"Label\": \"Modern bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Modern_Bed_PG_Model.png\",\r\n    \"Price\": \"2,320\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0177\",\r\n    \"Label\": \"Modern chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Modern_Chair_PG_Model.png\",\r\n    \"Price\": \"1,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0178\",\r\n    \"Label\": \"Modern desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Modern_Desk_PG_Model.png\",\r\n    \"Price\": \"2,480\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0179\",\r\n    \"Label\": \"Modern dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Modern_Dresser_PG_Model.png\",\r\n    \"Price\": \"2,250\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0180\",\r\n    \"Label\": \"Modern lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Modern_Lamp_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0181\",\r\n    \"Label\": \"Modern sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Modern_Sofa_PG_Model.png\",\r\n    \"Price\": \"2,620\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0182\",\r\n    \"Label\": \"Modern table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Modern_Table_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0183\",\r\n    \"Label\": \"Mop\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Mop_PG_Model.png\",\r\n    \"Price\": \"900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0184\",\r\n    \"Label\": \"Mossy stone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Mossy_Stone_PG_Model.png\",\r\n    \"Price\": \"2,160\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0185\",\r\n    \"Label\": \"Mr. Flamingo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Mr._Flamingo_PG_Model.png\",\r\n    \"Price\": \"1,530\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0186\",\r\n    \"Label\": \"Mrs. Flamingo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Mrs._Flamingo_PG_Model.png\",\r\n    \"Price\": \"1,530\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0187\",\r\n    \"Label\": \"Mugho bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Mugho_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0188\",\r\n    \"Label\": \"N logo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-N_Logo_PG_Model.png\",\r\n    \"Price\": \"2,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0189\",\r\n    \"Label\": \"Naomi figurine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Naomi_Figurine_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0190\",\r\n    \"Label\": \"Neutral corner\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Neutral_Corner_PG_Model.png\",\r\n    \"Price\": \"5,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0191\",\r\n    \"Label\": \"Odd clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Odd_Clock_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0192\",\r\n    \"Label\": \"Office chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Office_Chair_PG_Model.png\",\r\n    \"Price\": \"1,100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0193\",\r\n    \"Label\": \"Office desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Office_Desk_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0194\",\r\n    \"Label\": \"Office locker\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Office_Locker_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0195\",\r\n    \"Label\": \"Oil drum\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Oil_Drum_PG_Model.png\",\r\n    \"Price\": \"840\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0196\",\r\n    \"Label\": \"Orange box\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Orange_Box_PG_Model.png\",\r\n    \"Price\": \"80\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0197\",\r\n    \"Label\": \"Orange chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Orange_Chair_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0198\",\r\n    \"Label\": \"Orange cone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Orange_Cone_PG_Model.png\",\r\n    \"Price\": \"600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0199\",\r\n    \"Label\": \"Owl clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Owl_Clock_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0200\",\r\n    \"Label\": \"Pachira\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pachira_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0201\",\r\n    \"Label\": \"Papa bear\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Papa_Bear_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0202\",\r\n    \"Label\": \"Pear dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pear_Dresser_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0203\",\r\n    \"Label\": \"Pear wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pear_Wardrobe_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0204\",\r\n    \"Label\": \"Phonograph\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Phonograph_PG_Model.png\",\r\n    \"Price\": \"1,840\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0205\",\r\n    \"Label\": \"Picnic table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Picnic_Table_PG_Model.png\",\r\n    \"Price\": \"1,390\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0206\",\r\n    \"Label\": \"Pine bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pine_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0207\",\r\n    \"Label\": \"Pine chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pine_Chair_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0208\",\r\n    \"Label\": \"Pine table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pine_Table_PG_Model.png\",\r\n    \"Price\": \"2,280\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0209\",\r\n    \"Label\": \"Pineapple bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pineapple_Bed_PG_Model.png\",\r\n    \"Price\": \"1,990\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0210\",\r\n    \"Label\": \"Pond lantern\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pond_Lantern_PG_Model.png\",\r\n    \"Price\": \"1,980\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0211\",\r\n    \"Label\": \"Ponderosa bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ponderosa_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0212\",\r\n    \"Label\": \"Potbelly stove\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Potbelly_Stove_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0213\",\r\n    \"Label\": \"Pothos\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Pothos_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0214\",\r\n    \"Label\": \"Quince bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Quince_Bonsai_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0215\",\r\n    \"Label\": \"Radiator\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Radiator_PG_Model.png\",\r\n    \"Price\": \"2,380\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0216\",\r\n    \"Label\": \"Ranch armchair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ranch_Armchair_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0217\",\r\n    \"Label\": \"Ranch bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ranch_Bed_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0218\",\r\n    \"Label\": \"Ranch bookcase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ranch_Bookcase_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0219\",\r\n    \"Label\": \"Ranch couch\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ranch_Couch_PG_Model.png\",\r\n    \"Price\": \"2,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0220\",\r\n    \"Label\": \"Ranch table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ranch_Table_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0221\",\r\n    \"Label\": \"Ranch tea table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ranch_Tea_Table_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0222\",\r\n    \"Label\": \"Ranch wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ranch_Wardrobe_PG_Model.png\",\r\n    \"Price\": \"3,050\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0223\",\r\n    \"Label\": \"Raven pole\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Raven_Pole_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0224\",\r\n    \"Label\": \"Red armchair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Red_Armchair_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0225\",\r\n    \"Label\": \"Red boom box\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Red_Boom_Box_PG_Model.png\",\r\n    \"Price\": \"1,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0226\",\r\n    \"Label\": \"Red clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Red_Clock_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0227\",\r\n    \"Label\": \"Red sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Red_Sofa_PG_Model.png\",\r\n    \"Price\": \"2,050\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0228\",\r\n    \"Label\": \"Red vase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Red_Vase_PG_Model.png\",\r\n    \"Price\": \"2,450\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0229\",\r\n    \"Label\": \"Reel-to-reel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Reel-to-Reel_PG_Model.png\",\r\n    \"Price\": \"2000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0230\",\r\n    \"Label\": \"Refrigerator\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Refrigerator_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0231\",\r\n    \"Label\": \"Regal armoire\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Regal_Armoire_PG_Model.png\",\r\n    \"Price\": \"3,820\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0232\",\r\n    \"Label\": \"Regal bookcase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Regal_Bookcase_PG_Model.png\",\r\n    \"Price\": \"3,120\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0233\",\r\n    \"Label\": \"Regal dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Regal_Dresser_PG_Model.png\",\r\n    \"Price\": \"3,520\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0234\",\r\n    \"Label\": \"Regal lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Regal_Lamp_PG_Model.png\",\r\n    \"Price\": \"2,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0235\",\r\n    \"Label\": \"Regal sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Regal_Sofa_PG_Model.png\",\r\n    \"Price\": \"3,100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0236\",\r\n    \"Label\": \"Regal table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Regal_Table_PG_Model.png\",\r\n    \"Price\": \"2,540\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0237\",\r\n    \"Label\": \"Regal vanity\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Regal_Vanity_PG_Model.png\",\r\n    \"Price\": \"3,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0238\",\r\n    \"Label\": \"Retro stereo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Retro_Stereo_PG_Model.png\",\r\n    \"Price\": \"2,160\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0239\",\r\n    \"Label\": \"Retro TV\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Retro_TV_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0240\",\r\n    \"Label\": \"Righty desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Righty_Desk_PG_Model.png\",\r\n    \"Price\": \"1,240\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0241\",\r\n    \"Label\": \"Ringside table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ringside_Table_PG_Model.png\",\r\n    \"Price\": \"1,320\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0242\",\r\n    \"Label\": \"Rock guitar\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Rock_Guitar_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0243\",\r\n    \"Label\": \"Rocket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Rocket_PG_Model.png\",\r\n    \"Price\": \"2,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0244\",\r\n    \"Label\": \"Rocking chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Rocking_Chair_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0245\",\r\n    \"Label\": \"Round cactus\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Round_Cactus_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0246\",\r\n    \"Label\": \"Rubber tree\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Rubber_Tree_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0247\",\r\n    \"Label\": \"Ruby econo-chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Ruby_Econo-Chair_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0248\",\r\n    \"Label\": \"Sandbag\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Sandbag_PG_Model.png\",\r\n    \"Price\": \"3,190\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0249\",\r\n    \"Label\": \"Satellite\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Satellite_PG_Model.png\",\r\n    \"Price\": \"2,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0250\",\r\n    \"Label\": \"Saw horse\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Saw_Horse_PG_Model.png\",\r\n    \"Price\": \"900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0251\",\r\n    \"Label\": \"Scale\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Scale_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0252\",\r\n    \"Label\": \"School desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-School_Desk_PG_Model.png\",\r\n    \"Price\": \"1,320\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0253\",\r\n    \"Label\": \"Science table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Science_Table_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0254\",\r\n    \"Label\": \"Sewing machine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Sewing_Machine_PG_Model.png\",\r\n    \"Price\": \"1,350\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0255\",\r\n    \"Label\": \"Shrine lantern\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Shrine_Lantern_PG_Model.png\",\r\n    \"Price\": \"1,980\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0256\",\r\n    \"Label\": \"Slot machine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Slot_Machine_PG_Model.png\",\r\n    \"Price\": \"777\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0257\",\r\n    \"Label\": \"Snake plant\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Snake_Plant_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0258\",\r\n    \"Label\": \"Soda machine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Soda_Machine_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0259\",\r\n    \"Label\": \"Space heater\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Space_Heater_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0260\",\r\n    \"Label\": \"Space shuttle\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Space_Shuttle_PG_Model.png\",\r\n    \"Price\": \"2,780\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0261\",\r\n    \"Label\": \"Space station\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Space_Station_PG_Model.png\",\r\n    \"Price\": \"2,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0262\",\r\n    \"Label\": \"Spaceman Sam\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Spaceman_Sam_PG_Model.png\",\r\n    \"Price\": \"2,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0263\",\r\n    \"Label\": \"Speed bag\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Speed_Bag_PG_Model.png\",\r\n    \"Price\": \"2,990\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0264\",\r\n    \"Label\": \"Speed sign\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Speed_Sign_PG_Model.png\",\r\n    \"Price\": \"870\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0265\",\r\n    \"Label\": \"Sprinkler\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Sprinkler_PG_Model.png\",\r\n    \"Price\": \"1,640\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0266\",\r\n    \"Label\": \"Standing stone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Standing_Stone_PG_Model.png\",\r\n    \"Price\": \"2,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0267\",\r\n    \"Label\": \"Stone couple\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Stone_Couple_PG_Model.png\",\r\n    \"Price\": \"2,380\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0268\",\r\n    \"Label\": \"Storefront\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Storefront_PG_Model.png\",\r\n    \"Price\": \"3,680\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0269\",\r\n    \"Label\": \"Stove\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Stove_PG_Model.png\",\r\n    \"Price\": \"1,980\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0270\",\r\n    \"Label\": \"Sunflower\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Sunflower_PG_Model.png\",\r\n    \"Price\": \"980\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0271\",\r\n    \"Label\": \"Table tennis\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Table_Tennis_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0272\",\r\n    \"Label\": \"Taiko drum\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Taiko_Drum_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0273\",\r\n    \"Label\": \"Tall cactus\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tall_Cactus_PG_Model.png\",\r\n    \"Price\": \"1,700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0274\",\r\n    \"Label\": \"Tall lantern\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tall_Lantern_PG_Model.png\",\r\n    \"Price\": \"1,980\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0275\",\r\n    \"Label\": \"Tape deck\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tape_Deck_PG_Model.png\",\r\n    \"Price\": \"1,980\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0276\",\r\n    \"Label\": \"Tea set\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tea_Set_PG_Model.png\",\r\n    \"Price\": \"300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0277\",\r\n    \"Label\": \"Tea vase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tea_Vase_PG_Model.png\",\r\n    \"Price\": \"2,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0278\",\r\n    \"Label\": \"Teacher's chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Teacher's_Chair_PG_Model.png\",\r\n    \"Price\": \"1,440\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0279\",\r\n    \"Label\": \"Teacher's desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Teacher's_Desk_PG_Model.png\",\r\n    \"Price\": \"1,580\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0280\",\r\n    \"Label\": \"Tiki torch\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tiki_Torch_PG_Model.png\",\r\n    \"Price\": \"870\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0281\",\r\n    \"Label\": \"Toilet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Toilet_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0282\",\r\n    \"Label\": \"Track model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Track_Model_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0283\",\r\n    \"Label\": \"Traffic cone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Traffic_Cone_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0284\",\r\n    \"Label\": \"Train car model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Train_Car_Model_PG_Model.png\",\r\n    \"Price\": \"2,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0285\",\r\n    \"Label\": \"Train set\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Train_Set_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0286\",\r\n    \"Label\": \"Trash bin\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Trash_Bin_PG_Model.png\",\r\n    \"Price\": \"500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0287\",\r\n    \"Label\": \"Tulip chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tulip_Chair_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0288\",\r\n    \"Label\": \"Tulip table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tulip_Table_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0289\",\r\n    \"Label\": \"Tumbleweed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Tumbleweed_PG_Model.png\",\r\n    \"Price\": \"520\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0290\",\r\n    \"Label\": \"Vaulting horse\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Vaulting_Horse_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0291\",\r\n    \"Label\": \"Vibraphone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Vibraphone_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0292\",\r\n    \"Label\": \"Violin\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Violin_PG_Model.png\",\r\n    \"Price\": \"2,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0293\",\r\n    \"Label\": \"Wagon wheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Wagon_Wheel_PG_Model.png\",\r\n    \"Price\": \"1,230\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0294\",\r\n    \"Label\": \"Water bird\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Water_Bird_PG_Model.png\",\r\n    \"Price\": \"1,400\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0295\",\r\n    \"Label\": \"Watering trough\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Watering_Trough_PG_Model.png\",\r\n    \"Price\": \"1,100\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0296\",\r\n    \"Label\": \"Watermelon chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Watermelon_Chair_PG_Model.png\",\r\n    \"Price\": \"1,300\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0297\",\r\n    \"Label\": \"Watermelon table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Watermelon_Table_PG_Model.png\",\r\n    \"Price\": \"1,800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0298\",\r\n    \"Label\": \"Weeping fig\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Weeping_Fig_PG_Model.png\",\r\n    \"Price\": \"1,200\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0299\",\r\n    \"Label\": \"Weight bench\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Weight_Bench_PG_Model.png\",\r\n    \"Price\": \"3,590\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0300\",\r\n    \"Label\": \"Western fence\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Western_Fence_PG_Model.png\",\r\n    \"Price\": \"880\",\r\n    \"Checked\": \"\"\r\n  },\r\n    {\r\n    \"id\": \"nook-0301\",\r\n    \"Label\": \"Wet roadway sign\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Wet_Roadway_Sign_PG_Model.png\",\r\n    \"Price\": \"850\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0302\",\r\n    \"Label\": \"White boom box\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-White_Boom_Box_PG_Model.png\",\r\n    \"Price\": \"1,500\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0303\",\r\n    \"Label\": \"White golf bag\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-White_Golf_Bag_PG_Model.png\",\r\n    \"Price\": \"1,600\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0304\",\r\n    \"Label\": \"White pawn\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-White_Pawn_PG_Model.png\",\r\n    \"Price\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0305\",\r\n    \"Label\": \"Wobbelina\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Wobbelina_PG_Model.png\",\r\n    \"Price\": \"700\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0306\",\r\n    \"Label\": \"Writing chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Writing_Chair_PG_Model.png\",\r\n    \"Price\": \"1000\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0307\",\r\n    \"Label\": \"Writing desk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Writing_Desk_PG_Model.png\",\r\n    \"Price\": \"1,900\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0308\",\r\n    \"Label\": \"Yoko figurine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Yoko_Figurine_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"nook-0309\",\r\n    \"Label\": \"Yuki figurine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/nook_store/64px-Yuki_Figurine_PG_Model.png\",\r\n    \"Price\": \"800\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"9a310189-fa45-6a36-a13d-336db69170cb","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"18d83705-429a-06b8-c397-72098f7c373a","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":47,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('nook-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Nook Store Progress: ${count} / 309`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["fae3918d-9099-c377-a7b4-1d849ccdc354"]}},{"name":"/Collection Pages/Furniture/Nook Store/Nook Store Logic","id":"edb61544-fac0-211f-5500-5e85e2ca59d3","graph":{"connections":[{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-ID","toId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","toProperty":"in-ID"},{"fromId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","fromProperty":"out-ID","toId":"c69c3f22-3924-81f1-b0af-7543e7400bfa","toProperty":"modelId"},{"fromId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","fromProperty":"out-Checked","toId":"c69c3f22-3924-81f1-b0af-7543e7400bfa","toProperty":"prop-Checked"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Label","toId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","toProperty":"in-Label"},{"fromId":"e391fc4a-dffe-50b6-a8f9-4cb2f3626866","fromProperty":"id","toId":"19115adb-e5f3-82cc-1e6b-8af557a58646","toProperty":"in-ID"},{"fromId":"e391fc4a-dffe-50b6-a8f9-4cb2f3626866","fromProperty":"prop-Label","toId":"19115adb-e5f3-82cc-1e6b-8af557a58646","toProperty":"in-Label"},{"fromId":"e391fc4a-dffe-50b6-a8f9-4cb2f3626866","fromProperty":"prop-Image","toId":"19115adb-e5f3-82cc-1e6b-8af557a58646","toProperty":"in-Icon"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Label","toId":"1f65b8e1-8325-5297-e550-b8c8a5fab62a","toProperty":"text"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Icon","toId":"185d2917-29f7-cc90-b77d-793f695db7bd","toProperty":"src"},{"fromId":"e391fc4a-dffe-50b6-a8f9-4cb2f3626866","fromProperty":"prop-Checked","toId":"19115adb-e5f3-82cc-1e6b-8af557a58646","toProperty":"in-Checked"},{"fromId":"e391fc4a-dffe-50b6-a8f9-4cb2f3626866","fromProperty":"prop-Price","toId":"19115adb-e5f3-82cc-1e6b-8af557a58646","toProperty":"in-Price"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Price","toId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","toProperty":"in-Price"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Icon","toId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","toProperty":"in-Icon"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Checked","toId":"65820a43-c082-d0e3-857f-3171aa924df8","toProperty":"checked"},{"fromId":"65820a43-c082-d0e3-857f-3171aa924df8","fromProperty":"checked","toId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","toProperty":"in-Checked"},{"fromId":"65820a43-c082-d0e3-857f-3171aa924df8","fromProperty":"onChange","toId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","toProperty":"in-Changed"},{"fromId":"65820a43-c082-d0e3-857f-3171aa924df8","fromProperty":"onChange","toId":"c69c3f22-3924-81f1-b0af-7543e7400bfa","toProperty":"store"},{"fromId":"e391fc4a-dffe-50b6-a8f9-4cb2f3626866","fromProperty":"prop-Obtained","toId":"19115adb-e5f3-82cc-1e6b-8af557a58646","toProperty":"in-Obtained"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Obtained","toId":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","toProperty":"in-Obtained"},{"fromId":"19115adb-e5f3-82cc-1e6b-8af557a58646","fromProperty":"out-Price","toId":"a2b7410b-be11-7159-feba-e4774156f31b","toProperty":"text"},{"fromId":"65820a43-c082-d0e3-857f-3171aa924df8","fromProperty":"onChange","toId":"5472b20c-940f-b403-8662-23bb59373f4a","toProperty":"run"}],"roots":[{"id":"6fd96ad4-b05c-28bb-ec11-a5c693430046","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6da07e76-2512-b850-1442-359966daaec2","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7f45d35e-3b76-8609-1c63-9237a70819ea","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"baf16ef6-587c-59a9-9687-f8e7fa9fcaeb","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"4a383429-8475-4f5d-2f00-d42c07a8025c","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"ac4dda65-fbd1-8d2f-ca26-154ae7f8241d","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"bc7f3bd5-d3ba-f684-b257-17a95acd554a","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"fd6ce59d-ef57-4fa7-fa61-c547b373bba0","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"185d2917-29f7-cc90-b77d-793f695db7bd","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1f65b8e1-8325-5297-e550-b8c8a5fab62a","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"a2b7410b-be11-7159-feba-e4774156f31b","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"ccf76000-3d1e-6c9b-ce61-d0d99d9654e7","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":60,"unit":"px"},"marginTop":{"value":-8,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"65820a43-c082-d0e3-857f-3171aa924df8","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"e391fc4a-dffe-50b6-a8f9-4cb2f3626866","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"c69c3f22-3924-81f1-b0af-7543e7400bfa","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"19115adb-e5f3-82cc-1e6b-8af557a58646","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4ddbb6fa-0aaa-4713-8577-60b28d6a5971","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"5472b20c-940f-b403-8662-23bb59373f4a","type":"JavaScriptFunction","label":"Play Audio File","x":378,"y":811,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["6fd96ad4-b05c-28bb-ec11-a5c693430046"]}},{"name":"/Collection Pages/Furniture/Nook Store/Nook Store Logic/Options","id":"ca086e6c-6475-82c3-5b2c-a70b01366ba3","graph":{"connections":[{"fromId":"e2c8703b-c0fc-acd9-50be-05bfe4b0fd95","fromProperty":"id","toId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","toProperty":"in-ID"},{"fromId":"e2c8703b-c0fc-acd9-50be-05bfe4b0fd95","fromProperty":"prop-Label","toId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","toProperty":"in-Label"},{"fromId":"e2c8703b-c0fc-acd9-50be-05bfe4b0fd95","fromProperty":"prop-Checked","toId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","toProperty":"in-Checked"},{"fromId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","fromProperty":"out-ID","toId":"56b6b201-3d47-df41-4abc-cf40efd01c4f","toProperty":"in-ID"},{"fromId":"56b6b201-3d47-df41-4abc-cf40efd01c4f","fromProperty":"out-ID","toId":"423c3b6d-966c-3b2a-6525-96fe7152148a","toProperty":"modelId"},{"fromId":"56b6b201-3d47-df41-4abc-cf40efd01c4f","fromProperty":"out-Checked","toId":"423c3b6d-966c-3b2a-6525-96fe7152148a","toProperty":"prop-Checked"},{"fromId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","fromProperty":"out-Label","toId":"56b6b201-3d47-df41-4abc-cf40efd01c4f","toProperty":"in-Label"},{"fromId":"e2c8703b-c0fc-acd9-50be-05bfe4b0fd95","fromProperty":"prop-Icon","toId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","toProperty":"in-Icon"},{"fromId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","fromProperty":"out-Icon","toId":"56b6b201-3d47-df41-4abc-cf40efd01c4f","toProperty":"in-Icon"},{"fromId":"423c3b6d-966c-3b2a-6525-96fe7152148a","fromProperty":"stored","toId":"8618527b-615c-5844-7f76-d0b05f0c48d6","toProperty":"Selection Changed"},{"fromId":"b149f2dc-6b42-26d8-894d-eead7429087b","fromProperty":"onChange","toId":"423c3b6d-966c-3b2a-6525-96fe7152148a","toProperty":"store"},{"fromId":"b149f2dc-6b42-26d8-894d-eead7429087b","fromProperty":"onChange","toId":"56b6b201-3d47-df41-4abc-cf40efd01c4f","toProperty":"in-Changed"},{"fromId":"b149f2dc-6b42-26d8-894d-eead7429087b","fromProperty":"checked","toId":"56b6b201-3d47-df41-4abc-cf40efd01c4f","toProperty":"in-Checked"},{"fromId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","fromProperty":"out-Checked","toId":"b149f2dc-6b42-26d8-894d-eead7429087b","toProperty":"checked"},{"fromId":"218f5b37-0612-48a8-cf65-6ef2d2c38048","fromProperty":"out-Label","toId":"b149f2dc-6b42-26d8-894d-eead7429087b","toProperty":"label"}],"roots":[{"id":"029ed306-9f3e-60fa-7996-6efcc9fdab42","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"b149f2dc-6b42-26d8-894d-eead7429087b","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e2c8703b-c0fc-acd9-50be-05bfe4b0fd95","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"423c3b6d-966c-3b2a-6525-96fe7152148a","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"218f5b37-0612-48a8-cf65-6ef2d2c38048","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"56b6b201-3d47-df41-4abc-cf40efd01c4f","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"8618527b-615c-5844-7f76-d0b05f0c48d6","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["029ed306-9f3e-60fa-7996-6efcc9fdab42"]}},{"name":"/Collection Pages/Furniture/Raffle/Raffle","id":"605cc6c5-c455-bcf8-8dc2-8b6685adf781","graph":{"connections":[{"fromId":"58c30663-189c-81ca-203f-85b241647923","fromProperty":"items","toId":"b0925e94-2e56-757f-0903-e36a55b46bd4","toProperty":"items"},{"fromId":"f15620e9-a9d7-132e-0e09-f875c58ab98b","fromProperty":"out-Success","toId":"b0925e94-2e56-757f-0903-e36a55b46bd4","toProperty":"refresh"},{"fromId":"7d2b71d3-df9b-e9fb-c830-8c57d3c8f984","fromProperty":"out-CountText","toId":"b4f35e7d-3221-d55a-5197-586ac151b978","toProperty":"text"}],"roots":[{"id":"3cf69e41-606c-894b-553f-1c3b5295a7a9","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Raffle","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"raffle","index":32}],"children":[{"id":"b219fcfb-3019-9ab0-5a57-ebb1e6aa162b","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"62a98419-b571-16db-3e42-88eb69dbef37","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b4f35e7d-3221-d55a-5197-586ac151b978","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Miscellaneous Progress: 0 / 307","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"904d1ac3-4402-7d20-b77f-140a5f3311c4","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ee45599e-19b3-abde-b649-f3222f8e28d5","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f73e0894-0628-31e9-ab29-4d1709ade9db","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/ticket.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"9c432bec-2220-070f-0ef6-ddd08d6ff030","type":"Text","label":"","parameters":{"text":"Raffle","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d604c492-1096-a373-649a-a76e878caa13","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":6,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9772f86d-269a-5c21-b0fa-7a2210ad8b1d","type":"Text","parameters":{"text":"Items in this collection are all obtained by:","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"9b0fb119-0255-8db2-1016-fbafd38e34ed","type":"Text","parameters":{"text":"Tom Nook's Raffle","textStyle":"Title Medium","wordBreak":"normal","alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f403eb0c-c22a-c192-d3a3-4a5980802767","type":"Text","parameters":{"text":"Enter Tom Nook's store on the last day of any month.  Bring any Raffle Tickets you've collected that month.","textStyle":"Body Small","wordBreak":"normal","marginTop":{"value":5,"unit":"px"},"alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"86fd5341-9b40-42ac-aef8-c5af4cdcdb7a","type":"Text","parameters":{"text":"Wisp","textStyle":"Title Medium","wordBreak":"normal","alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"25a29716-0d06-d7f9-bee5-ebc7d3ada7b2","type":"Text","parameters":{"text":"Wisp is the ghost that can be found after midnight between 12 AM and 4 AM.  Complete his task and he will give you an item or service.","textStyle":"Body Small","wordBreak":"normal","marginTop":{"value":5,"unit":"px"},"alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"743438f1-51d8-b2dd-077b-77e37128e816","type":"Text","parameters":{"text":"Treasure Hunts","textStyle":"Title Medium","wordBreak":"normal","alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"7d932d30-4d46-d299-3876-0637969f80e4","type":"Text","parameters":{"text":"A villager may post a Treasure Hunt on the bulletin board in a specific acre.","textStyle":"Body Small","wordBreak":"normal","marginTop":{"value":5,"unit":"px"},"alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"34fbef33-10a5-b100-6de2-9e5176208491","type":"Text","parameters":{"text":"Luck","textStyle":"Title Medium","wordBreak":"normal","alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"8a1420ee-28a7-ac38-6a91-0f04aa827c72","type":"Text","parameters":{"text":"Talk to Katrina when she's in town.  If you have good luck, you may get one of these items.  If you do not talk to Katrina, your luck will always remain neutral.","textStyle":"Body Small","wordBreak":"normal","marginTop":{"value":5,"unit":"px"},"alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b0925e94-2e56-757f-0903-e36a55b46bd4","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Raffle/Raffle Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"8bc94e3f-b84a-b17d-5047-245bb6b253f1","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"58c30663-189c-81ca-203f-85b241647923","type":"Collection2","label":"Nook","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"raffle-0001\",\r\n    \"Label\": \"Arwing\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Arwing_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0035\",\r\n    \"Label\": \"Balloon Fight\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Balloon_Fight_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0002\",\r\n    \"Label\": \"Black king\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Black_King_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0003\",\r\n    \"Label\": \"Black queen\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Black_Queen_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0004\",\r\n    \"Label\": \"Blue corner\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Blue_Corner_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0005\",\r\n    \"Label\": \"Blue dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Blue_Dresser_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0006\",\r\n    \"Label\": \"Cabana armchair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Cabana_Armchair_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0007\",\r\n    \"Label\": \"Cabin bookcase\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Cabin_Bookcase_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0008\",\r\n    \"Label\": \"Cement mixer\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Cement_Mixer_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0009\",\r\n    \"Label\": \"Classic hutch\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Classic_Hutch_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0010\",\r\n    \"Label\": \"Covered wagon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Covered_Wagon_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0011\",\r\n    \"Label\": \"DK Jr MATH\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-DK_Jr_MATH_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0034\",\r\n    \"Label\": \"Donkey Kong\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Donkey_Kong_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0012\",\r\n    \"Label\": \"Dracaena\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Dracaena_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0013\",\r\n    \"Label\": \"Excitebike\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Excitebike_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0014\",\r\n    \"Label\": \"Exotic lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Exotic_Lamp_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0015\",\r\n    \"Label\": \"Garden gnome\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Garden_Gnome_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0016\",\r\n    \"Label\": \"Garden pond\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Garden_Pond_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0017\",\r\n    \"Label\": \"Green pantry\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Green_Pantry_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0018\",\r\n    \"Label\": \"Hamster cage\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Hamster_Cage_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0019\",\r\n    \"Label\": \"Hi-fi stereo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Hi-Fi_Stereo_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0020\",\r\n    \"Label\": \"Ivory piano\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Ivory_Piano_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0021\",\r\n    \"Label\": \"Jukebox\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Jukebox_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0022\",\r\n    \"Label\": \"Kiddie stereo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Kiddie_Stereo_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0023\",\r\n    \"Label\": \"Lovely kitchen\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Lovely_Kitchen_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0024\",\r\n    \"Label\": \"Modern cabinet\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Modern_Cabinet_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0025\",\r\n    \"Label\": \"Nook's portrait\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Nook's_Portrait_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0026\",\r\n    \"Label\": \"Plum bonsai\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Plum_Bonsai_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0027\",\r\n    \"Label\": \"Pop machine\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Pop_Machine_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0028\",\r\n    \"Label\": \"Ranch hutch\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Ranch_Hutch_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0029\",\r\n    \"Label\": \"Regal cupboard\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Regal_Cupboard_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0030\",\r\n    \"Label\": \"Robo-stereo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Robo-Stereo_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0036\",\r\n    \"Label\": \"Samurai suit\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Samurai_Suit_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0031\",\r\n    \"Label\": \"Tennis\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-Tennis_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0032\",\r\n    \"Label\": \"White king\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-White_King_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"raffle-0033\",\r\n    \"Label\": \"White queen\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/raffle/64px-White_Queen_PG_Model.png\",\r\n    \"Value\": \"Raffle / Hunt / Wisp / Tree\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"f15620e9-a9d7-132e-0e09-f875c58ab98b","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"7d2b71d3-df9b-e9fb-c830-8c57d3c8f984","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":47,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('raffle-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Raffle Progress: ${count} / 36`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["3cf69e41-606c-894b-553f-1c3b5295a7a9"]}},{"name":"/Collection Pages/Furniture/Raffle/Raffle Logic","id":"e5b4c09a-4f16-3b4d-7cc8-2f9dff4d56a2","graph":{"connections":[{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-ID","toId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","toProperty":"in-ID"},{"fromId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","fromProperty":"out-ID","toId":"9e2a34fe-a8d6-89d9-6524-5c33ef7187b6","toProperty":"modelId"},{"fromId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","fromProperty":"out-Checked","toId":"9e2a34fe-a8d6-89d9-6524-5c33ef7187b6","toProperty":"prop-Checked"},{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-Label","toId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","toProperty":"in-Label"},{"fromId":"881b75f3-df10-9fcd-4b5f-6cb05b3ff57d","fromProperty":"id","toId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","toProperty":"in-ID"},{"fromId":"881b75f3-df10-9fcd-4b5f-6cb05b3ff57d","fromProperty":"prop-Label","toId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","toProperty":"in-Label"},{"fromId":"881b75f3-df10-9fcd-4b5f-6cb05b3ff57d","fromProperty":"prop-Image","toId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","toProperty":"in-Icon"},{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-Label","toId":"33482670-abe3-60ed-b23c-563b2b70fc77","toProperty":"text"},{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-Icon","toId":"5c7f23e4-a2dc-403d-5665-768c05145533","toProperty":"src"},{"fromId":"881b75f3-df10-9fcd-4b5f-6cb05b3ff57d","fromProperty":"prop-Checked","toId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","toProperty":"in-Checked"},{"fromId":"881b75f3-df10-9fcd-4b5f-6cb05b3ff57d","fromProperty":"prop-Price","toId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","toProperty":"in-Price"},{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-Price","toId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","toProperty":"in-Price"},{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-Icon","toId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","toProperty":"in-Icon"},{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-Checked","toId":"3cbd9ece-5f2e-893d-8d7a-07fc9798a535","toProperty":"checked"},{"fromId":"3cbd9ece-5f2e-893d-8d7a-07fc9798a535","fromProperty":"checked","toId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","toProperty":"in-Checked"},{"fromId":"3cbd9ece-5f2e-893d-8d7a-07fc9798a535","fromProperty":"onChange","toId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","toProperty":"in-Changed"},{"fromId":"3cbd9ece-5f2e-893d-8d7a-07fc9798a535","fromProperty":"onChange","toId":"9e2a34fe-a8d6-89d9-6524-5c33ef7187b6","toProperty":"store"},{"fromId":"881b75f3-df10-9fcd-4b5f-6cb05b3ff57d","fromProperty":"prop-Obtained","toId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","toProperty":"in-Obtained"},{"fromId":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","fromProperty":"out-Obtained","toId":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","toProperty":"in-Obtained"},{"fromId":"3cbd9ece-5f2e-893d-8d7a-07fc9798a535","fromProperty":"onChange","toId":"7299ca48-4a54-9fda-3d32-26211236fdf3","toProperty":"run"}],"roots":[{"id":"25ea3087-6cfe-a418-1758-1a64fbb4a7aa","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a147d148-6594-802e-27fd-af3abf83e07c","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d0d2ab1e-78a7-a107-7f60-181f14500e79","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"01118e32-c97d-9365-d3bc-f6683481b762","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"51e26894-b4e2-2ca0-87ca-25cfca912759","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e1bcdb68-5078-729d-e9e6-0f9a1202ca85","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6c0cf17e-3037-faf7-266b-8b8c8e87c29f","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"5c7f23e4-a2dc-403d-5665-768c05145533","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"33482670-abe3-60ed-b23c-563b2b70fc77","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"d3753c93-ebfc-4c65-f5e6-a44b78999083","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"3cbd9ece-5f2e-893d-8d7a-07fc9798a535","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"881b75f3-df10-9fcd-4b5f-6cb05b3ff57d","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"9e2a34fe-a8d6-89d9-6524-5c33ef7187b6","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"100d61ae-6d2b-91a1-fa09-f673cbfe1a00","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"28d6c6d9-f685-d1ce-f4ff-e5199eff229a","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"7299ca48-4a54-9fda-3d32-26211236fdf3","type":"JavaScriptFunction","label":"Play Audio File","x":385,"y":654,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["25ea3087-6cfe-a418-1758-1a64fbb4a7aa"]}},{"name":"/Collection Pages/Furniture/Raffle/Raffle Logic/Options","id":"93ca5d2c-8746-eccf-7d32-473dc712a0ab","graph":{"connections":[{"fromId":"8df19b0c-60da-7100-a387-378f02d65e70","fromProperty":"id","toId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","toProperty":"in-ID"},{"fromId":"8df19b0c-60da-7100-a387-378f02d65e70","fromProperty":"prop-Label","toId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","toProperty":"in-Label"},{"fromId":"8df19b0c-60da-7100-a387-378f02d65e70","fromProperty":"prop-Checked","toId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","toProperty":"in-Checked"},{"fromId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","fromProperty":"out-ID","toId":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","toProperty":"in-ID"},{"fromId":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","fromProperty":"out-ID","toId":"4f73f0ba-8366-e095-7ce7-067c55ab6129","toProperty":"modelId"},{"fromId":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","fromProperty":"out-Checked","toId":"4f73f0ba-8366-e095-7ce7-067c55ab6129","toProperty":"prop-Checked"},{"fromId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","fromProperty":"out-Label","toId":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","toProperty":"in-Label"},{"fromId":"8df19b0c-60da-7100-a387-378f02d65e70","fromProperty":"prop-Icon","toId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","toProperty":"in-Icon"},{"fromId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","fromProperty":"out-Icon","toId":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","toProperty":"in-Icon"},{"fromId":"4f73f0ba-8366-e095-7ce7-067c55ab6129","fromProperty":"stored","toId":"d9f08918-bdb2-6ce1-2737-a8c24ab66b72","toProperty":"Selection Changed"},{"fromId":"fabde4dd-cae6-ef7e-4392-283c7e2f1f91","fromProperty":"onChange","toId":"4f73f0ba-8366-e095-7ce7-067c55ab6129","toProperty":"store"},{"fromId":"fabde4dd-cae6-ef7e-4392-283c7e2f1f91","fromProperty":"onChange","toId":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","toProperty":"in-Changed"},{"fromId":"fabde4dd-cae6-ef7e-4392-283c7e2f1f91","fromProperty":"checked","toId":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","toProperty":"in-Checked"},{"fromId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","fromProperty":"out-Checked","toId":"fabde4dd-cae6-ef7e-4392-283c7e2f1f91","toProperty":"checked"},{"fromId":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","fromProperty":"out-Label","toId":"fabde4dd-cae6-ef7e-4392-283c7e2f1f91","toProperty":"label"}],"roots":[{"id":"ff8bf09d-6ceb-f3f8-a274-8d36f20b21c1","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"fabde4dd-cae6-ef7e-4392-283c7e2f1f91","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8df19b0c-60da-7100-a387-378f02d65e70","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"4f73f0ba-8366-e095-7ce7-067c55ab6129","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"eb6ff4b6-9df8-e95c-25e4-3dbb3077fe35","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"2c73b06e-5b8f-3645-40ac-8601a2af77c8","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"d9f08918-bdb2-6ce1-2737-a8c24ab66b72","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["ff8bf09d-6ceb-f3f8-a274-8d36f20b21c1"]}},{"name":"/Collection Pages/Furniture/Redd/Redd","id":"ea6ed5b1-a54e-ca06-9498-d6d8dff2402a","graph":{"connections":[{"fromId":"2512efd0-9b9a-66d2-7d57-3b7be2b80e06","fromProperty":"items","toId":"75eccd83-d073-57d0-7ba8-458792445063","toProperty":"items"},{"fromId":"b250b4ec-f2f8-822b-b42f-7e6dab2ba8ba","fromProperty":"out-Success","toId":"75eccd83-d073-57d0-7ba8-458792445063","toProperty":"refresh"},{"fromId":"5cabbf43-c345-5666-8eb9-537e0f86ef08","fromProperty":"out-CountText","toId":"e0991a8e-5d16-f5e5-7512-2d7c2fed31c4","toProperty":"text"},{"fromId":"cc865050-274f-645e-3bc5-215134879345","fromProperty":"out-CountText","toId":"b9ac48f7-7036-e9e6-15af-3c856db58942","toProperty":"text"},{"fromId":"24b695ac-9dd2-aca8-ca41-5746aa2103e9","fromProperty":"items","toId":"3b70cf4b-d293-92d2-4e44-c8b7dfe6cf59","toProperty":"items"},{"fromId":"d1fc08af-1629-101f-acbf-e318c99e32ff","fromProperty":"out-Success","toId":"3b70cf4b-d293-92d2-4e44-c8b7dfe6cf59","toProperty":"refresh"},{"fromId":"5b3f8bba-0c3b-bc8c-0164-d6aeaecb823d","fromProperty":"out-CountText","toId":"72b29c0b-4c8d-4a96-487e-ff3440c03933","toProperty":"text"}],"roots":[{"id":"105cd682-ad52-b23b-de14-6b98885f1e66","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Redd","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"redd","index":32}],"children":[{"id":"9ced67e3-8f1a-aa8b-7fd1-98187a3efab1","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"f56954e5-11fd-e4ca-2858-3a5518a9fb4d","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e0991a8e-5d16-f5e5-7512-2d7c2fed31c4","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Nook Store Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"546988f5-3f2d-92d0-8781-83c374e389fd","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2e9a2281-ae9c-9a56-d169-815354cbcb49","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"47d4786a-8c37-af36-c38f-8d033cabc488","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/redd.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"72b29c0b-4c8d-4a96-487e-ff3440c03933","type":"Text","label":"","parameters":{"text":"Crazy Redd's Store","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3b70cf4b-d293-92d2-4e44-c8b7dfe6cf59","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Redd/Redd Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]},{"id":"c2b1cc39-e072-159c-2be4-a5c904fdcb42","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7fedc869-3809-3244-3a0f-936186667ab2","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f4796075-b869-f5fd-ac55-f42267a13078","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/redd.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"b9ac48f7-7036-e9e6-15af-3c856db58942","type":"Text","label":"","parameters":{"text":"Crazy Redd's Store","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"75eccd83-d073-57d0-7ba8-458792445063","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Redd/Redd Logic Painting"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"6c56ab79-c938-ea03-ac4c-203aeacb0730","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"2512efd0-9b9a-66d2-7d57-3b7be2b80e06","type":"Collection2","label":"Redd","x":-314,"y":886,"parameters":{"items":"[\r\n    {\r\n        \"id\":  \"redd-0001\",\r\n        \"Label\":  \"Aiko figurine\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Aiko_Figurine_PG_Model.png\",\r\n        \"Price\":  \"800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0003\",\r\n        \"Label\":  \"Backyard pool\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Backyard_Pool_PG_Model.png\",\r\n        \"Price\":  \"990\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0005\",\r\n        \"Label\":  \"Bass\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Bass_PG_Model.png\",\r\n        \"Price\":  \"2400\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0006\",\r\n        \"Label\":  \"Black bishop\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Black_Bishop_PG_Model.png\",\r\n        \"Price\":  \"2800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0007\",\r\n        \"Label\":  \"Black knight\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Black_Knight_PG_Model.png\",\r\n        \"Price\":  \"2800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0008\",\r\n        \"Label\":  \"Black rook\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Black_Rook_PG_Model.png\",\r\n        \"Price\":  \"2800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0009\",\r\n        \"Label\":  \"Blue bed\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Blue_Bed_PG_Model.png\",\r\n        \"Price\":  \"2100\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0010\",\r\n        \"Label\":  \"Blue table\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Blue_Table_PG_Model.png\",\r\n        \"Price\":  \"1800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0011\",\r\n        \"Label\":  \"Cabana bed\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Cabana_Bed_PG_Model.png\",\r\n        \"Price\":  \"2200\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0012\",\r\n        \"Label\":  \"Cabana chair\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Cabana_Chair_PG_Model.png\",\r\n        \"Price\":  \"1600\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0013\",\r\n        \"Label\":  \"Cabin chair\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Cabin_Chair_PG_Model.png\",\r\n        \"Price\":  \"1700\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0014\",\r\n        \"Label\":  \"Cabin dresser\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Cabin_Dresser_PG_Model.png\",\r\n        \"Price\":  \"2160\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0015\",\r\n        \"Label\":  \"Classic vanity\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Classic_Vanity_PG_Model.png\",\r\n        \"Price\":  \"2560\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0016\",\r\n        \"Label\":  \"Classic wardrobe\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Classic_Wardrobe_PG_Model.png\",\r\n        \"Price\":  \"2560\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0017\",\r\n        \"Label\":  \"Clu Clu Land\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Clu_Clu_Land_PG_Model.png\",\r\n        \"Price\":  \"3000\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0019\",\r\n        \"Label\":  \"Computer\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Computer_PG_Model.png\",\r\n        \"Price\":  \"1820\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0021\",\r\n        \"Label\":  \"Deer scare\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Deer_Scare_PG_Model.png\",\r\n        \"Price\":  \"1800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0022\",\r\n        \"Label\":  \"Dice stereo\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Dice_Stereo_PG_Model.png\",\r\n        \"Price\":  \"2150\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0023\",\r\n        \"Label\":  \"Ebony piano\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Ebony_Piano_PG_Model.png\",\r\n        \"Price\":  \"3800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0024\",\r\n        \"Label\":  \"Exotic bed\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Exotic_Bed_PG_Model.png\",\r\n        \"Price\":  \"2540\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0025\",\r\n        \"Label\":  \"Exotic table\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Exotic_Table_PG_Model.png\",\r\n        \"Price\":  \"2300\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0028\",\r\n        \"Label\":  \"Frog woman pole\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Frog_Woman_Pole_PG_Model.png\",\r\n        \"Price\":  \"1400\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0029\",\r\n        \"Label\":  \"Golf\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Golf_PG_Model.png\",\r\n        \"Price\":  \"3000\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0030\",\r\n        \"Label\":  \"Green dresser\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Green_Dresser_PG_Model.png\",\r\n        \"Price\":  \"2320\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0031\",\r\n        \"Label\":  \"Green wardrobe\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Green_Wardrobe_PG_Model.png\",\r\n        \"Price\":  \"2300\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0032\",\r\n        \"Label\":  \"High-end stereo\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-High-End_Stereo_PG_Model.png\",\r\n        \"Price\":  \"2750\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0066\",\r\n        \"Label\":  \"Hinaningyo\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Hinaningyo_PG_Model.png\",\r\n        \"Price\":  \"2560\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0033\",\r\n        \"Label\":  \"Judge's bell\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Judge's_Bell_PG_Model.png\",\r\n        \"Price\":  \"1790\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0034\",\r\n        \"Label\":  \"Kiddie bed\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Kiddie_Bed_PG_Model.png\",\r\n        \"Price\":  \"2100\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0035\",\r\n        \"Label\":  \"Kiddie clock\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Kiddie_Clock_PG_Model.png\",\r\n        \"Price\":  \"1480\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0036\",\r\n        \"Label\":  \"Lawn mower\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Lawn_Mower_PG_Model.png\",\r\n        \"Price\":  \"2760\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0037\",\r\n        \"Label\":  \"Letter cubby\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Letter_Cubby_PG_Model.png\",\r\n        \"Price\":  \"2300\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0038\",\r\n        \"Label\":  \"Lovely armoire\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Lovely_Armoire_PG_Model.png\",\r\n        \"Price\":  \"2240\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0039\",\r\n        \"Label\":  \"Lovely end table\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Lovely_End_Table_PG_Model.png\",\r\n        \"Price\":  \"1800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0040\",\r\n        \"Label\":  \"Lovely stereo\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Lovely_Stereo_PG_Model.png\",\r\n        \"Price\":  \"7920\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0041\",\r\n        \"Label\":  \"Modern end table\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Modern_End_Table_PG_Model.png\",\r\n        \"Price\":  \"1900\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0042\",\r\n        \"Label\":  \"Modern wardrobe\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Modern_Wardrobe_PG_Model.png\",\r\n        \"Price\":  \"2560\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0044\",\r\n        \"Label\":  \"NES\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-NES_PG_Model.png\",\r\n        \"Price\":  \"3000\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0045\",\r\n        \"Label\":  \"Pinball\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Pinball_PG_Model.png\",\r\n        \"Price\":  \"3000\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0047\",\r\n        \"Label\":  \"Ranch chair\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Ranch_Chair_PG_Model.png\",\r\n        \"Price\":  \"1400\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0048\",\r\n        \"Label\":  \"Ranch dresser\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Ranch_Dresser_PG_Model.png\",\r\n        \"Price\":  \"2720\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0049\",\r\n        \"Label\":  \"Red corner\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Red_Corner_PG_Model.png\",\r\n        \"Price\":  \"6800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0050\",\r\n        \"Label\":  \"Regal bed\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Regal_Bed_PG_Model.png\",\r\n        \"Price\":  \"3120\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0051\",\r\n        \"Label\":  \"Regal chair\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Regal_Chair_PG_Model.png\",\r\n        \"Price\":  \"2100\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0052\",\r\n        \"Label\":  \"Robo-clock\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Robo-Clock_PG_Model.png\",\r\n        \"Price\":  \"1400\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0053\",\r\n        \"Label\":  \"Saddle fence\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Saddle_Fence_PG_Model.png\",\r\n        \"Price\":  \"2180\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0055\",\r\n        \"Label\":  \"Steam roller\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Steam_Roller_PG_Model.png\",\r\n        \"Price\":  \"4500\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0056\",\r\n        \"Label\":  \"Super toilet\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Super_Toilet_PG_Model.png\",\r\n        \"Price\":  \"1980\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0065\",\r\n        \"Label\":  \"Tanabata palm\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Tanabata_Palm_PG_Model.png\",\r\n        \"Price\":  \"1925\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0057\",\r\n        \"Label\":  \"Timpano drum\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Timpano_Drum_PG_Model.png\",\r\n        \"Price\":  \"2100\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0058\",\r\n        \"Label\":  \"Turntable\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Turntable_PG_Model.png\",\r\n        \"Price\":  \"2580\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0059\",\r\n        \"Label\":  \"Well\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Well_PG_Model.png\",\r\n        \"Price\":  \"2700\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0060\",\r\n        \"Label\":  \"White bishop\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-White_Bishop_PG_Model.png\",\r\n        \"Price\":  \"2800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0061\",\r\n        \"Label\":  \"White knight\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-White_Knight_PG_Model.png\",\r\n        \"Price\":  \"2800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0062\",\r\n        \"Label\":  \"White rook\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-White_Rook_PG_Model.png\",\r\n        \"Price\":  \"2800\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"redd-0063\",\r\n        \"Label\":  \"Wide-screen TV\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/furniture/redd/64px-Wide-Screen_TV_PG_Model.png\",\r\n        \"Price\":  \"2200\",\r\n        \"Checked\":  \"\"\r\n    }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"b250b4ec-f2f8-822b-b42f-7e6dab2ba8ba","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5cabbf43-c345-5666-8eb9-537e0f86ef08","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":47,"parameters":{"functionScript":"function getFishAndNookKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\" or \"nook-\"\n        const key = localStorage.key(i);\n        if (key.startsWith('redd-') || key.startsWith('painting-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Nook Store Progress: # / 307\"\n    Outputs.CountText = `Redd Progress: ${count} / 71`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishAndNookKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"cc865050-274f-645e-3bc5-215134879345","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-472,"y":704,"parameters":{"functionScript":"function getFishAndNookKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\" or \"nook-\"\n        const key = localStorage.key(i);\n        if (key.startsWith('redd-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Nook Store Progress: # / 307\"\n    Outputs.CountText = `Crazy Redd's Store: ${count} / 56`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishAndNookKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"24b695ac-9dd2-aca8-ca41-5746aa2103e9","type":"Collection2","label":"Paintings","x":-243,"y":517,"parameters":{"items":"[\r\n    {\r\n        \"id\":  \"painting-0001\",\r\n        \"Label\":  \"Amazing painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Amazing_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0002\",\r\n        \"Label\":  \"Basic painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Basic_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0003\",\r\n        \"Label\":  \"Classic painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Classic_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0004\",\r\n        \"Label\":  \"Common painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Common_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0005\",\r\n        \"Label\":  \"Dainty painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Dainty_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0006\",\r\n        \"Label\":  \"Famous painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Famous_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0007\",\r\n        \"Label\":  \"Fine painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Fine_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0008\",\r\n        \"Label\":  \"Flowery painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Flowery_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0009\",\r\n        \"Label\":  \"Moving painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Moving_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0010\",\r\n        \"Label\":  \"Perfect painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Perfect_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0011\",\r\n        \"Label\":  \"Quaint painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Quaint_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0012\",\r\n        \"Label\":  \"Rare painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Rare_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0013\",\r\n        \"Label\":  \"Scary painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Scary_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0014\",\r\n        \"Label\":  \"Strange painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Strange_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0015\",\r\n        \"Label\":  \"Worthy painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Worthy_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"d1fc08af-1629-101f-acbf-e318c99e32ff","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":350,"y":463,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5b3f8bba-0c3b-bc8c-0164-d6aeaecb823d","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-265,"y":393,"parameters":{"functionScript":"function getFishAndNookKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\" or \"nook-\"\n        const key = localStorage.key(i);\n        if (key.startsWith('painting-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Nook Store Progress: # / 307\"\n    Outputs.CountText = `Paintings: ${count} / 15`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishAndNookKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["105cd682-ad52-b23b-de14-6b98885f1e66"]}},{"name":"/Collection Pages/Furniture/Redd/Redd Logic","id":"e1033207-8e33-7ab3-16b1-65dbe8defac5","graph":{"connections":[{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-ID","toId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","toProperty":"in-ID"},{"fromId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","fromProperty":"out-ID","toId":"33b8d308-5e45-22d8-0316-ee69a64a08b6","toProperty":"modelId"},{"fromId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","fromProperty":"out-Checked","toId":"33b8d308-5e45-22d8-0316-ee69a64a08b6","toProperty":"prop-Checked"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Label","toId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","toProperty":"in-Label"},{"fromId":"954578e6-6278-6885-c77e-0d08e6cbf487","fromProperty":"id","toId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","toProperty":"in-ID"},{"fromId":"954578e6-6278-6885-c77e-0d08e6cbf487","fromProperty":"prop-Label","toId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","toProperty":"in-Label"},{"fromId":"954578e6-6278-6885-c77e-0d08e6cbf487","fromProperty":"prop-Image","toId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","toProperty":"in-Icon"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Label","toId":"91aba030-e25f-7fd9-6568-d0dcdba46f8d","toProperty":"text"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Icon","toId":"57a5198a-8bc4-ad35-ffe5-377055001748","toProperty":"src"},{"fromId":"954578e6-6278-6885-c77e-0d08e6cbf487","fromProperty":"prop-Checked","toId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","toProperty":"in-Checked"},{"fromId":"954578e6-6278-6885-c77e-0d08e6cbf487","fromProperty":"prop-Price","toId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","toProperty":"in-Price"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Price","toId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","toProperty":"in-Price"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Icon","toId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","toProperty":"in-Icon"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Checked","toId":"0d43fb71-c637-b45f-229d-d9bdbb3f3c87","toProperty":"checked"},{"fromId":"0d43fb71-c637-b45f-229d-d9bdbb3f3c87","fromProperty":"checked","toId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","toProperty":"in-Checked"},{"fromId":"0d43fb71-c637-b45f-229d-d9bdbb3f3c87","fromProperty":"onChange","toId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","toProperty":"in-Changed"},{"fromId":"0d43fb71-c637-b45f-229d-d9bdbb3f3c87","fromProperty":"onChange","toId":"33b8d308-5e45-22d8-0316-ee69a64a08b6","toProperty":"store"},{"fromId":"954578e6-6278-6885-c77e-0d08e6cbf487","fromProperty":"prop-Obtained","toId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","toProperty":"in-Obtained"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Obtained","toId":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","toProperty":"in-Obtained"},{"fromId":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","fromProperty":"out-Price","toId":"cbcbfd75-ae14-a3af-6c6e-1a1ad3b5afaa","toProperty":"text"},{"fromId":"0d43fb71-c637-b45f-229d-d9bdbb3f3c87","fromProperty":"onChange","toId":"b9d757aa-897a-f2ba-2f7e-b32b4081d352","toProperty":"run"}],"roots":[{"id":"cf5d56f1-2878-7243-f15c-dbe6a0d68538","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"670279c1-2602-57a0-f50a-95b4134fd913","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9133cdc4-a318-25e6-8d5d-d1d1280adf2a","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"3258e5e1-37f4-3285-4582-a93644b184d0","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"93936ce5-c5ec-888f-9f57-7566333475a2","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"23f29a19-8dee-1c98-e30e-2dedffc9bbcd","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d25abc4a-0fe2-b976-2b80-7085d7d38f53","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9835e9c7-93da-dec8-b104-7ce2d6202f59","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"57a5198a-8bc4-ad35-ffe5-377055001748","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"91aba030-e25f-7fd9-6568-d0dcdba46f8d","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"marginTop":{"value":20,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"cbcbfd75-ae14-a3af-6c6e-1a1ad3b5afaa","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"marginTop":{"value":20,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"368f0a9d-6155-5d11-6f53-ece348652b07","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":61,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"0d43fb71-c637-b45f-229d-d9bdbb3f3c87","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"954578e6-6278-6885-c77e-0d08e6cbf487","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"33b8d308-5e45-22d8-0316-ee69a64a08b6","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"9bc3f311-bfdd-d6d5-7f98-d1dddc9dc7e8","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"dab492ce-6cd2-9c6e-d057-1642cf25c05c","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"b9d757aa-897a-f2ba-2f7e-b32b4081d352","type":"JavaScriptFunction","label":"Play Audio File","x":370,"y":781,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["cf5d56f1-2878-7243-f15c-dbe6a0d68538"]}},{"name":"/Collection Pages/Furniture/Redd/Redd Logic Painting","id":"48db9c0d-2676-76a3-72a7-571efd7ba128","graph":{"connections":[{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-ID","toId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","toProperty":"in-ID"},{"fromId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","fromProperty":"out-ID","toId":"5c10b3e2-fa0f-7eeb-dce9-f07f9b2a2a7f","toProperty":"modelId"},{"fromId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","fromProperty":"out-Checked","toId":"5c10b3e2-fa0f-7eeb-dce9-f07f9b2a2a7f","toProperty":"prop-Checked"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Label","toId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","toProperty":"in-Label"},{"fromId":"61897cde-8c9e-59a6-892e-3f1261010b9d","fromProperty":"id","toId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","toProperty":"in-ID"},{"fromId":"61897cde-8c9e-59a6-892e-3f1261010b9d","fromProperty":"prop-Label","toId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","toProperty":"in-Label"},{"fromId":"61897cde-8c9e-59a6-892e-3f1261010b9d","fromProperty":"prop-Image","toId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","toProperty":"in-Icon"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Label","toId":"235599bb-b2e1-8c02-0ab2-85812a099710","toProperty":"text"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Icon","toId":"9b21ae59-0b72-b54c-8611-8770a55eca80","toProperty":"src"},{"fromId":"61897cde-8c9e-59a6-892e-3f1261010b9d","fromProperty":"prop-Checked","toId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","toProperty":"in-Checked"},{"fromId":"61897cde-8c9e-59a6-892e-3f1261010b9d","fromProperty":"prop-Price","toId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","toProperty":"in-Price"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Price","toId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","toProperty":"in-Price"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Icon","toId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","toProperty":"in-Icon"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Checked","toId":"5ff44de6-722d-b566-9be6-a208198c78b9","toProperty":"checked"},{"fromId":"5ff44de6-722d-b566-9be6-a208198c78b9","fromProperty":"checked","toId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","toProperty":"in-Checked"},{"fromId":"5ff44de6-722d-b566-9be6-a208198c78b9","fromProperty":"onChange","toId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","toProperty":"in-Changed"},{"fromId":"5ff44de6-722d-b566-9be6-a208198c78b9","fromProperty":"onChange","toId":"5c10b3e2-fa0f-7eeb-dce9-f07f9b2a2a7f","toProperty":"store"},{"fromId":"61897cde-8c9e-59a6-892e-3f1261010b9d","fromProperty":"prop-Obtained","toId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","toProperty":"in-Obtained"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Obtained","toId":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","toProperty":"in-Obtained"},{"fromId":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","fromProperty":"out-Price","toId":"85da4844-97bf-7e57-76be-5c7e0f883e91","toProperty":"text"}],"roots":[{"id":"3fd0fb27-fed4-6705-892f-087de947e7e7","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6c487a86-a8a6-c841-acf6-f13e4ea9db4d","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"dca8e769-8b0d-7678-6fd6-3d9344fa3a19","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"1d050527-44cf-ef91-4baf-f218cce3710c","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"df36c59c-c176-01f9-4706-a4d4bb69b961","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"57b8cf1a-e7c5-20c4-98fd-8df5d4dbc519","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a861cf0e-b1bf-161d-11ea-bbe1fb2cd634","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"fc253cbe-9ef1-cdfe-029c-457ac7e27d47","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"9b21ae59-0b72-b54c-8611-8770a55eca80","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"235599bb-b2e1-8c02-0ab2-85812a099710","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"marginTop":{"value":20,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"85da4844-97bf-7e57-76be-5c7e0f883e91","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"marginTop":{"value":20,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"42299508-b26d-c5d2-df36-a1ec9a054a48","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":61,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"5ff44de6-722d-b566-9be6-a208198c78b9","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"61897cde-8c9e-59a6-892e-3f1261010b9d","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"5c10b3e2-fa0f-7eeb-dce9-f07f9b2a2a7f","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"6c6bdee5-8bcd-506e-8668-90d3eb3b0a25","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || ''; // Correct case for Label\nconst price = Inputs.Price || ''; // Correct case for Price\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label || label; // Using label\n        Outputs.Price = result.price || price; // Using price\n        Outputs.Icon = result.icon || icon;\n        Outputs.Obtained = result.obtained || obtained;\n        Outputs.Time = result.time || time;\n        Outputs.Months = result.months || months;\n        Outputs.Checked = result.checked || checked;\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"fb9ccb9b-16fd-6150-3077-ad317506e3d8","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["3fd0fb27-fed4-6705-892f-087de947e7e7"]}},{"name":"/Collection Pages/Furniture/Redd/Redd Logic Painting/Options","id":"03274edb-e88f-e0cb-ecdc-6cb9d263c157","graph":{"connections":[{"fromId":"770092e7-20aa-07ff-5f1c-036561debcea","fromProperty":"id","toId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","toProperty":"in-ID"},{"fromId":"770092e7-20aa-07ff-5f1c-036561debcea","fromProperty":"prop-Label","toId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","toProperty":"in-Label"},{"fromId":"770092e7-20aa-07ff-5f1c-036561debcea","fromProperty":"prop-Checked","toId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","toProperty":"in-Checked"},{"fromId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","fromProperty":"out-ID","toId":"e1c40586-2001-8034-120b-144d13a359be","toProperty":"in-ID"},{"fromId":"e1c40586-2001-8034-120b-144d13a359be","fromProperty":"out-ID","toId":"d8079ab4-3940-cb83-40f5-55220480629c","toProperty":"modelId"},{"fromId":"e1c40586-2001-8034-120b-144d13a359be","fromProperty":"out-Checked","toId":"d8079ab4-3940-cb83-40f5-55220480629c","toProperty":"prop-Checked"},{"fromId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","fromProperty":"out-Label","toId":"e1c40586-2001-8034-120b-144d13a359be","toProperty":"in-Label"},{"fromId":"770092e7-20aa-07ff-5f1c-036561debcea","fromProperty":"prop-Icon","toId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","toProperty":"in-Icon"},{"fromId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","fromProperty":"out-Icon","toId":"e1c40586-2001-8034-120b-144d13a359be","toProperty":"in-Icon"},{"fromId":"d8079ab4-3940-cb83-40f5-55220480629c","fromProperty":"stored","toId":"b02239eb-dcb3-4566-5039-939c6d0c7196","toProperty":"Selection Changed"},{"fromId":"329e2b13-ab38-eabb-de3c-c03f818eab04","fromProperty":"onChange","toId":"d8079ab4-3940-cb83-40f5-55220480629c","toProperty":"store"},{"fromId":"329e2b13-ab38-eabb-de3c-c03f818eab04","fromProperty":"onChange","toId":"e1c40586-2001-8034-120b-144d13a359be","toProperty":"in-Changed"},{"fromId":"329e2b13-ab38-eabb-de3c-c03f818eab04","fromProperty":"checked","toId":"e1c40586-2001-8034-120b-144d13a359be","toProperty":"in-Checked"},{"fromId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","fromProperty":"out-Checked","toId":"329e2b13-ab38-eabb-de3c-c03f818eab04","toProperty":"checked"},{"fromId":"1026fe30-b16e-9151-dd45-fc352bd9c01e","fromProperty":"out-Label","toId":"329e2b13-ab38-eabb-de3c-c03f818eab04","toProperty":"label"}],"roots":[{"id":"cdce4b3a-5a09-adea-6bbe-cfd052af0dd9","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"329e2b13-ab38-eabb-de3c-c03f818eab04","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"770092e7-20aa-07ff-5f1c-036561debcea","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"d8079ab4-3940-cb83-40f5-55220480629c","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"1026fe30-b16e-9151-dd45-fc352bd9c01e","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"e1c40586-2001-8034-120b-144d13a359be","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"b02239eb-dcb3-4566-5039-939c6d0c7196","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["cdce4b3a-5a09-adea-6bbe-cfd052af0dd9"]}},{"name":"/Collection Pages/Furniture/Redd/Redd Logic/Options","id":"7d478227-858f-fa83-f198-1ef066a62a9f","graph":{"connections":[{"fromId":"c3b377c3-9619-569b-2828-0c55b701602a","fromProperty":"id","toId":"0ca62e76-71d8-34c5-0775-92406c73c356","toProperty":"in-ID"},{"fromId":"c3b377c3-9619-569b-2828-0c55b701602a","fromProperty":"prop-Label","toId":"0ca62e76-71d8-34c5-0775-92406c73c356","toProperty":"in-Label"},{"fromId":"c3b377c3-9619-569b-2828-0c55b701602a","fromProperty":"prop-Checked","toId":"0ca62e76-71d8-34c5-0775-92406c73c356","toProperty":"in-Checked"},{"fromId":"0ca62e76-71d8-34c5-0775-92406c73c356","fromProperty":"out-ID","toId":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","toProperty":"in-ID"},{"fromId":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","fromProperty":"out-ID","toId":"14e3ada5-4de7-6317-089d-b37d95137c59","toProperty":"modelId"},{"fromId":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","fromProperty":"out-Checked","toId":"14e3ada5-4de7-6317-089d-b37d95137c59","toProperty":"prop-Checked"},{"fromId":"0ca62e76-71d8-34c5-0775-92406c73c356","fromProperty":"out-Label","toId":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","toProperty":"in-Label"},{"fromId":"c3b377c3-9619-569b-2828-0c55b701602a","fromProperty":"prop-Icon","toId":"0ca62e76-71d8-34c5-0775-92406c73c356","toProperty":"in-Icon"},{"fromId":"0ca62e76-71d8-34c5-0775-92406c73c356","fromProperty":"out-Icon","toId":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","toProperty":"in-Icon"},{"fromId":"14e3ada5-4de7-6317-089d-b37d95137c59","fromProperty":"stored","toId":"c25de22b-8321-5130-8a7e-bd39424ac2fc","toProperty":"Selection Changed"},{"fromId":"fe88eb35-9061-f1cb-f4fd-06851f03c7e0","fromProperty":"onChange","toId":"14e3ada5-4de7-6317-089d-b37d95137c59","toProperty":"store"},{"fromId":"fe88eb35-9061-f1cb-f4fd-06851f03c7e0","fromProperty":"onChange","toId":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","toProperty":"in-Changed"},{"fromId":"fe88eb35-9061-f1cb-f4fd-06851f03c7e0","fromProperty":"checked","toId":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","toProperty":"in-Checked"},{"fromId":"0ca62e76-71d8-34c5-0775-92406c73c356","fromProperty":"out-Checked","toId":"fe88eb35-9061-f1cb-f4fd-06851f03c7e0","toProperty":"checked"},{"fromId":"0ca62e76-71d8-34c5-0775-92406c73c356","fromProperty":"out-Label","toId":"fe88eb35-9061-f1cb-f4fd-06851f03c7e0","toProperty":"label"}],"roots":[{"id":"890c5208-a458-f21f-4da1-2128bbcc5270","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"fe88eb35-9061-f1cb-f4fd-06851f03c7e0","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c3b377c3-9619-569b-2828-0c55b701602a","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"14e3ada5-4de7-6317-089d-b37d95137c59","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"0ca62e76-71d8-34c5-0775-92406c73c356","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"7d4dbcfc-3f91-d313-9e9d-60186bb8a004","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"c25de22b-8321-5130-8a7e-bd39424ac2fc","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["890c5208-a458-f21f-4da1-2128bbcc5270"]}},{"name":"/Collection Pages/Furniture/Secret Codes/Secret Codes","id":"1e49f6a2-19ad-1a44-5280-8ac591cf4851","graph":{"connections":[{"fromId":"48ddefd1-cd91-1a0c-f555-1f8b90010e27","fromProperty":"items","toId":"da54a0d3-f62f-5852-cbd9-e005eee41962","toProperty":"items"},{"fromId":"7a353f03-c491-35fb-5158-d77b28cb8cfa","fromProperty":"out-Success","toId":"da54a0d3-f62f-5852-cbd9-e005eee41962","toProperty":"refresh"},{"fromId":"fb7466cf-c359-59a6-20d9-e10a51938ad0","fromProperty":"out-CountText","toId":"9f264ea3-ea3e-830e-905e-0029e164ca9d","toProperty":"text"},{"fromId":"46263c5b-e066-78bf-b133-42b4aee5a622","fromProperty":"onClick","toId":"c724f6f8-a090-80cc-3116-82c730011d46","toProperty":"do"},{"fromId":"46263c5b-e066-78bf-b133-42b4aee5a622","fromProperty":"onClick","toId":"33fbf690-aa82-40f0-3b23-61d54d443e95","toProperty":"run"}],"roots":[{"id":"43429b1f-606c-21c7-d957-1a2249e0aedc","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Secret Codes","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"secret-codes","index":32}],"children":[{"id":"2a1d3c52-837a-6208-854d-cfb96483fb70","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"6e91d510-a9ca-a2da-7388-50c0615caf5f","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9f264ea3-ea3e-830e-905e-0029e164ca9d","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Miscellaneous Progress: 0 / 307","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"881a6935-09d4-52d1-3ed8-16cbacabdcd4","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"41ad1254-2c74-7ff1-f540-d370cb5075e1","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a52cd718-5c72-c0e7-514c-2d787a88708d","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/key.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"dc982275-8446-1846-f2ee-a6f98bd43236","type":"Text","label":"","parameters":{"text":"Secret Codes","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3e5d765f-84b4-04fc-ed33-fcb3bdb7eac1","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":6,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"8a47e620-d581-e791-44b4-e2498b912563","type":"Text","parameters":{"text":"This Collection contains 18 codes.  While other items can also be obtained via code, these 18 are only obtained by code.\n\nSecret Codes can be entered at Tom Nook.  Enter all 28 alpha-numeric case-sensitive characters and if done correctly, Tom Nook will give you an item.\nYou can only enter three codes per game load.","textAlignX":"center","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"69c88655-1fb0-0858-23d1-7d35588a324d","type":"Text","parameters":{"text":"Some items require an external tool to generate a code.  While unaffiliated, I have had a good experience with Nookipedia's code generator.","textAlignX":"center","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"46263c5b-e066-78bf-b133-42b4aee5a622","type":"net.noodl.controls.button","parameters":{"alignX":"center","marginBottom":{"value":10,"unit":"px"},"label":"Nookipedia's Secret Code Generator","marginLeft":{"value":15,"unit":"px"},"marginRight":{"value":15,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"da54a0d3-f62f-5852-cbd9-e005eee41962","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Secret Codes/Secret Codes Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"fbb2d6c2-9142-6c62-4e34-ca869c1efd9a","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"48ddefd1-cd91-1a0c-f555-1f8b90010e27","type":"Collection2","label":"Nook","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"secret-0001\",\r\n    \"Label\": \"? block\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-__Block_PG_Model.png\",\r\n    \"Obtained\": \"#SbaUIRmw#gwkYBK66q#LGscTY%2\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0002\",\r\n    \"Label\": \"Brick block\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Brick_Block_PG_Model.png\",\r\n    \"Obtained\": \"1mWYg6IfB@&q758XzSNKpfWj76ts\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0003\",\r\n    \"Label\": \"Cannon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Cannon_PG_Model.png\",\r\n    \"Obtained\": \"4UT6T6L89ZnOW3dw&%jtL3qjLZBf\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0004\",\r\n    \"Label\": \"Clu Clu Land D\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Clu_Clu_Land_D_PG_Model.png\",\r\n    \"Obtained\": \"Y#PpfrxSOAMLSGB7H3K5xBho5YSY\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0005\",\r\n    \"Label\": \"Coin\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Coin_PG_Model.png\",\r\n    \"Obtained\": \"rSbaUIRmwUgwkA1K6tq#LMscTY%2\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0006\",\r\n    \"Label\": \"Donkey Kong 3\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Donkey_Kong_3_PG_Model.png\",\r\n    \"Obtained\": \"4f8wOToj5CNGT2wc2Y9nbTXVaJxW\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0007\",\r\n    \"Label\": \"Donkey Kong Jr\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Donkey_Kong_Jr_PG_Model.png\",\r\n    \"Obtained\": \"#ibXotLLPt#&Xqfkvo3OSEo3xAtd\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0008\",\r\n    \"Label\": \"Fire flower\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Fire_Flower_PG_Model.png\",\r\n    \"Obtained\": \"4UT6T948GZnOW3dw#%jtLEqj5ZBf\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0009\",\r\n    \"Label\": \"Flagpole\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Flagpole_PG_Model.png\",\r\n    \"Obtained\": \"4UT6T6L89ZnOW3dwU%jtL3qjLZBf\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0010\",\r\n    \"Label\": \"Green pipe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Green_Pipe_PG_Model.png\",\r\n    \"Obtained\": \"1mWYg6IfB@&q7z8XzSNwpfij76ts\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0011\",\r\n    \"Label\": \"Koopa shell\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Koopa_Shell_PG_Model.png\",\r\n    \"Obtained\": \"rSbaUIAmwUgwkY1K6tq#LGscTY%2\",\r\n    \"Checked\": \"\"\r\n  },\r\n{\r\n    \"id\": \"secret-0012\",\r\n    \"Label\": \"Luigi trophy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Luigi_Trophy_PG_Model.png\",\r\n    \"Obtained\": \"EOktvXIJ7WdzRjuiT28vpqcWbJ1g\",\r\n    \"Checked\": \"\"\r\n  },\r\n{\r\n    \"id\": \"secret-0013\",\r\n    \"Label\": \"Mario trophy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Mario_Trophy_PG_Model.png\",\r\n    \"Obtained\": \"1mWYg6IfB@&q758XzSKd6Tuj7Lts\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0014\",\r\n    \"Label\": \"Nintendo bench\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Nintendo_Bench_PG_Model.png\",\r\n    \"Obtained\": \"cU3jlm@hdl6AipzJFAEajAcbZXim\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0015\",\r\n    \"Label\": \"Punchout\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Punchout_PG_Model.png\",\r\n    \"Obtained\": \"Universal code not available\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0016\",\r\n    \"Label\": \"Soccer\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Soccer_PG_Model.png\",\r\n    \"Obtained\": \"Universal code not available\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0017\",\r\n    \"Label\": \"Starman\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Starman_PG_Model.png\",\r\n    \"Obtained\": \"4UF6T948GZ3ZW3dw#%jtLEqj5ZBf\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"secret-0018\",\r\n    \"Label\": \"Super mushroom\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/secret_code/64px-Super_Mushroom_PG_Model.png\",\r\n    \"Obtained\": \"#SbaUIRmw#gwkYBh66qeLMscTY%2\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"7a353f03-c491-35fb-5158-d77b28cb8cfa","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"fb7466cf-c359-59a6-20d9-e10a51938ad0","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":47,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('secret-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Secret Code Progress: ${count} / 18`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"c724f6f8-a090-80cc-3116-82c730011d46","type":"net.noodl.externallink","x":291,"y":698,"parameters":{"link":"https://nookipedia.com/wiki/Secret_code/Generator"},"ports":[],"dynamicports":[],"children":[]},{"id":"33fbf690-aa82-40f0-3b23-61d54d443e95","type":"JavaScriptFunction","label":"Play Audio File","x":396,"y":633,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["43429b1f-606c-21c7-d957-1a2249e0aedc"]}},{"name":"/Collection Pages/Furniture/Secret Codes/Secret Codes Logic","id":"84c0839f-00f1-29a0-1f76-87645dbfd839","graph":{"connections":[{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-ID","toId":"113d7671-642a-8f49-fd74-684f13889cc3","toProperty":"in-ID"},{"fromId":"113d7671-642a-8f49-fd74-684f13889cc3","fromProperty":"out-ID","toId":"359fcce1-4df4-1120-f054-5e19f44f4e4c","toProperty":"modelId"},{"fromId":"113d7671-642a-8f49-fd74-684f13889cc3","fromProperty":"out-Checked","toId":"359fcce1-4df4-1120-f054-5e19f44f4e4c","toProperty":"prop-Checked"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Label","toId":"113d7671-642a-8f49-fd74-684f13889cc3","toProperty":"in-Label"},{"fromId":"257d9663-a4bb-e01f-3a28-634b3a2ad452","fromProperty":"id","toId":"a197438b-f908-489d-ec7f-da561091be82","toProperty":"in-ID"},{"fromId":"257d9663-a4bb-e01f-3a28-634b3a2ad452","fromProperty":"prop-Label","toId":"a197438b-f908-489d-ec7f-da561091be82","toProperty":"in-Label"},{"fromId":"257d9663-a4bb-e01f-3a28-634b3a2ad452","fromProperty":"prop-Image","toId":"a197438b-f908-489d-ec7f-da561091be82","toProperty":"in-Icon"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Label","toId":"50a2046e-b6a2-f29d-5386-f91760f01ff6","toProperty":"text"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Icon","toId":"9718e1ea-8fe6-8482-b85f-c4566370ce72","toProperty":"src"},{"fromId":"257d9663-a4bb-e01f-3a28-634b3a2ad452","fromProperty":"prop-Checked","toId":"a197438b-f908-489d-ec7f-da561091be82","toProperty":"in-Checked"},{"fromId":"257d9663-a4bb-e01f-3a28-634b3a2ad452","fromProperty":"prop-Price","toId":"a197438b-f908-489d-ec7f-da561091be82","toProperty":"in-Price"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Price","toId":"113d7671-642a-8f49-fd74-684f13889cc3","toProperty":"in-Price"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Icon","toId":"113d7671-642a-8f49-fd74-684f13889cc3","toProperty":"in-Icon"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Checked","toId":"3c88ebd3-6548-b055-ca7a-be515742ba1a","toProperty":"checked"},{"fromId":"3c88ebd3-6548-b055-ca7a-be515742ba1a","fromProperty":"checked","toId":"113d7671-642a-8f49-fd74-684f13889cc3","toProperty":"in-Checked"},{"fromId":"3c88ebd3-6548-b055-ca7a-be515742ba1a","fromProperty":"onChange","toId":"113d7671-642a-8f49-fd74-684f13889cc3","toProperty":"in-Changed"},{"fromId":"3c88ebd3-6548-b055-ca7a-be515742ba1a","fromProperty":"onChange","toId":"359fcce1-4df4-1120-f054-5e19f44f4e4c","toProperty":"store"},{"fromId":"257d9663-a4bb-e01f-3a28-634b3a2ad452","fromProperty":"prop-Obtained","toId":"a197438b-f908-489d-ec7f-da561091be82","toProperty":"in-Obtained"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Obtained","toId":"113d7671-642a-8f49-fd74-684f13889cc3","toProperty":"in-Obtained"},{"fromId":"a197438b-f908-489d-ec7f-da561091be82","fromProperty":"out-Obtained","toId":"0ce5913b-4d12-237b-b336-bec943f7586c","toProperty":"text"},{"fromId":"3c88ebd3-6548-b055-ca7a-be515742ba1a","fromProperty":"onChange","toId":"98004b31-681f-d1e4-d1e5-b5a91987657e","toProperty":"run"}],"roots":[{"id":"99e24418-0844-a7cb-07a3-711a9f486c79","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e2e98094-44af-de58-f5b6-ba7f5fbb6d75","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"65e8a881-5e1b-6da0-8d35-2f619c4a9225","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"6000c258-e8e1-837f-5b78-48f0ee3996bf","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"6a1e3b08-8f45-abce-e5aa-1d7eaf9d9dd4","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d63b7455-7ec7-840c-f854-a7a30bd67084","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e7ec05e2-efa8-f1ad-93c4-4549acb99086","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"9718e1ea-8fe6-8482-b85f-c4566370ce72","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"50a2046e-b6a2-f29d-5386-f91760f01ff6","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f3b59e4d-91fe-42af-5d87-7067c5356866","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"3c88ebd3-6548-b055-ca7a-be515742ba1a","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"3a3b85e8-2767-53cc-3225-fd522aa7db5e","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":35,"unit":"px"},"marginBottom":{"value":-25,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b81a3f7d-c4b0-d6fc-46a0-16efe779e54d","type":"Text","parameters":{"text":"Secret Code","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"0ce5913b-4d12-237b-b336-bec943f7586c","type":"Text","parameters":{"text":"Label","textStyle":"Title Medium","wordBreak":"normal","marginTop":{"value":10,"unit":"px"},"alignX":"center","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"257d9663-a4bb-e01f-3a28-634b3a2ad452","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"359fcce1-4df4-1120-f054-5e19f44f4e4c","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"a197438b-f908-489d-ec7f-da561091be82","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"113d7671-642a-8f49-fd74-684f13889cc3","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"98004b31-681f-d1e4-d1e5-b5a91987657e","type":"JavaScriptFunction","label":"Play Audio File","x":344,"y":748,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["99e24418-0844-a7cb-07a3-711a9f486c79"]}},{"name":"/Collection Pages/Furniture/Secret Codes/Secret Codes Logic/Options","id":"f210c1a0-8768-db57-e50d-627f92f05906","graph":{"connections":[{"fromId":"2b62bb97-8f46-64c5-1273-931b33ef862e","fromProperty":"id","toId":"0da7ba65-300e-da40-5700-1b911b504743","toProperty":"in-ID"},{"fromId":"2b62bb97-8f46-64c5-1273-931b33ef862e","fromProperty":"prop-Label","toId":"0da7ba65-300e-da40-5700-1b911b504743","toProperty":"in-Label"},{"fromId":"2b62bb97-8f46-64c5-1273-931b33ef862e","fromProperty":"prop-Checked","toId":"0da7ba65-300e-da40-5700-1b911b504743","toProperty":"in-Checked"},{"fromId":"0da7ba65-300e-da40-5700-1b911b504743","fromProperty":"out-ID","toId":"118d818d-4211-63f6-50ba-a810bc01fab4","toProperty":"in-ID"},{"fromId":"118d818d-4211-63f6-50ba-a810bc01fab4","fromProperty":"out-ID","toId":"768acfa6-5330-3144-cf14-950de18ccc7d","toProperty":"modelId"},{"fromId":"118d818d-4211-63f6-50ba-a810bc01fab4","fromProperty":"out-Checked","toId":"768acfa6-5330-3144-cf14-950de18ccc7d","toProperty":"prop-Checked"},{"fromId":"0da7ba65-300e-da40-5700-1b911b504743","fromProperty":"out-Label","toId":"118d818d-4211-63f6-50ba-a810bc01fab4","toProperty":"in-Label"},{"fromId":"2b62bb97-8f46-64c5-1273-931b33ef862e","fromProperty":"prop-Icon","toId":"0da7ba65-300e-da40-5700-1b911b504743","toProperty":"in-Icon"},{"fromId":"0da7ba65-300e-da40-5700-1b911b504743","fromProperty":"out-Icon","toId":"118d818d-4211-63f6-50ba-a810bc01fab4","toProperty":"in-Icon"},{"fromId":"768acfa6-5330-3144-cf14-950de18ccc7d","fromProperty":"stored","toId":"dbcff418-0c52-e61a-2c0e-c92023a0a070","toProperty":"Selection Changed"},{"fromId":"b2e29690-7bcd-2996-ac61-af28e09f9e98","fromProperty":"onChange","toId":"768acfa6-5330-3144-cf14-950de18ccc7d","toProperty":"store"},{"fromId":"b2e29690-7bcd-2996-ac61-af28e09f9e98","fromProperty":"onChange","toId":"118d818d-4211-63f6-50ba-a810bc01fab4","toProperty":"in-Changed"},{"fromId":"b2e29690-7bcd-2996-ac61-af28e09f9e98","fromProperty":"checked","toId":"118d818d-4211-63f6-50ba-a810bc01fab4","toProperty":"in-Checked"},{"fromId":"0da7ba65-300e-da40-5700-1b911b504743","fromProperty":"out-Checked","toId":"b2e29690-7bcd-2996-ac61-af28e09f9e98","toProperty":"checked"},{"fromId":"0da7ba65-300e-da40-5700-1b911b504743","fromProperty":"out-Label","toId":"b2e29690-7bcd-2996-ac61-af28e09f9e98","toProperty":"label"}],"roots":[{"id":"03e129b1-3b6f-3da4-2494-4ef625e61dce","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"b2e29690-7bcd-2996-ac61-af28e09f9e98","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"2b62bb97-8f46-64c5-1273-931b33ef862e","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"768acfa6-5330-3144-cf14-950de18ccc7d","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"0da7ba65-300e-da40-5700-1b911b504743","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"118d818d-4211-63f6-50ba-a810bc01fab4","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"dbcff418-0c52-e61a-2c0e-c92023a0a070","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["03e129b1-3b6f-3da4-2494-4ef625e61dce"]}},{"name":"/Collection Pages/Furniture/Snowman/Snowman","id":"e96d1ed7-1280-7d00-befa-0e2abf35a253","graph":{"connections":[{"fromId":"c4c02f57-9efd-632f-0e20-67741b523f0f","fromProperty":"items","toId":"4a5a62f2-9446-7310-365b-95b8dae86707","toProperty":"items"},{"fromId":"86d2b478-4b62-4bc8-47d7-3d8af9ae681b","fromProperty":"out-Success","toId":"4a5a62f2-9446-7310-365b-95b8dae86707","toProperty":"refresh"},{"fromId":"21bc620a-8f5d-a503-bd07-7a9d68da6a31","fromProperty":"out-CountText","toId":"fa094ace-63f5-6fb1-b406-f4a71384d8d9","toProperty":"text"}],"roots":[{"id":"39ab2e54-3c7b-2495-188f-57d469e0c318","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Snowman","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"snowman","index":32}],"children":[{"id":"776db5bf-07fe-f290-7629-504fe78f3c73","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"bbd20517-0014-062a-aab4-2500ff468e54","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"fa094ace-63f5-6fb1-b406-f4a71384d8d9","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Igloo Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"3e7bad23-159b-c236-4747-ba655da7c3b0","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"45292a09-c52c-bfe6-7d8f-2a06121a5113","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"5893ead9-f356-f954-b062-efafa7d86431","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/snowman.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"1d0ac629-77b3-3149-5abe-3102f385121b","type":"Text","label":"","parameters":{"text":"Snowman","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b36730c7-ac69-9e84-ce0f-c29506d10693","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"26889028-19b3-4c7f-1be0-24af6cb1d3c8","type":"Text","label":"","parameters":{"text":"You can obtain Snowman items in the mail by making a perfectly built Snowman and talking to him.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"4a5a62f2-9446-7310-365b-95b8dae86707","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Snowman/Snowman Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"174049b9-51fe-50b0-a860-c9d04bc95b89","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"c4c02f57-9efd-632f-0e20-67741b523f0f","type":"Collection2","label":"Igloos","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"snowman-0001\",\r\n    \"Label\": \"Snowman bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Bed_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0002\",\r\n    \"Label\": \"Snowman chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Chair_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0003\",\r\n    \"Label\": \"Snowman clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Clock_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0004\",\r\n    \"Label\": \"Snowman dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Dresser_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0005\",\r\n    \"Label\": \"Snowman fridge\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Fridge_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0006\",\r\n    \"Label\": \"Snowman lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Lamp_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0007\",\r\n    \"Label\": \"Snowman sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Sofa_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0008\",\r\n    \"Label\": \"Snowman table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Table_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0009\",\r\n    \"Label\": \"Snowman TV\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_TV_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"snowman-0010\",\r\n    \"Label\": \"Snowman wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/snowman/64px-Snowman_Wardrobe_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"86d2b478-4b62-4bc8-47d7-3d8af9ae681b","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":383,"y":628,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"21bc620a-8f5d-a503-bd07-7a9d68da6a31","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":48,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('snowman-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Snowman Progress: ${count} / 10`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["39ab2e54-3c7b-2495-188f-57d469e0c318"]}},{"name":"/Collection Pages/Furniture/Snowman/Snowman Logic","id":"60626694-8163-c4b1-adda-b4a41b69565e","graph":{"connections":[{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-ID","toId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","toProperty":"in-ID"},{"fromId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","fromProperty":"out-ID","toId":"96b49d02-498b-8bf4-9337-26ad32f0f8bc","toProperty":"modelId"},{"fromId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","fromProperty":"out-Checked","toId":"96b49d02-498b-8bf4-9337-26ad32f0f8bc","toProperty":"prop-Checked"},{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-Label","toId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","toProperty":"in-Label"},{"fromId":"2b26849d-a59d-784a-71c5-6317e0760ed9","fromProperty":"id","toId":"1d0f8711-9c8e-2658-55c2-022664522e4f","toProperty":"in-ID"},{"fromId":"2b26849d-a59d-784a-71c5-6317e0760ed9","fromProperty":"prop-Label","toId":"1d0f8711-9c8e-2658-55c2-022664522e4f","toProperty":"in-Label"},{"fromId":"2b26849d-a59d-784a-71c5-6317e0760ed9","fromProperty":"prop-Image","toId":"1d0f8711-9c8e-2658-55c2-022664522e4f","toProperty":"in-Icon"},{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-Label","toId":"cd6fc848-3b34-7904-5f10-2535a9201aa7","toProperty":"text"},{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-Icon","toId":"edce2eeb-12a7-af96-7164-256ffa2efe3f","toProperty":"src"},{"fromId":"2b26849d-a59d-784a-71c5-6317e0760ed9","fromProperty":"prop-Checked","toId":"1d0f8711-9c8e-2658-55c2-022664522e4f","toProperty":"in-Checked"},{"fromId":"2b26849d-a59d-784a-71c5-6317e0760ed9","fromProperty":"prop-Price","toId":"1d0f8711-9c8e-2658-55c2-022664522e4f","toProperty":"in-Price"},{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-Price","toId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","toProperty":"in-Price"},{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-Icon","toId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","toProperty":"in-Icon"},{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-Checked","toId":"47c5b5f8-ff8a-94bf-7c5c-a12bb7a82d70","toProperty":"checked"},{"fromId":"47c5b5f8-ff8a-94bf-7c5c-a12bb7a82d70","fromProperty":"checked","toId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","toProperty":"in-Checked"},{"fromId":"47c5b5f8-ff8a-94bf-7c5c-a12bb7a82d70","fromProperty":"onChange","toId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","toProperty":"in-Changed"},{"fromId":"47c5b5f8-ff8a-94bf-7c5c-a12bb7a82d70","fromProperty":"onChange","toId":"96b49d02-498b-8bf4-9337-26ad32f0f8bc","toProperty":"store"},{"fromId":"2b26849d-a59d-784a-71c5-6317e0760ed9","fromProperty":"prop-Obtained","toId":"1d0f8711-9c8e-2658-55c2-022664522e4f","toProperty":"in-Obtained"},{"fromId":"1d0f8711-9c8e-2658-55c2-022664522e4f","fromProperty":"out-Obtained","toId":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","toProperty":"in-Obtained"},{"fromId":"47c5b5f8-ff8a-94bf-7c5c-a12bb7a82d70","fromProperty":"onChange","toId":"d8dca03b-2195-1418-c651-06c93e872d21","toProperty":"run"}],"roots":[{"id":"6ca10be6-0e26-b53f-0e00-b8d4c49d3830","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ca271f5e-f564-467c-7f97-5f9ae73f3c8e","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a7112512-66e5-36c7-2c89-8bf9ba3b85c4","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"aa572c80-9fc5-a674-7d86-8d4ee2250395","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"609c8d22-b111-409e-1beb-0dede4016197","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b17e3313-0f21-0557-13cc-a1759e13871b","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d3fb8e0f-ce36-801f-cc93-f6fbd2df0ae7","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"edce2eeb-12a7-af96-7164-256ffa2efe3f","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"cd6fc848-3b34-7904-5f10-2535a9201aa7","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"5d9a88a1-1efc-e435-c5c6-8d91ee0d64c8","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"47c5b5f8-ff8a-94bf-7c5c-a12bb7a82d70","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"2b26849d-a59d-784a-71c5-6317e0760ed9","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"96b49d02-498b-8bf4-9337-26ad32f0f8bc","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"1d0f8711-9c8e-2658-55c2-022664522e4f","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d910dc23-bf4f-7ad7-3cb3-347c984e0b2e","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"d8dca03b-2195-1418-c651-06c93e872d21","type":"JavaScriptFunction","label":"Play Audio File","x":361,"y":683,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["6ca10be6-0e26-b53f-0e00-b8d4c49d3830"]}},{"name":"/Collection Pages/Furniture/Snowman/Snowman Logic/Options","id":"5df56f61-8b50-4d66-fd16-903d9541c03c","graph":{"connections":[{"fromId":"71072770-80d9-fc5c-24f7-3da148d8d951","fromProperty":"id","toId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","toProperty":"in-ID"},{"fromId":"71072770-80d9-fc5c-24f7-3da148d8d951","fromProperty":"prop-Label","toId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","toProperty":"in-Label"},{"fromId":"71072770-80d9-fc5c-24f7-3da148d8d951","fromProperty":"prop-Checked","toId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","toProperty":"in-Checked"},{"fromId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","fromProperty":"out-ID","toId":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","toProperty":"in-ID"},{"fromId":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","fromProperty":"out-ID","toId":"8cffbfa4-1905-56d1-48b8-1a38ca4b2d82","toProperty":"modelId"},{"fromId":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","fromProperty":"out-Checked","toId":"8cffbfa4-1905-56d1-48b8-1a38ca4b2d82","toProperty":"prop-Checked"},{"fromId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","fromProperty":"out-Label","toId":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","toProperty":"in-Label"},{"fromId":"71072770-80d9-fc5c-24f7-3da148d8d951","fromProperty":"prop-Icon","toId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","toProperty":"in-Icon"},{"fromId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","fromProperty":"out-Icon","toId":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","toProperty":"in-Icon"},{"fromId":"8cffbfa4-1905-56d1-48b8-1a38ca4b2d82","fromProperty":"stored","toId":"b4eeeb41-bd62-a4c4-a7f3-bda14a556790","toProperty":"Selection Changed"},{"fromId":"bdf73b22-dbb8-1b82-d461-897dd8af23d1","fromProperty":"onChange","toId":"8cffbfa4-1905-56d1-48b8-1a38ca4b2d82","toProperty":"store"},{"fromId":"bdf73b22-dbb8-1b82-d461-897dd8af23d1","fromProperty":"onChange","toId":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","toProperty":"in-Changed"},{"fromId":"bdf73b22-dbb8-1b82-d461-897dd8af23d1","fromProperty":"checked","toId":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","toProperty":"in-Checked"},{"fromId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","fromProperty":"out-Checked","toId":"bdf73b22-dbb8-1b82-d461-897dd8af23d1","toProperty":"checked"},{"fromId":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","fromProperty":"out-Label","toId":"bdf73b22-dbb8-1b82-d461-897dd8af23d1","toProperty":"label"}],"roots":[{"id":"a8b4ab6f-4758-80bd-4f26-6d1ea9fe6ca7","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"bdf73b22-dbb8-1b82-d461-897dd8af23d1","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"71072770-80d9-fc5c-24f7-3da148d8d951","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"8cffbfa4-1905-56d1-48b8-1a38ca4b2d82","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"6bd5f9ea-d73b-20ad-5daa-1e25ceb36574","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"516fdb89-cafe-40cd-4ac9-c404dd2bd270","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"b4eeeb41-bd62-a4c4-a7f3-bda14a556790","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["a8b4ab6f-4758-80bd-4f26-6d1ea9fe6ca7"]}},{"name":"/Collection Pages/Furniture/Summer Camper/Summer Camper","id":"29083d63-a6aa-8be5-9882-e41744661234","graph":{"connections":[{"fromId":"9cf5bb10-6297-cf97-ff94-905278fe17f7","fromProperty":"items","toId":"3c95a77a-65da-01f6-49b7-c78d49f2125a","toProperty":"items"},{"fromId":"ac95292f-1a74-f013-274b-5aa447e3f2b5","fromProperty":"out-Success","toId":"3c95a77a-65da-01f6-49b7-c78d49f2125a","toProperty":"refresh"},{"fromId":"158add31-9d26-e8e3-dd81-0099c1ef98d4","fromProperty":"out-CountText","toId":"97da2480-ed34-34c9-bc45-8b4d93e5194f","toProperty":"text"}],"roots":[{"id":"0c6146c7-3765-ee7a-3b53-5201a579ce8e","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Summer Camper","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"summer-camper","index":32}],"children":[{"id":"8911e805-f3c4-8a8d-0868-69759af2e00d","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"085e6e52-5973-5ed6-5c6d-7adf15aac22b","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"97da2480-ed34-34c9-bc45-8b4d93e5194f","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Summer Camper Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"6176a37c-53f7-0f65-b6bb-2bd2f4a4f8ac","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4795df13-ed11-176a-e4e6-b1ba9929fb77","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e0345462-3d16-d7d8-f6aa-48f130ff230c","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/furniture/campers/summer/64px-Tent_Model_PG_Model.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"af31763d-52f8-892f-b3ff-1c8bc8573da1","type":"Text","label":"","parameters":{"text":"Summer Camper","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b277dc97-87c1-3f07-0c9c-3b8cdf212224","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e93a4ced-89bc-728c-3a17-9caad2a0f2cc","type":"Text","label":"","parameters":{"text":"Summer Campers visit your town every weekend in June through August, from 9:00 AM Saturday morning, until 2:59 PM on Sunday afternoon.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3c95a77a-65da-01f6-49b7-c78d49f2125a","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Summer Camper/Summer Camper Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"d1120203-32be-06c5-5e5b-ff7243709168","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"9cf5bb10-6297-cf97-ff94-905278fe17f7","type":"Collection2","label":"Summer Campers","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"summercamper-0001\",\r\n    \"Label\": \"Backpack\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Backpack_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0002\",\r\n    \"Label\": \"Bonfire\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Bonfire_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0003\",\r\n    \"Label\": \"Campfire\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Campfire_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0004\",\r\n    \"Label\": \"Cooler\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Cooler_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0005\",\r\n    \"Label\": \"Kayak\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Kayak_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0006\",\r\n    \"Label\": \"Lantern\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Lantern_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0007\",\r\n    \"Label\": \"Mountain bike\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Mountain_Bike_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0008\",\r\n    \"Label\": \"Propane stove\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Propane_Stove_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0009\",\r\n    \"Label\": \"Sleeping bag\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Sleeping_Bag_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"summercamper-0010\",\r\n    \"Label\": \"Tent model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/campers/summer/64px-Tent_Model_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"ac95292f-1a74-f013-274b-5aa447e3f2b5","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"158add31-9d26-e8e3-dd81-0099c1ef98d4","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-243,"y":44,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('summercamper-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Summer Camper Progress: ${count} / 10`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["0c6146c7-3765-ee7a-3b53-5201a579ce8e"]}},{"name":"/Collection Pages/Furniture/Summer Camper/Summer Camper Logic","id":"507e30ac-72ea-3fdf-57f0-11c3b7e5186b","graph":{"connections":[{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-ID","toId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","toProperty":"in-ID"},{"fromId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","fromProperty":"out-ID","toId":"edb245bd-b147-9b0a-20d9-e30832a7cc9f","toProperty":"modelId"},{"fromId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","fromProperty":"out-Checked","toId":"edb245bd-b147-9b0a-20d9-e30832a7cc9f","toProperty":"prop-Checked"},{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-Label","toId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","toProperty":"in-Label"},{"fromId":"21efb0e4-39e8-a8ba-d92f-7912f729a68a","fromProperty":"id","toId":"8bf5f274-ffc2-90c4-737c-d923605f7469","toProperty":"in-ID"},{"fromId":"21efb0e4-39e8-a8ba-d92f-7912f729a68a","fromProperty":"prop-Label","toId":"8bf5f274-ffc2-90c4-737c-d923605f7469","toProperty":"in-Label"},{"fromId":"21efb0e4-39e8-a8ba-d92f-7912f729a68a","fromProperty":"prop-Image","toId":"8bf5f274-ffc2-90c4-737c-d923605f7469","toProperty":"in-Icon"},{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-Label","toId":"b607ce92-ba07-b910-2048-ad16cc5efadf","toProperty":"text"},{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-Icon","toId":"a7d74cb9-b43b-b3d4-0972-307a0dab263a","toProperty":"src"},{"fromId":"21efb0e4-39e8-a8ba-d92f-7912f729a68a","fromProperty":"prop-Checked","toId":"8bf5f274-ffc2-90c4-737c-d923605f7469","toProperty":"in-Checked"},{"fromId":"21efb0e4-39e8-a8ba-d92f-7912f729a68a","fromProperty":"prop-Price","toId":"8bf5f274-ffc2-90c4-737c-d923605f7469","toProperty":"in-Price"},{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-Price","toId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","toProperty":"in-Price"},{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-Icon","toId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","toProperty":"in-Icon"},{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-Checked","toId":"b581040f-8cbe-7915-0dc9-35f386408acd","toProperty":"checked"},{"fromId":"b581040f-8cbe-7915-0dc9-35f386408acd","fromProperty":"checked","toId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","toProperty":"in-Checked"},{"fromId":"b581040f-8cbe-7915-0dc9-35f386408acd","fromProperty":"onChange","toId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","toProperty":"in-Changed"},{"fromId":"b581040f-8cbe-7915-0dc9-35f386408acd","fromProperty":"onChange","toId":"edb245bd-b147-9b0a-20d9-e30832a7cc9f","toProperty":"store"},{"fromId":"21efb0e4-39e8-a8ba-d92f-7912f729a68a","fromProperty":"prop-Obtained","toId":"8bf5f274-ffc2-90c4-737c-d923605f7469","toProperty":"in-Obtained"},{"fromId":"8bf5f274-ffc2-90c4-737c-d923605f7469","fromProperty":"out-Obtained","toId":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","toProperty":"in-Obtained"},{"fromId":"b581040f-8cbe-7915-0dc9-35f386408acd","fromProperty":"onChange","toId":"f4805c9f-e5f7-f624-d088-9a4d616a134a","toProperty":"run"}],"roots":[{"id":"c8664d7a-9b33-9352-bf1c-091ab956bfc6","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0b98e375-0ba8-5431-6b25-0337e1be1b2b","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a79fcea2-267e-fb95-f0f2-a8a1cc1ca5f9","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"82d1b65a-c96d-9492-fb39-d78a1ae738f5","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"5b84c1cf-046d-153a-0c13-f205c98ef0ca","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f839d932-c910-66c4-796c-f986912afa65","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ea7d3875-a1ef-eb53-876e-bc51309f0719","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"a7d74cb9-b43b-b3d4-0972-307a0dab263a","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b607ce92-ba07-b910-2048-ad16cc5efadf","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f7697223-db73-bf51-085b-7587e2d0c0da","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b581040f-8cbe-7915-0dc9-35f386408acd","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"21efb0e4-39e8-a8ba-d92f-7912f729a68a","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"edb245bd-b147-9b0a-20d9-e30832a7cc9f","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"8bf5f274-ffc2-90c4-737c-d923605f7469","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"2423e1ac-e53a-58c3-f1d3-e647eb4f012d","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"f4805c9f-e5f7-f624-d088-9a4d616a134a","type":"JavaScriptFunction","label":"Play Audio File","x":457,"y":623,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["c8664d7a-9b33-9352-bf1c-091ab956bfc6"]}},{"name":"/Collection Pages/Furniture/Summer Camper/Summer Camper Logic/Options","id":"0b872ef0-e4c1-e220-f07d-5179d9e9cbd9","graph":{"connections":[{"fromId":"d6d7904a-f2bb-b6aa-e030-cca72cfc9452","fromProperty":"id","toId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","toProperty":"in-ID"},{"fromId":"d6d7904a-f2bb-b6aa-e030-cca72cfc9452","fromProperty":"prop-Label","toId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","toProperty":"in-Label"},{"fromId":"d6d7904a-f2bb-b6aa-e030-cca72cfc9452","fromProperty":"prop-Checked","toId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","toProperty":"in-Checked"},{"fromId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","fromProperty":"out-ID","toId":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","toProperty":"in-ID"},{"fromId":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","fromProperty":"out-ID","toId":"594994c3-ad38-c8a3-fb07-2e4f9ed8f61c","toProperty":"modelId"},{"fromId":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","fromProperty":"out-Checked","toId":"594994c3-ad38-c8a3-fb07-2e4f9ed8f61c","toProperty":"prop-Checked"},{"fromId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","fromProperty":"out-Label","toId":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","toProperty":"in-Label"},{"fromId":"d6d7904a-f2bb-b6aa-e030-cca72cfc9452","fromProperty":"prop-Icon","toId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","toProperty":"in-Icon"},{"fromId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","fromProperty":"out-Icon","toId":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","toProperty":"in-Icon"},{"fromId":"594994c3-ad38-c8a3-fb07-2e4f9ed8f61c","fromProperty":"stored","toId":"ff4e8b47-0a25-8c08-535e-39d33ed46182","toProperty":"Selection Changed"},{"fromId":"63072445-7929-6426-5af7-3dfe0a345c78","fromProperty":"onChange","toId":"594994c3-ad38-c8a3-fb07-2e4f9ed8f61c","toProperty":"store"},{"fromId":"63072445-7929-6426-5af7-3dfe0a345c78","fromProperty":"onChange","toId":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","toProperty":"in-Changed"},{"fromId":"63072445-7929-6426-5af7-3dfe0a345c78","fromProperty":"checked","toId":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","toProperty":"in-Checked"},{"fromId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","fromProperty":"out-Checked","toId":"63072445-7929-6426-5af7-3dfe0a345c78","toProperty":"checked"},{"fromId":"c2c588cb-ac5b-11fb-3c2c-be769597b979","fromProperty":"out-Label","toId":"63072445-7929-6426-5af7-3dfe0a345c78","toProperty":"label"}],"roots":[{"id":"0b3f7523-f10b-daed-e697-ca519a0ab386","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"63072445-7929-6426-5af7-3dfe0a345c78","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d6d7904a-f2bb-b6aa-e030-cca72cfc9452","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"594994c3-ad38-c8a3-fb07-2e4f9ed8f61c","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"c2c588cb-ac5b-11fb-3c2c-be769597b979","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"383121b7-5f35-dbcd-e7f7-efe8adf74fcd","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"ff4e8b47-0a25-8c08-535e-39d33ed46182","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["0b3f7523-f10b-daed-e697-ca519a0ab386"]}},{"name":"/Collection Pages/Furniture/Tortimer/Tortimer","id":"56453aff-7b3a-6415-c659-96f4dc6e7489","graph":{"connections":[{"fromId":"ac7f99ee-6e1b-a240-673e-d6fc66a60b20","fromProperty":"items","toId":"86aaa759-ea4f-c3d4-d6a5-b12c0db5e687","toProperty":"items"},{"fromId":"9b764d96-f2ee-6880-eaec-3504edd87761","fromProperty":"out-Success","toId":"86aaa759-ea4f-c3d4-d6a5-b12c0db5e687","toProperty":"refresh"},{"fromId":"1f503f69-12f4-d51d-6c79-9621bd940e26","fromProperty":"out-CountText","toId":"e805f9f1-135f-c31a-b652-66b424aa5027","toProperty":"text"}],"roots":[{"id":"8698db53-59c9-f940-3b0c-4f86bdd46243","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Tortimer","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"tortimer","index":32}],"children":[{"id":"4c39a652-d8c6-14ff-dc04-ccc693e7d62a","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"bf973cf6-2b51-7f63-213a-d0035ab11100","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e805f9f1-135f-c31a-b652-66b424aa5027","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Igloo Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"9a9bdbd3-ee73-2f53-a9e1-de67d5b06f45","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7d8a304f-d28d-39a3-b54e-88ba138afe5f","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"32695b2b-40b4-3380-30a8-b91f13236d0f","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/Tortimer_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"8829d3bc-1fac-41c9-1cd0-9f87a35b05ba","type":"Text","label":"","parameters":{"text":"Tortimer","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"54aac247-aedb-d58b-1617-987d59709c3f","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cdcd1862-9239-3155-a344-217bd2e90985","type":"Text","label":"","parameters":{"text":"Tortimer can generally be found at the wishing well.  During Fishing Tourneys he can be found on a random acre.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"86aaa759-ea4f-c3d4-d6a5-b12c0db5e687","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Tortimer/Tortimer Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"2a89288b-e94f-f797-0cfd-037767fcc0db","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"ac7f99ee-6e1b-a240-673e-d6fc66a60b20","type":"Collection2","label":"Igloos","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"tortimer-0001\",\r\n    \"Label\": \"Aerobics radio\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Aerobics_Radio_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer after completing morning aerobics 14 times.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0002\",\r\n    \"Label\": \"Angler trophy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Angler_Trophy_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Summer Fishing Tourney.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0003\",\r\n    \"Label\": \"Autumn medal\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Autumn_Medal_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Fall Sports Fair.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0004\",\r\n    \"Label\": \"Bottle rocket\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Bottle_Rocket_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Fireworks Festival.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0005\",\r\n    \"Label\": \"Bottled ship\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Bottled_Ship_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Explorer's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0006\",\r\n    \"Label\": \"Chocolates\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Chocolates_PG_Model.png\",\r\n    \"Obtained\": \"Tend to the lighthouse every night during Tortimer's vacation.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0007\",\r\n    \"Label\": \"Cornucopia\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Cornucopia_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Harvest Festival.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0008\",\r\n    \"Label\": \"Cosmos model 1\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Cosmos_Model_1_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0009\",\r\n    \"Label\": \"Cosmos model 2\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Cosmos_Model_2_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0010\",\r\n    \"Label\": \"Cosmos model 3\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Cosmos_Model_3_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0011\",\r\n    \"Label\": \"Dolly\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Dolly_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Toy Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0012\",\r\n    \"Label\": \"Dump model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Dump_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Spring Cleaning Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0013\",\r\n    \"Label\": \"Fishing trophy\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Fishing_Trophy_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Fall Fishing Tourney.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0014\",\r\n    \"Label\": \"Katrina's tent\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Katrina's_Tent_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Halloween.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0015\",\r\n    \"Label\": \"Lighthouse model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Lighthouse_Model_PG_Model.png\",\r\n    \"Obtained\": \"Tend to the lighthouse every night during Tortimer's vacation.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0016\",\r\n    \"Label\": \"Locomotive model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Locomotive_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Father's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0017\",\r\n    \"Label\": \"Lovely phone\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Lovely_Phone_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Mother's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0018\",\r\n    \"Label\": \"Market model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Market_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Sale Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0019\",\r\n    \"Label\": \"Miniature car\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Miniature_Car_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Toy Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0020\",\r\n    \"Label\": \"Moon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Moon_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Harvest Moon Festival.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0021\",\r\n    \"Label\": \"Noisemaker\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Noisemaker_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on New Year's Eve.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0022\",\r\n    \"Label\": \"Pansy model 1\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Pansy_Model_1_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0023\",\r\n    \"Label\": \"Pansy model 2\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Pansy_Model_2_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0024\",\r\n    \"Label\": \"Pansy model 3\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Pansy_Model_3_PG_Model.png\",\r\n    \"Obtained\": \"Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0025\",\r\n    \"Label\": \"Pink tree model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Pink_Tree_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Cherry Blossom Festival.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0026\",\r\n    \"Label\": \"Police model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Police_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Officer's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0027\",\r\n    \"Label\": \"Shop model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Shop_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Labor Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0028\",\r\n    \"Label\": \"Snowman\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Snowman_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Snow Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0029\",\r\n    \"Label\": \"Spring medal\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Spring_Medal_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Spring Sports Fair.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0030\",\r\n    \"Label\": \"Station model 1\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_1_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0031\",\r\n    \"Label\": \"Station model 2\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_2_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0032\",\r\n    \"Label\": \"Station model 3\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_3_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0033\",\r\n    \"Label\": \"Station model 4\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_4_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0034\",\r\n    \"Label\": \"Station model 5\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_5_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0035\",\r\n    \"Label\": \"Station model 6\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_6_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0036\",\r\n    \"Label\": \"Station model 7\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_7_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0037\",\r\n    \"Label\": \"Station model 8\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_8_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0038\",\r\n    \"Label\": \"Station model 9\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_9_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0039\",\r\n    \"Label\": \"Station model 10\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_10_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0040\",\r\n    \"Label\": \"Station model 11\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_11_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0041\",\r\n    \"Label\": \"Station model 12\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_12_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0042\",\r\n    \"Label\": \"Station model 13\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_13_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0043\",\r\n    \"Label\": \"Station model 14\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_14_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0044\",\r\n    \"Label\": \"Station model 15\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Station_Model_15_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Hometown Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0045\",\r\n    \"Label\": \"Super Tortimer\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Super_Tortimer_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on April Fool's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0046\",\r\n    \"Label\": \"Tailor model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Tailor_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Graduation Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0047\",\r\n    \"Label\": \"Telescope\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Telescope_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer during the Meteor Shower.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0048\",\r\n    \"Label\": \"Tree model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Tree_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Nature Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0049\",\r\n    \"Label\": \"Tulip model 1\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Tulip_Model_1_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0050\",\r\n    \"Label\": \"Tulip model 2\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Tulip_Model_2_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0051\",\r\n    \"Label\": \"Tulip model 3\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Tulip_Model_3_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Groundhog Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0052\",\r\n    \"Label\": \"Weed model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Weed_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Founder's Day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tortimer-0053\",\r\n    \"Label\": \"Well model\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/tortimer/64px-Well_Model_PG_Model.png\",\r\n    \"Obtained\": \"Talk to Tortimer on Mayor's Day.\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"9b764d96-f2ee-6880-eaec-3504edd87761","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":383,"y":628,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"1f503f69-12f4-d51d-6c79-9621bd940e26","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":48,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('tortimer-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Tortimer Progress: ${count} / 53`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["8698db53-59c9-f940-3b0c-4f86bdd46243"]}},{"name":"/Collection Pages/Furniture/Tortimer/Tortimer Logic","id":"42735d11-2a37-4761-25fe-b87ac42630d2","graph":{"connections":[{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-ID","toId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","toProperty":"in-ID"},{"fromId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","fromProperty":"out-ID","toId":"bd46e105-c513-c663-4bb6-3f9a7e9fb634","toProperty":"modelId"},{"fromId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","fromProperty":"out-Checked","toId":"bd46e105-c513-c663-4bb6-3f9a7e9fb634","toProperty":"prop-Checked"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Label","toId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","toProperty":"in-Label"},{"fromId":"172a8125-af2d-a840-5beb-6b236e8daf45","fromProperty":"id","toId":"259e752c-13d8-634b-5571-ffbff0e74494","toProperty":"in-ID"},{"fromId":"172a8125-af2d-a840-5beb-6b236e8daf45","fromProperty":"prop-Label","toId":"259e752c-13d8-634b-5571-ffbff0e74494","toProperty":"in-Label"},{"fromId":"172a8125-af2d-a840-5beb-6b236e8daf45","fromProperty":"prop-Image","toId":"259e752c-13d8-634b-5571-ffbff0e74494","toProperty":"in-Icon"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Label","toId":"905cc108-4ec2-d934-9a12-e701e1fac0c6","toProperty":"text"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Icon","toId":"d011f3c6-1c2d-0eae-7304-2c6df0c8f9c5","toProperty":"src"},{"fromId":"172a8125-af2d-a840-5beb-6b236e8daf45","fromProperty":"prop-Checked","toId":"259e752c-13d8-634b-5571-ffbff0e74494","toProperty":"in-Checked"},{"fromId":"172a8125-af2d-a840-5beb-6b236e8daf45","fromProperty":"prop-Price","toId":"259e752c-13d8-634b-5571-ffbff0e74494","toProperty":"in-Price"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Price","toId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","toProperty":"in-Price"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Icon","toId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","toProperty":"in-Icon"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Checked","toId":"48906468-4339-ca71-de99-242944aa694f","toProperty":"checked"},{"fromId":"48906468-4339-ca71-de99-242944aa694f","fromProperty":"checked","toId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","toProperty":"in-Checked"},{"fromId":"48906468-4339-ca71-de99-242944aa694f","fromProperty":"onChange","toId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","toProperty":"in-Changed"},{"fromId":"48906468-4339-ca71-de99-242944aa694f","fromProperty":"onChange","toId":"bd46e105-c513-c663-4bb6-3f9a7e9fb634","toProperty":"store"},{"fromId":"172a8125-af2d-a840-5beb-6b236e8daf45","fromProperty":"prop-Obtained","toId":"259e752c-13d8-634b-5571-ffbff0e74494","toProperty":"in-Obtained"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Obtained","toId":"13eecd0d-fa76-4c9c-de49-96e9365fefea","toProperty":"in-Obtained"},{"fromId":"259e752c-13d8-634b-5571-ffbff0e74494","fromProperty":"out-Obtained","toId":"221295d2-45f4-57ad-348f-205697206739","toProperty":"text"},{"fromId":"48906468-4339-ca71-de99-242944aa694f","fromProperty":"onChange","toId":"37d7969e-2bc2-b188-e088-f8e2cc2dcdbc","toProperty":"run"}],"roots":[{"id":"a616f0bb-4b4e-9cf2-fecc-94db82be2d66","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c5a3314d-36b9-b80d-891a-83e81a097ba2","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"74b3e334-fb73-30e8-6319-f8b644e03227","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"2b07005b-8bd9-a13e-a3d3-1d528757fb50","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"a9bad5bd-7bc3-3624-3144-b9af657a4a42","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a96e0285-82e7-cf8c-6578-213d5e8dcfde","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c7519bbc-3874-05c5-9f93-1db5cf17e824","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"d011f3c6-1c2d-0eae-7304-2c6df0c8f9c5","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"905cc108-4ec2-d934-9a12-e701e1fac0c6","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"14e2338f-43e3-aad9-ec66-03f54b87aa04","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"48906468-4339-ca71-de99-242944aa694f","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"8baef6e6-81d8-4a43-f138-6959e332a874","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":40,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7acff5f0-3a46-e4f8-0f52-c6eab3d2af6e","type":"Text","parameters":{"text":"Obtained by","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"221295d2-45f4-57ad-348f-205697206739","type":"Text","label":"","parameters":{"text":"","marginRight":{"value":5,"unit":"px"},"marginTop":{"value":9,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center","marginBottom":{"value":-15,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"172a8125-af2d-a840-5beb-6b236e8daf45","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"bd46e105-c513-c663-4bb6-3f9a7e9fb634","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"259e752c-13d8-634b-5571-ffbff0e74494","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"13eecd0d-fa76-4c9c-de49-96e9365fefea","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"37d7969e-2bc2-b188-e088-f8e2cc2dcdbc","type":"JavaScriptFunction","label":"Play Audio File","x":352,"y":713,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["a616f0bb-4b4e-9cf2-fecc-94db82be2d66"]}},{"name":"/Collection Pages/Furniture/Tortimer/Tortimer Logic/Options","id":"78fd1bac-06a0-337c-a0e7-2f0af79ad262","graph":{"connections":[{"fromId":"263e4de9-c803-a00b-0a2d-ef5355220cae","fromProperty":"id","toId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","toProperty":"in-ID"},{"fromId":"263e4de9-c803-a00b-0a2d-ef5355220cae","fromProperty":"prop-Label","toId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","toProperty":"in-Label"},{"fromId":"263e4de9-c803-a00b-0a2d-ef5355220cae","fromProperty":"prop-Checked","toId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","toProperty":"in-Checked"},{"fromId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","fromProperty":"out-ID","toId":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","toProperty":"in-ID"},{"fromId":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","fromProperty":"out-ID","toId":"0f03b2da-f47f-9755-02ed-c83b02426035","toProperty":"modelId"},{"fromId":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","fromProperty":"out-Checked","toId":"0f03b2da-f47f-9755-02ed-c83b02426035","toProperty":"prop-Checked"},{"fromId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","fromProperty":"out-Label","toId":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","toProperty":"in-Label"},{"fromId":"263e4de9-c803-a00b-0a2d-ef5355220cae","fromProperty":"prop-Icon","toId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","toProperty":"in-Icon"},{"fromId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","fromProperty":"out-Icon","toId":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","toProperty":"in-Icon"},{"fromId":"0f03b2da-f47f-9755-02ed-c83b02426035","fromProperty":"stored","toId":"6f920b87-d1ee-f71b-2981-7b364521e426","toProperty":"Selection Changed"},{"fromId":"e9c8c2d6-fbb9-f82c-fd79-b65fde8edce4","fromProperty":"onChange","toId":"0f03b2da-f47f-9755-02ed-c83b02426035","toProperty":"store"},{"fromId":"e9c8c2d6-fbb9-f82c-fd79-b65fde8edce4","fromProperty":"onChange","toId":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","toProperty":"in-Changed"},{"fromId":"e9c8c2d6-fbb9-f82c-fd79-b65fde8edce4","fromProperty":"checked","toId":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","toProperty":"in-Checked"},{"fromId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","fromProperty":"out-Checked","toId":"e9c8c2d6-fbb9-f82c-fd79-b65fde8edce4","toProperty":"checked"},{"fromId":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","fromProperty":"out-Label","toId":"e9c8c2d6-fbb9-f82c-fd79-b65fde8edce4","toProperty":"label"}],"roots":[{"id":"d2a155f2-d3d2-eeb7-f50c-9052bd8ec1b4","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"e9c8c2d6-fbb9-f82c-fd79-b65fde8edce4","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"263e4de9-c803-a00b-0a2d-ef5355220cae","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"0f03b2da-f47f-9755-02ed-c83b02426035","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"64a209f1-0d6a-35bb-42a3-d53ed2b714b1","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5215e29c-0be0-aba8-5a1e-ed6e386c2329","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"6f920b87-d1ee-f71b-2981-7b364521e426","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["d2a155f2-d3d2-eeb7-f50c-9052bd8ec1b4"]}},{"name":"/Collection Pages/Furniture/Toy Day/Toy Day","id":"43d4f985-477f-be7f-113c-943562917549","graph":{"connections":[{"fromId":"ffc17497-40db-9604-2bb6-0e34a760cd23","fromProperty":"items","toId":"cbe78b89-8526-0229-a227-12f14c3e9ab5","toProperty":"items"},{"fromId":"81559df4-45b3-fde3-7d24-5cab12dc9988","fromProperty":"out-Success","toId":"cbe78b89-8526-0229-a227-12f14c3e9ab5","toProperty":"refresh"},{"fromId":"2e93d3b4-8559-f128-749f-7fab099f4816","fromProperty":"out-CountText","toId":"c7ca27d5-7623-87ad-0b5e-ed022f3b7db1","toProperty":"text"}],"roots":[{"id":"1342f088-c47c-2c4e-6bb7-8b397465e6c6","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Toy Day","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"toy-day","index":32}],"children":[{"id":"26dcc1aa-e26a-8892-7e4e-c63f2bd540f7","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"a5129c30-825d-71d6-af7f-c8e545279636","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c7ca27d5-7623-87ad-0b5e-ed022f3b7db1","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Igloo Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#f1dc91"},"ports":[],"dynamicports":[],"children":[]},{"id":"40a5cfbb-87d8-63f6-2b0c-ac126e203982","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#f1dc91","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"36dbf0d2-1a67-6bbb-5ff3-4a7216d12f3c","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"224cf861-dfa5-b5e4-2f45-3b22fce07a0c","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/Jingle_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"fba001a6-0ea9-7f34-1848-d5bda74be0d2","type":"Text","label":"","parameters":{"text":"Toy Day","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d54ed401-2908-d91b-7381-3cea531c8d51","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b135052f-6973-9dd9-492f-f576c2036939","type":"Text","label":"","parameters":{"text":"You can obtain Jingle items by talking to Jingle on December 24th after 8 PM.  Talk to Jingle with up to 10 different pieces of clothing to get up to 10 items.\n\nIf you obtain at least one item and keep your game open past midnight, Jingle will mail you a letter containing \"Balloon Fight\".","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"cbe78b89-8526-0229-a227-12f14c3e9ab5","type":"For Each","parameters":{"template":"/Collection Pages/Furniture/Toy Day/Toy Day Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"884c925e-c6e7-f87d-d4fd-ca04a39d861c","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"ffc17497-40db-9604-2bb6-0e34a760cd23","type":"Collection2","label":"Igloos","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"christmas-0001\",\r\n    \"Label\": \"Jingle bed\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Bed_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0002\",\r\n    \"Label\": \"Jingle chair\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Chair_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0003\",\r\n    \"Label\": \"Jingle clock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Clock_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0004\",\r\n    \"Label\": \"Jingle dresser\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Dresser_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0005\",\r\n    \"Label\": \"Jingle lamp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Lamp_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0006\",\r\n    \"Label\": \"Jingle piano\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Piano_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0007\",\r\n    \"Label\": \"Jingle shelves\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Shelves_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0008\",\r\n    \"Label\": \"Jingle sofa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Sofa_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0009\",\r\n    \"Label\": \"Jingle table\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Table_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"christmas-0010\",\r\n    \"Label\": \"Jingle wardrobe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/furniture/christmas/64px-Jingle_Wardrobe_PG_Model.png\",\r\n    \"Value\": \"Not for sale\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"81559df4-45b3-fde3-7d24-5cab12dc9988","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":383,"y":628,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"2e93d3b4-8559-f128-749f-7fab099f4816","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-240,"y":48,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('christmas-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Toy Day Progress: ${count} / 10`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["1342f088-c47c-2c4e-6bb7-8b397465e6c6"]}},{"name":"/Collection Pages/Furniture/Toy Day/Toy Day Logic","id":"2d947c89-db75-43ef-8adb-ec0d7aebe3b7","graph":{"connections":[{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-ID","toId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","toProperty":"in-ID"},{"fromId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","fromProperty":"out-ID","toId":"5f8c9860-4b6d-edb1-e6a6-f42c7e33e851","toProperty":"modelId"},{"fromId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","fromProperty":"out-Checked","toId":"5f8c9860-4b6d-edb1-e6a6-f42c7e33e851","toProperty":"prop-Checked"},{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-Label","toId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","toProperty":"in-Label"},{"fromId":"612a740d-3d4f-d9b3-977d-88f896a544ee","fromProperty":"id","toId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","toProperty":"in-ID"},{"fromId":"612a740d-3d4f-d9b3-977d-88f896a544ee","fromProperty":"prop-Label","toId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","toProperty":"in-Label"},{"fromId":"612a740d-3d4f-d9b3-977d-88f896a544ee","fromProperty":"prop-Image","toId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","toProperty":"in-Icon"},{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-Label","toId":"b5fab083-7339-c4d6-35ea-d997ae8dcbeb","toProperty":"text"},{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-Icon","toId":"5b08cac3-6e28-a1a3-947a-a0a671e283ca","toProperty":"src"},{"fromId":"612a740d-3d4f-d9b3-977d-88f896a544ee","fromProperty":"prop-Checked","toId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","toProperty":"in-Checked"},{"fromId":"612a740d-3d4f-d9b3-977d-88f896a544ee","fromProperty":"prop-Price","toId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","toProperty":"in-Price"},{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-Price","toId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","toProperty":"in-Price"},{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-Icon","toId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","toProperty":"in-Icon"},{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-Checked","toId":"6b397c87-689f-81e0-48e0-ad938d5d3ac9","toProperty":"checked"},{"fromId":"6b397c87-689f-81e0-48e0-ad938d5d3ac9","fromProperty":"checked","toId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","toProperty":"in-Checked"},{"fromId":"6b397c87-689f-81e0-48e0-ad938d5d3ac9","fromProperty":"onChange","toId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","toProperty":"in-Changed"},{"fromId":"6b397c87-689f-81e0-48e0-ad938d5d3ac9","fromProperty":"onChange","toId":"5f8c9860-4b6d-edb1-e6a6-f42c7e33e851","toProperty":"store"},{"fromId":"612a740d-3d4f-d9b3-977d-88f896a544ee","fromProperty":"prop-Obtained","toId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","toProperty":"in-Obtained"},{"fromId":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","fromProperty":"out-Obtained","toId":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","toProperty":"in-Obtained"},{"fromId":"6b397c87-689f-81e0-48e0-ad938d5d3ac9","fromProperty":"onChange","toId":"cd8ec32d-7775-1fe7-30ec-2ffdb1c48de1","toProperty":"run"}],"roots":[{"id":"a0a8a388-f52a-2d2b-86eb-a68fff5685b7","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"441f90de-e82f-2294-6ccb-3c97c52a4acd","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"38215f81-fa9f-a730-1e22-265702425b7c","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"9a8cf838-fd10-0bf3-0630-5d856aac8da3","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f78a56d9-01fa-994c-61a7-c316dde3f102","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"fbb4fb39-bdde-401e-5ad3-a145c7f85602","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"94eb562b-6cfc-af98-7a8e-4d595234b5a8","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"5b08cac3-6e28-a1a3-947a-a0a671e283ca","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b5fab083-7339-c4d6-35ea-d997ae8dcbeb","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"1e34e7ad-efac-64a5-f927-edf4092b6a60","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6b397c87-689f-81e0-48e0-ad938d5d3ac9","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"612a740d-3d4f-d9b3-977d-88f896a544ee","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"5f8c9860-4b6d-edb1-e6a6-f42c7e33e851","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"6107ba06-0915-9b3d-aa22-44e84ff71c3e","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"3fcd491b-b36d-5f0d-1241-fc3d7fce5001","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"cd8ec32d-7775-1fe7-30ec-2ffdb1c48de1","type":"JavaScriptFunction","label":"Play Audio File","x":334,"y":681,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["a0a8a388-f52a-2d2b-86eb-a68fff5685b7"]}},{"name":"/Collection Pages/Furniture/Toy Day/Toy Day Logic/Options","id":"7e58a538-7894-0b37-4ff8-0d4c1cabb86a","graph":{"connections":[{"fromId":"191fe780-1d30-9443-c3ef-f45a00309526","fromProperty":"id","toId":"9644805a-f11f-f9a7-73cf-28910a4c2069","toProperty":"in-ID"},{"fromId":"191fe780-1d30-9443-c3ef-f45a00309526","fromProperty":"prop-Label","toId":"9644805a-f11f-f9a7-73cf-28910a4c2069","toProperty":"in-Label"},{"fromId":"191fe780-1d30-9443-c3ef-f45a00309526","fromProperty":"prop-Checked","toId":"9644805a-f11f-f9a7-73cf-28910a4c2069","toProperty":"in-Checked"},{"fromId":"9644805a-f11f-f9a7-73cf-28910a4c2069","fromProperty":"out-ID","toId":"3bcaa343-302f-0730-3d2b-2e64db259522","toProperty":"in-ID"},{"fromId":"3bcaa343-302f-0730-3d2b-2e64db259522","fromProperty":"out-ID","toId":"0fae4358-7568-41c0-5f00-a6b50fc06643","toProperty":"modelId"},{"fromId":"3bcaa343-302f-0730-3d2b-2e64db259522","fromProperty":"out-Checked","toId":"0fae4358-7568-41c0-5f00-a6b50fc06643","toProperty":"prop-Checked"},{"fromId":"9644805a-f11f-f9a7-73cf-28910a4c2069","fromProperty":"out-Label","toId":"3bcaa343-302f-0730-3d2b-2e64db259522","toProperty":"in-Label"},{"fromId":"191fe780-1d30-9443-c3ef-f45a00309526","fromProperty":"prop-Icon","toId":"9644805a-f11f-f9a7-73cf-28910a4c2069","toProperty":"in-Icon"},{"fromId":"9644805a-f11f-f9a7-73cf-28910a4c2069","fromProperty":"out-Icon","toId":"3bcaa343-302f-0730-3d2b-2e64db259522","toProperty":"in-Icon"},{"fromId":"0fae4358-7568-41c0-5f00-a6b50fc06643","fromProperty":"stored","toId":"16435b28-9757-fa75-3f68-4041811a4ea3","toProperty":"Selection Changed"},{"fromId":"528d6ff0-c8c3-d0a7-0a1b-f625464a45d7","fromProperty":"onChange","toId":"0fae4358-7568-41c0-5f00-a6b50fc06643","toProperty":"store"},{"fromId":"528d6ff0-c8c3-d0a7-0a1b-f625464a45d7","fromProperty":"onChange","toId":"3bcaa343-302f-0730-3d2b-2e64db259522","toProperty":"in-Changed"},{"fromId":"528d6ff0-c8c3-d0a7-0a1b-f625464a45d7","fromProperty":"checked","toId":"3bcaa343-302f-0730-3d2b-2e64db259522","toProperty":"in-Checked"},{"fromId":"9644805a-f11f-f9a7-73cf-28910a4c2069","fromProperty":"out-Checked","toId":"528d6ff0-c8c3-d0a7-0a1b-f625464a45d7","toProperty":"checked"},{"fromId":"9644805a-f11f-f9a7-73cf-28910a4c2069","fromProperty":"out-Label","toId":"528d6ff0-c8c3-d0a7-0a1b-f625464a45d7","toProperty":"label"}],"roots":[{"id":"bffe9927-b7a2-7add-cf98-b098edc99908","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"528d6ff0-c8c3-d0a7-0a1b-f625464a45d7","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"191fe780-1d30-9443-c3ef-f45a00309526","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"0fae4358-7568-41c0-5f00-a6b50fc06643","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"9644805a-f11f-f9a7-73cf-28910a4c2069","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"3bcaa343-302f-0730-3d2b-2e64db259522","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"16435b28-9757-fa75-3f68-4041811a4ea3","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["bffe9927-b7a2-7add-cf98-b098edc99908"]}},{"name":"/Collection Pages/Gyroids/Gyroids","id":"d29573a6-0aaf-c3b1-6696-4f6d8fc45228","graph":{"connections":[{"fromId":"d0e3bfe1-1486-64c1-2330-23c9cce03225","fromProperty":"items","toId":"92ab3bc1-b588-bdf0-2706-56d7e1ed840b","toProperty":"items"},{"fromId":"622a406f-09ae-1c7d-341e-53e2d1b6c685","fromProperty":"out-Success","toId":"92ab3bc1-b588-bdf0-2706-56d7e1ed840b","toProperty":"refresh"},{"fromId":"4a594c96-5138-d937-f1cb-f86dd32a7a10","fromProperty":"out-CountText","toId":"0a01fa1d-bfc3-6b32-b065-898acf580c0d","toProperty":"text"}],"roots":[{"id":"6c2a4bcf-fac0-1f68-fd53-cbb1e2c688de","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Gyroids","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"gyroids","index":32}],"children":[{"id":"72b150ec-1f3b-5534-989c-4049489ea044","type":"module.inlineHtml","label":"Gyroid Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/gyroid.png'),\r\n    url('/images/background/gyroid.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"ffc459df-4ea8-27f8-bad6-1df2dfa3740f","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0a01fa1d-bfc3-6b32-b065-898acf580c0d","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Nook Store Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#ffd291"},"ports":[],"dynamicports":[],"children":[]},{"id":"454d1332-2ae2-ef10-3569-c773fd177388","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#ffd291","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"21e9364b-e0c4-6d76-9700-129d2264a707","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d78ae33d-a973-84a5-2c50-0c227b77f999","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/gyroid.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"94bb6850-6146-2423-9655-87e14d168883","type":"Text","label":"","parameters":{"text":"Gyroids","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"92ab3bc1-b588-bdf0-2706-56d7e1ed840b","type":"For Each","parameters":{"template":"/Collection Pages/Gyroids/Gyroids Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"b18b435c-755c-bb62-c3a4-baa68d3f06de","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"d0e3bfe1-1486-64c1-2330-23c9cce03225","type":"Collection2","label":"Nook","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"gyroid-0001\",\r\n    \"Label\": \"Bowtoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Bowtoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0002\",\r\n    \"Label\": \"Buzzoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Buzzoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0003\",\r\n    \"Label\": \"Clankoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Clankoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0004\",\r\n    \"Label\": \"Croakoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Croakoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0005\",\r\n    \"Label\": \"Dekkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Dekkoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0006\",\r\n    \"Label\": \"Dingloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Dingloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0007\",\r\n    \"Label\": \"Drilloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Drilloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0008\",\r\n    \"Label\": \"Gargloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Gargloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0009\",\r\n    \"Label\": \"Gongoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Gongoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0010\",\r\n    \"Label\": \"Harmonoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Harmonoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0011\",\r\n    \"Label\": \"Howloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Howloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0012\",\r\n    \"Label\": \"Lamentoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Lamentoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0013\",\r\n    \"Label\": \"Lullaboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Lullaboid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0014\",\r\n    \"Label\": \"Mega alloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Alloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0015\",\r\n    \"Label\": \"Mega bovoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Bovoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0016\",\r\n    \"Label\": \"Mega bowtoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Bowtoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0017\",\r\n    \"Label\": \"Mega buzzoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Buzzoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0018\",\r\n    \"Label\": \"Mega clankoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Clankoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0019\",\r\n    \"Label\": \"Mega croakoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Croakoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0020\",\r\n    \"Label\": \"Mega dekkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Dekkoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0021\",\r\n    \"Label\": \"Mega dingloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Dingloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0022\",\r\n    \"Label\": \"Mega dinkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Dinkoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0023\",\r\n    \"Label\": \"Mega drilloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Drilloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0024\",\r\n    \"Label\": \"Mega echoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Echoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0025\",\r\n    \"Label\": \"Mega fizzoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Fizzoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0026\",\r\n    \"Label\": \"Mega freakoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Freakoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0027\",\r\n    \"Label\": \"Mega gongoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Gongoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0028\",\r\n    \"Label\": \"Mega harmonoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Harmonoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0029\",\r\n    \"Label\": \"Mega howloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Howloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0030\",\r\n    \"Label\": \"Mega lamentoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Lamentoid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0031\",\r\n    \"Label\": \"Mega lullaboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Lullaboid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0032\",\r\n    \"Label\": \"Mega nebuloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Nebuloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0033\",\r\n    \"Label\": \"Mega oboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Oboid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0034\",\r\n    \"Label\": \"Mega oombloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Oombloid_PG_Model.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0035\",\r\n    \"Label\": \"Mega percoloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Percoloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0036\",\r\n    \"Label\": \"Mega plinkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Plinkoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0037\",\r\n    \"Label\": \"Mega poltergoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Poltergoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0038\",\r\n    \"Label\": \"Mega puffoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Puffoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0039\",\r\n    \"Label\": \"Mega quazoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Quazoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0040\",\r\n    \"Label\": \"Mega rustoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Rustoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0041\",\r\n    \"Label\": \"Mega sproid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Sproid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0042\",\r\n    \"Label\": \"Mega sputnoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Sputnoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0043\",\r\n    \"Label\": \"Mega squelchoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Squelchoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0044\",\r\n    \"Label\": \"Mega strumboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Strumboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0045\",\r\n    \"Label\": \"Mega timpanoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Timpanoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0046\",\r\n    \"Label\": \"Mega tootoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mega_Tootoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0047\",\r\n    \"Label\": \"Metatoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Metatoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0048\",\r\n    \"Label\": \"Mini alloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Alloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0049\",\r\n    \"Label\": \"Mini bowtoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Bowtoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0050\",\r\n    \"Label\": \"Mini buzzoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Buzzoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0051\",\r\n    \"Label\": \"Mini clankoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Clankoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0052\",\r\n    \"Label\": \"Mini croakoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Croakoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0053\",\r\n    \"Label\": \"Mini dekkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Dekkoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0054\",\r\n    \"Label\": \"Mini dingloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Dingloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0055\",\r\n    \"Label\": \"Mini dinkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Dinkoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0056\",\r\n    \"Label\": \"Mini drilloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Drilloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0057\",\r\n    \"Label\": \"Mini echoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Echoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0058\",\r\n    \"Label\": \"Mini fizzoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Fizzoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0059\",\r\n    \"Label\": \"Mini freakoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Freakoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0060\",\r\n    \"Label\": \"Mini gargloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Gargloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0061\",\r\n    \"Label\": \"Mini gongoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Gongoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0062\",\r\n    \"Label\": \"Mini harmonoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Harmonoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0063\",\r\n    \"Label\": \"Mini howloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Howloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0064\",\r\n    \"Label\": \"Mini lamentoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Lamentoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0065\",\r\n    \"Label\": \"Mini lullaboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Lullaboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0066\",\r\n    \"Label\": \"Mini metatoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Metatoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0067\",\r\n    \"Label\": \"Mini nebuloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Nebuloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0068\",\r\n    \"Label\": \"Mini oombloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Oombloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0069\",\r\n    \"Label\": \"Mini plinkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Plinkoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0070\",\r\n    \"Label\": \"Mini poltergoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Poltergoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0071\",\r\n    \"Label\": \"Mini puffoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Puffoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0072\",\r\n    \"Label\": \"Mini quazoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Quazoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0073\",\r\n    \"Label\": \"Mini rhythmoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Rhythmoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0074\",\r\n    \"Label\": \"Mini rustoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Rustoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0075\",\r\n    \"Label\": \"Mini sproid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Sproid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0076\",\r\n    \"Label\": \"Mini sputnoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Sputnoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0077\",\r\n    \"Label\": \"Mini squelchoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Squelchoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0078\",\r\n    \"Label\": \"Mini strumboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Strumboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0079\",\r\n    \"Label\": \"Mini timpanoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Timpanoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0080\",\r\n    \"Label\": \"Mini tootoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Tootoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0081\",\r\n    \"Label\": \"Mini warbloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Mini_Warbloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0082\",\r\n    \"Label\": \"Nebuloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Nebuloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0083\",\r\n    \"Label\": \"Oboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Oboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0084\",\r\n    \"Label\": \"Oombloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Oombloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0085\",\r\n    \"Label\": \"Plinkoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Plinkoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0086\",\r\n    \"Label\": \"Poltergoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Poltergoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0087\",\r\n    \"Label\": \"Quazoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Quazoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0088\",\r\n    \"Label\": \"Rhythmoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Rhythmoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0089\",\r\n    \"Label\": \"Rustoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Rustoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0090\",\r\n    \"Label\": \"Slim nebuloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Slim_Nebuloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0091\",\r\n    \"Label\": \"Slim quazoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Slim_Quazoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0092\",\r\n    \"Label\": \"Sproid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Sproid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0093\",\r\n    \"Label\": \"Sputnoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Sputnoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0094\",\r\n    \"Label\": \"Squat dingloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Squat_Dingloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0095\",\r\n    \"Label\": \"Squat nebuloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Squat_Nebuloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0096\",\r\n    \"Label\": \"Squelchoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Squelchoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0097\",\r\n    \"Label\": \"Strumboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Strumboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0098\",\r\n    \"Label\": \"Tall alloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Alloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0099\",\r\n    \"Label\": \"Tall bovoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Bovoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0100\",\r\n    \"Label\": \"Tall bowtoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Bowtoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0101\",\r\n    \"Label\": \"Tall buzzoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Buzzoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0102\",\r\n    \"Label\": \"Tall clankoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Clankoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0103\",\r\n    \"Label\": \"Tall croakoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Croakoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0104\",\r\n    \"Label\": \"Tall dingloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Dingloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0105\",\r\n    \"Label\": \"Tall droploid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Droploid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0106\",\r\n    \"Label\": \"Tall echoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Echoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0107\",\r\n    \"Label\": \"Tall gargloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Gargloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0108\",\r\n    \"Label\": \"Tall gongoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Gongoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0109\",\r\n    \"Label\": \"Tall harmonoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Harmonoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0110\",\r\n    \"Label\": \"Tall lamentoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Lamentoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0111\",\r\n    \"Label\": \"Tall lullaboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Lullaboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0112\",\r\n    \"Label\": \"Tall nebuloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Nebuloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0113\",\r\n    \"Label\": \"Tall oboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Oboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0114\",\r\n    \"Label\": \"Tall oombloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Oombloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0115\",\r\n    \"Label\": \"Tall percoloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Percoloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0116\",\r\n    \"Label\": \"Tall poltergoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Poltergoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0117\",\r\n    \"Label\": \"Tall puffoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Puffoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0118\",\r\n    \"Label\": \"Tall quazoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Quazoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0119\",\r\n    \"Label\": \"Tall sproid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Sproid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0120\",\r\n    \"Label\": \"Tall sputnoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Sputnoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0121\",\r\n    \"Label\": \"Tall strumboid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Strumboid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0122\",\r\n    \"Label\": \"Tall timpanoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Timpanoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0123\",\r\n    \"Label\": \"Tall warbloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tall_Warbloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0124\",\r\n    \"Label\": \"Timpanoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Timpanoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0125\",\r\n    \"Label\": \"Tootoid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Tootoid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0126\",\r\n    \"Label\": \"Warbloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Warbloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"gyroid-0127\",\r\n    \"Label\": \"Wee dingloid\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/gyroids/64px-Wee_Dingloid_PG_Model.png\",\r\n    \"Value\": \"828\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"622a406f-09ae-1c7d-341e-53e2d1b6c685","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4a594c96-5138-d937-f1cb-f86dd32a7a10","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":47,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('gyroid-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Gyroid Progress: ${count} / 127`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["6c2a4bcf-fac0-1f68-fd53-cbb1e2c688de"]}},{"name":"/Collection Pages/Gyroids/Gyroids Logic","id":"340d13f5-65bd-5da5-7060-ab1d37963891","graph":{"connections":[{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-ID","toId":"8245d070-a061-d1fd-0c5e-553961c33ec1","toProperty":"in-ID"},{"fromId":"8245d070-a061-d1fd-0c5e-553961c33ec1","fromProperty":"out-ID","toId":"3265d39c-f36c-53e1-6f12-b768532007bd","toProperty":"modelId"},{"fromId":"8245d070-a061-d1fd-0c5e-553961c33ec1","fromProperty":"out-Checked","toId":"3265d39c-f36c-53e1-6f12-b768532007bd","toProperty":"prop-Checked"},{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-Label","toId":"8245d070-a061-d1fd-0c5e-553961c33ec1","toProperty":"in-Label"},{"fromId":"f918c085-98ef-4f8c-3a39-6c982ee8dc12","fromProperty":"id","toId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","toProperty":"in-ID"},{"fromId":"f918c085-98ef-4f8c-3a39-6c982ee8dc12","fromProperty":"prop-Label","toId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","toProperty":"in-Label"},{"fromId":"f918c085-98ef-4f8c-3a39-6c982ee8dc12","fromProperty":"prop-Image","toId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","toProperty":"in-Icon"},{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-Label","toId":"c14b3c07-0223-8e62-3acd-89068fc1a1b4","toProperty":"text"},{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-Icon","toId":"d09792a1-14c0-9b44-e27e-4dac123b94de","toProperty":"src"},{"fromId":"f918c085-98ef-4f8c-3a39-6c982ee8dc12","fromProperty":"prop-Checked","toId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","toProperty":"in-Checked"},{"fromId":"f918c085-98ef-4f8c-3a39-6c982ee8dc12","fromProperty":"prop-Price","toId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","toProperty":"in-Price"},{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-Price","toId":"8245d070-a061-d1fd-0c5e-553961c33ec1","toProperty":"in-Price"},{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-Icon","toId":"8245d070-a061-d1fd-0c5e-553961c33ec1","toProperty":"in-Icon"},{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-Checked","toId":"5c2d1fff-0c66-25a8-9d40-4fe78504f5e2","toProperty":"checked"},{"fromId":"5c2d1fff-0c66-25a8-9d40-4fe78504f5e2","fromProperty":"checked","toId":"8245d070-a061-d1fd-0c5e-553961c33ec1","toProperty":"in-Checked"},{"fromId":"5c2d1fff-0c66-25a8-9d40-4fe78504f5e2","fromProperty":"onChange","toId":"8245d070-a061-d1fd-0c5e-553961c33ec1","toProperty":"in-Changed"},{"fromId":"5c2d1fff-0c66-25a8-9d40-4fe78504f5e2","fromProperty":"onChange","toId":"3265d39c-f36c-53e1-6f12-b768532007bd","toProperty":"store"},{"fromId":"f918c085-98ef-4f8c-3a39-6c982ee8dc12","fromProperty":"prop-Obtained","toId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","toProperty":"in-Obtained"},{"fromId":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","fromProperty":"out-Obtained","toId":"8245d070-a061-d1fd-0c5e-553961c33ec1","toProperty":"in-Obtained"}],"roots":[{"id":"364d90f4-062a-181a-cd2e-0d70b52e236a","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e2c7a18f-27d5-8141-f5cd-3339e851b0a3","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"8e358223-8b80-d5f5-759e-bb93a323e82d","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"66071b2d-6b52-b3c8-da6d-9703eb47774e","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"a788dfbd-92bb-61f2-1881-28a93d90fc61","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"7a3bc611-687f-55a5-569b-2fc8088fa8d4","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"efada95d-59de-89c4-a157-074a0ca4f41d","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"d09792a1-14c0-9b44-e27e-4dac123b94de","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c14b3c07-0223-8e62-3acd-89068fc1a1b4","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"6792398e-7dc1-85a7-0b70-abfaab39650b","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":60,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"5c2d1fff-0c66-25a8-9d40-4fe78504f5e2","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"f918c085-98ef-4f8c-3a39-6c982ee8dc12","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"3265d39c-f36c-53e1-6f12-b768532007bd","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"d134ea84-4ec8-4d6d-efb7-64ae85ac6bbd","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"8245d070-a061-d1fd-0c5e-553961c33ec1","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["364d90f4-062a-181a-cd2e-0d70b52e236a"]}},{"name":"/Collection Pages/Gyroids/Gyroids Logic/Options","id":"6cd291c3-3879-b958-7a04-f1de7d373f5d","graph":{"connections":[{"fromId":"6a76b93c-8338-9bd6-1385-daa54a4915ee","fromProperty":"id","toId":"23bdd378-38b2-194e-d425-3b038f341a9f","toProperty":"in-ID"},{"fromId":"6a76b93c-8338-9bd6-1385-daa54a4915ee","fromProperty":"prop-Label","toId":"23bdd378-38b2-194e-d425-3b038f341a9f","toProperty":"in-Label"},{"fromId":"6a76b93c-8338-9bd6-1385-daa54a4915ee","fromProperty":"prop-Checked","toId":"23bdd378-38b2-194e-d425-3b038f341a9f","toProperty":"in-Checked"},{"fromId":"23bdd378-38b2-194e-d425-3b038f341a9f","fromProperty":"out-ID","toId":"629c6386-83df-51a1-eaab-c8f736e9b029","toProperty":"in-ID"},{"fromId":"629c6386-83df-51a1-eaab-c8f736e9b029","fromProperty":"out-ID","toId":"884203f8-a4b5-8b8c-1f0a-94d631f8ccb1","toProperty":"modelId"},{"fromId":"629c6386-83df-51a1-eaab-c8f736e9b029","fromProperty":"out-Checked","toId":"884203f8-a4b5-8b8c-1f0a-94d631f8ccb1","toProperty":"prop-Checked"},{"fromId":"23bdd378-38b2-194e-d425-3b038f341a9f","fromProperty":"out-Label","toId":"629c6386-83df-51a1-eaab-c8f736e9b029","toProperty":"in-Label"},{"fromId":"6a76b93c-8338-9bd6-1385-daa54a4915ee","fromProperty":"prop-Icon","toId":"23bdd378-38b2-194e-d425-3b038f341a9f","toProperty":"in-Icon"},{"fromId":"23bdd378-38b2-194e-d425-3b038f341a9f","fromProperty":"out-Icon","toId":"629c6386-83df-51a1-eaab-c8f736e9b029","toProperty":"in-Icon"},{"fromId":"884203f8-a4b5-8b8c-1f0a-94d631f8ccb1","fromProperty":"stored","toId":"dfa9f81c-6634-c2d2-d92d-ab6aa159db0a","toProperty":"Selection Changed"},{"fromId":"eaa4c22d-a446-e633-ddee-c44eae428325","fromProperty":"onChange","toId":"884203f8-a4b5-8b8c-1f0a-94d631f8ccb1","toProperty":"store"},{"fromId":"eaa4c22d-a446-e633-ddee-c44eae428325","fromProperty":"onChange","toId":"629c6386-83df-51a1-eaab-c8f736e9b029","toProperty":"in-Changed"},{"fromId":"eaa4c22d-a446-e633-ddee-c44eae428325","fromProperty":"checked","toId":"629c6386-83df-51a1-eaab-c8f736e9b029","toProperty":"in-Checked"},{"fromId":"23bdd378-38b2-194e-d425-3b038f341a9f","fromProperty":"out-Checked","toId":"eaa4c22d-a446-e633-ddee-c44eae428325","toProperty":"checked"},{"fromId":"23bdd378-38b2-194e-d425-3b038f341a9f","fromProperty":"out-Label","toId":"eaa4c22d-a446-e633-ddee-c44eae428325","toProperty":"label"}],"roots":[{"id":"5cff666f-e604-30bd-4537-a32f74fce46f","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"eaa4c22d-a446-e633-ddee-c44eae428325","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6a76b93c-8338-9bd6-1385-daa54a4915ee","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"884203f8-a4b5-8b8c-1f0a-94d631f8ccb1","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"23bdd378-38b2-194e-d425-3b038f341a9f","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"629c6386-83df-51a1-eaab-c8f736e9b029","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"dfa9f81c-6634-c2d2-d92d-ab6aa159db0a","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["5cff666f-e604-30bd-4537-a32f74fce46f"]}},{"name":"/Collection Pages/Paintings/Paintings","id":"56d170be-1f6b-b18c-1ebd-eb5506918636","graph":{"connections":[{"fromId":"dc7b57dd-8961-be66-20cb-4a296ec3c872","fromProperty":"items","toId":"6e8378ae-f0b3-cf1f-12a5-ceab64795919","toProperty":"items"},{"fromId":"0d6a49be-989b-613b-b60c-fb6fd9f3bca6","fromProperty":"out-Success","toId":"6e8378ae-f0b3-cf1f-12a5-ceab64795919","toProperty":"refresh"},{"fromId":"bea0b3b8-1f0b-ebff-1df0-2f5b22f3e899","fromProperty":"out-CountText","toId":"8eef5e5c-865c-e337-4d6c-fc048e955fc1","toProperty":"text"}],"roots":[{"id":"e6d257ef-a05e-b5fb-7d2a-6a5967b13fd7","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Paintings","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"paintings","index":32}],"children":[{"id":"8ff402b7-973f-13b0-ec29-e4cea9a76da9","type":"/Collection Pages/Paintings/paintings-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"2ac32304-c43d-e138-751f-c976f14f19b6","type":"module.inlineHtml","label":"Art Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #ffacbe; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/art.png'),\r\n    url('/images/background/art.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"ce94172a-56f8-c1c2-50be-0adb594feab9","type":"Group","label":"Paintings Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"8eef5e5c-865c-e337-4d6c-fc048e955fc1","type":"Text","label":"","parameters":{"text":"Paintings Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#FFE0E8"},"ports":[],"dynamicports":[],"children":[]},{"id":"721613b0-0c2f-53e6-78e3-2757a07fca88","type":"Group","label":"Paintings","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#FFE0E8","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"fcfb6b53-4ae2-9dbe-5b45-0773b2ba0f06","type":"Group","label":"Museum Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a5eda4b3-9650-4a92-820b-b492063ddad4","type":"Image","label":"Museum","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/redd.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"3ab7dda7-b149-1459-3b27-97140aad55d7","type":"Text","parameters":{"text":"Paintings","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ff854bf2-cccb-252d-400e-aaaf15e82431","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2a0e1d6b-1947-1a01-e688-8eec3151a610","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"2b66f215-69ca-0f51-4ce5-58a5652f76eb","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"91719c7c-2da6-c59d-539a-d3ef344953df","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"d8c573ca-06d0-c839-0ba4-abe053f26c26","type":"Text","parameters":{"text":"From","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"26dcb63a-bf0a-022d-de32-d205a3edc230","type":"Text","parameters":{"text":"Donated","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6e8378ae-f0b3-cf1f-12a5-ceab64795919","type":"For Each","parameters":{"template":"/Collection Pages/Paintings/Paintings Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"db30be9f-b6b9-f29b-2557-b0a104c4fa58","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"dc7b57dd-8961-be66-20cb-4a296ec3c872","type":"Collection2","label":"Painting Array","x":-242,"y":742,"parameters":{"items":"[\r\n    {\r\n        \"id\":  \"painting-0001\",\r\n        \"Label\":  \"Amazing painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Amazing_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0002\",\r\n        \"Label\":  \"Basic painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Basic_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0003\",\r\n        \"Label\":  \"Classic painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Classic_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0004\",\r\n        \"Label\":  \"Common painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Common_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0005\",\r\n        \"Label\":  \"Dainty painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Dainty_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0006\",\r\n        \"Label\":  \"Famous painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Famous_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0007\",\r\n        \"Label\":  \"Fine painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Fine_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0008\",\r\n        \"Label\":  \"Flowery painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Flowery_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0009\",\r\n        \"Label\":  \"Moving painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Moving_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0010\",\r\n        \"Label\":  \"Perfect painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Perfect_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0011\",\r\n        \"Label\":  \"Quaint painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Quaint_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0012\",\r\n        \"Label\":  \"Rare painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Rare_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0013\",\r\n        \"Label\":  \"Scary painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Scary_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Redd\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0014\",\r\n        \"Label\":  \"Strange painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Strange_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    },\r\n    {\r\n        \"id\":  \"painting-0015\",\r\n        \"Label\":  \"Worthy painting\",\r\n        \"Image\":  \"https://acgc.sterner.digital/images/paintings/64px-Worthy_Painting_PG_Model.png\",\r\n        \"Price\":  \"1960\",\r\n        \"Obtained\":  \"Nook\",\r\n        \"Checked\":  \"\"\r\n    }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[]},{"id":"0d6a49be-989b-613b-b60c-fb6fd9f3bca6","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":279,"y":825,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"bea0b3b8-1f0b-ebff-1df0-2f5b22f3e899","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-233,"y":42,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('painting-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Paintings Progress: ${count} / 15`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"30bf0e55-c629-81e8-1dba-f39fc0486f1d","type":"JavaScriptFunction","label":"Play Audio File","x":-280,"y":-174,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["e6d257ef-a05e-b5fb-7d2a-6a5967b13fd7"]}},{"name":"/Collection Pages/Paintings/Paintings Logic","id":"c8cfb832-1bbc-fe00-bcf5-8fe8af9e43f8","graph":{"connections":[{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-ID","toId":"43021d45-307e-8f4d-a959-f615984d1c8b","toProperty":"in-ID"},{"fromId":"43021d45-307e-8f4d-a959-f615984d1c8b","fromProperty":"out-ID","toId":"4d1c900a-e79e-8a21-7636-25ec9b342b52","toProperty":"modelId"},{"fromId":"43021d45-307e-8f4d-a959-f615984d1c8b","fromProperty":"out-Checked","toId":"4d1c900a-e79e-8a21-7636-25ec9b342b52","toProperty":"prop-Checked"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Label","toId":"43021d45-307e-8f4d-a959-f615984d1c8b","toProperty":"in-Label"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Icon","toId":"43021d45-307e-8f4d-a959-f615984d1c8b","toProperty":"in-Icon"},{"fromId":"24e7aada-d6f0-35e9-4cb7-5fee28a4b74c","fromProperty":"id","toId":"7dca580f-386a-c504-ca28-de335b1564dd","toProperty":"in-ID"},{"fromId":"24e7aada-d6f0-35e9-4cb7-5fee28a4b74c","fromProperty":"prop-Label","toId":"7dca580f-386a-c504-ca28-de335b1564dd","toProperty":"in-Label"},{"fromId":"24e7aada-d6f0-35e9-4cb7-5fee28a4b74c","fromProperty":"prop-Checked","toId":"7dca580f-386a-c504-ca28-de335b1564dd","toProperty":"in-Checked"},{"fromId":"24e7aada-d6f0-35e9-4cb7-5fee28a4b74c","fromProperty":"prop-Image","toId":"7dca580f-386a-c504-ca28-de335b1564dd","toProperty":"in-Icon"},{"fromId":"24e7aada-d6f0-35e9-4cb7-5fee28a4b74c","fromProperty":"prop-Price","toId":"7dca580f-386a-c504-ca28-de335b1564dd","toProperty":"in-Price"},{"fromId":"24e7aada-d6f0-35e9-4cb7-5fee28a4b74c","fromProperty":"prop-Obtained","toId":"7dca580f-386a-c504-ca28-de335b1564dd","toProperty":"in-Obtained"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Obtained","toId":"43021d45-307e-8f4d-a959-f615984d1c8b","toProperty":"in-Obtained"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Price","toId":"43021d45-307e-8f4d-a959-f615984d1c8b","toProperty":"in-Price"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Label","toId":"4c8d49f7-f884-6611-fef2-39bf4ed4ec62","toProperty":"text"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Icon","toId":"be7571cb-cf23-9163-1f21-cc1a85515977","toProperty":"src"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Price","toId":"fa822cb7-a589-1d20-4936-67370dd07725","toProperty":"text"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Obtained","toId":"8d057bb0-54ce-960a-ccfc-17ba419e3c46","toProperty":"text"},{"fromId":"f4e34332-e44d-0515-550a-0dfd61075c88","fromProperty":"onChange","toId":"4d1c900a-e79e-8a21-7636-25ec9b342b52","toProperty":"store"},{"fromId":"f4e34332-e44d-0515-550a-0dfd61075c88","fromProperty":"onChange","toId":"43021d45-307e-8f4d-a959-f615984d1c8b","toProperty":"in-Changed"},{"fromId":"f4e34332-e44d-0515-550a-0dfd61075c88","fromProperty":"checked","toId":"43021d45-307e-8f4d-a959-f615984d1c8b","toProperty":"in-Checked"},{"fromId":"7dca580f-386a-c504-ca28-de335b1564dd","fromProperty":"out-Checked","toId":"f4e34332-e44d-0515-550a-0dfd61075c88","toProperty":"checked"},{"fromId":"f4e34332-e44d-0515-550a-0dfd61075c88","fromProperty":"onChange","toId":"3e57bb23-e7f0-e04d-d082-6de3978ba326","toProperty":"run"}],"roots":[{"id":"398a94ba-8991-06b6-d934-02b838ab4d3d","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d943523b-9dc7-e667-2713-0028949fe730","type":"Group","parameters":{"minWidth":{"value":20,"unit":"%"},"maxWidth":{"value":20,"unit":"%"},"minHeight":{"value":20,"unit":"%"},"maxHeight":{"value":20,"unit":"%"},"sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"be7571cb-cf23-9163-1f21-cc1a85515977","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","alignY":"center","alignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"4c8d49f7-f884-6611-fef2-39bf4ed4ec62","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","marginLeft":{"value":0,"unit":"px"},"textAlignY":"center","sizeMode":"contentHeight","textAlignX":"center","minWidth":{"value":20,"unit":"%"},"maxWidth":{"value":20,"unit":"%"},"minHeight":{"value":20,"unit":"%"},"maxHeight":{"value":20,"unit":"%"},"alignY":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"fa822cb7-a589-1d20-4936-67370dd07725","type":"Text","parameters":{"text":"Price","textAlignX":"center","sizeMode":"explicit","textAlignY":"center","minWidth":{"value":20,"unit":"%"},"maxWidth":{"value":20,"unit":"%"},"minHeight":{"value":20,"unit":"%"},"maxHeight":{"value":20,"unit":"%"},"alignY":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"8d057bb0-54ce-960a-ccfc-17ba419e3c46","type":"Text","parameters":{"text":"Obtained","sizeMode":"explicit","textAlignY":"center","textAlignX":"center","minWidth":{"value":20,"unit":"%"},"maxWidth":{"value":20,"unit":"%"},"minHeight":{"value":20,"unit":"%"},"maxHeight":{"value":20,"unit":"%"},"alignY":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"ff7754b5-c8ee-3da9-066f-818423ef3e05","type":"Group","parameters":{"minWidth":{"value":20,"unit":"%"},"maxWidth":{"value":20,"unit":"%"},"minHeight":{"value":20,"unit":"%"},"maxHeight":{"value":20,"unit":"%"},"alignX":"center","marginTop":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f4e34332-e44d-0515-550a-0dfd61075c88","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/owl.png","iconSize":{"value":40,"unit":"px"},"alignX":"center","alignY":"center","width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"24e7aada-d6f0-35e9-4cb7-5fee28a4b74c","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Obtained,Checked,id"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":18}],"children":[]},{"id":"4d1c900a-e79e-8a21-7636-25ec9b342b52","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"7dca580f-386a-c504-ca28-de335b1564dd","type":"JavaScriptFunction","label":"Database Query Error","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\nconst obtained = Inputs.Obtained || ''; // Added obtained\nconst price = Inputs.Price || ''; // Added price\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Obtained = obtained; // Added obtained\n    Outputs.Price = price; // Added price\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Obtained = result.obtained || ''; // Added obtained handling\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":11},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":17}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"43021d45-307e-8f4d-a959-f615984d1c8b","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price }; // Added obtained and price\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":20}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"3e57bb23-e7f0-e04d-d082-6de3978ba326","type":"JavaScriptFunction","label":"Play Audio File","x":424,"y":547,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["398a94ba-8991-06b6-d934-02b838ab4d3d"]}},{"name":"/Collection Pages/Paintings/Paintings Logic/Options","id":"0664546d-5dda-740d-c8e7-fa3c31bb649d","graph":{"connections":[{"fromId":"dc1b68a1-b300-87d3-fb9d-73affc908f0e","fromProperty":"id","toId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","toProperty":"in-ID"},{"fromId":"dc1b68a1-b300-87d3-fb9d-73affc908f0e","fromProperty":"prop-Label","toId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","toProperty":"in-Label"},{"fromId":"dc1b68a1-b300-87d3-fb9d-73affc908f0e","fromProperty":"prop-Checked","toId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","toProperty":"in-Checked"},{"fromId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","fromProperty":"out-ID","toId":"f2da0134-1fc5-da13-f90d-4c341c59239c","toProperty":"in-ID"},{"fromId":"f2da0134-1fc5-da13-f90d-4c341c59239c","fromProperty":"out-ID","toId":"f17be772-e88d-a5f2-68e4-5d5caa5d09ad","toProperty":"modelId"},{"fromId":"f2da0134-1fc5-da13-f90d-4c341c59239c","fromProperty":"out-Checked","toId":"f17be772-e88d-a5f2-68e4-5d5caa5d09ad","toProperty":"prop-Checked"},{"fromId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","fromProperty":"out-Label","toId":"f2da0134-1fc5-da13-f90d-4c341c59239c","toProperty":"in-Label"},{"fromId":"dc1b68a1-b300-87d3-fb9d-73affc908f0e","fromProperty":"prop-Icon","toId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","toProperty":"in-Icon"},{"fromId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","fromProperty":"out-Icon","toId":"f2da0134-1fc5-da13-f90d-4c341c59239c","toProperty":"in-Icon"},{"fromId":"f17be772-e88d-a5f2-68e4-5d5caa5d09ad","fromProperty":"stored","toId":"295b88fa-c3a4-487a-59d3-8ef82a897ef6","toProperty":"Selection Changed"},{"fromId":"6c009842-56f8-8d21-a523-a10a0441bcf8","fromProperty":"onChange","toId":"f17be772-e88d-a5f2-68e4-5d5caa5d09ad","toProperty":"store"},{"fromId":"6c009842-56f8-8d21-a523-a10a0441bcf8","fromProperty":"onChange","toId":"f2da0134-1fc5-da13-f90d-4c341c59239c","toProperty":"in-Changed"},{"fromId":"6c009842-56f8-8d21-a523-a10a0441bcf8","fromProperty":"checked","toId":"f2da0134-1fc5-da13-f90d-4c341c59239c","toProperty":"in-Checked"},{"fromId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","fromProperty":"out-Checked","toId":"6c009842-56f8-8d21-a523-a10a0441bcf8","toProperty":"checked"},{"fromId":"d9e3f0da-4c07-596d-96a2-7172432e75ec","fromProperty":"out-Label","toId":"6c009842-56f8-8d21-a523-a10a0441bcf8","toProperty":"label"}],"roots":[{"id":"f04a4e3c-8933-e63f-82c9-0934eb41e7e2","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"6c009842-56f8-8d21-a523-a10a0441bcf8","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"dc1b68a1-b300-87d3-fb9d-73affc908f0e","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"f17be772-e88d-a5f2-68e4-5d5caa5d09ad","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"d9e3f0da-4c07-596d-96a2-7172432e75ec","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"f2da0134-1fc5-da13-f90d-4c341c59239c","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"295b88fa-c3a4-487a-59d3-8ef82a897ef6","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["f04a4e3c-8933-e63f-82c9-0934eb41e7e2"]}},{"name":"/Collection Pages/Paintings/paintings-splash","id":"12fd0bb5-9661-9844-3382-350d6de98ac6","graph":{"connections":[{"fromId":"3b50bd9b-5f9d-fef9-29e4-bf4f9287ac47","fromProperty":"out-Success","toId":"8a5ab897-ff39-1313-8ec1-5706176bd397","toProperty":"play"}],"roots":[{"id":"9f0bb986-6450-2651-b15c-738d95b7fbdb","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"527e1b6a-b6e5-a11e-23eb-d41041f22303","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"06c80f1a-c170-d1cc-939a-a3bca04e73de","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #ffacbe; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/art.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1c54314c-1348-3d30-125a-d91442e113f0","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"8a5ab897-ff39-1313-8ec1-5706176bd397","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"3b50bd9b-5f9d-fef9-29e4-bf4f9287ac47","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["9f0bb986-6450-2651-b15c-738d95b7fbdb"]}},{"name":"/Collection Pages/Passport/Avatar","id":"3c78db8a-092b-a893-11ba-ddd4f2b402b8","graph":{"connections":[{"fromId":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","fromProperty":"Show popup","toId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","toProperty":"show"},{"fromId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","fromProperty":"Closed","toId":"98952998-8113-58bc-3414-5ba71b487302","toProperty":"Closed"},{"fromId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","fromProperty":"closeAction-Confirmed","toId":"98952998-8113-58bc-3414-5ba71b487302","toProperty":"Confirm Clicked"},{"fromId":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","fromProperty":"Title","toId":"2bdb4580-8364-35c6-bf3f-48422b975c40","toProperty":"value"},{"fromId":"2bdb4580-8364-35c6-bf3f-48422b975c40","fromProperty":"savedValue","toId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","toProperty":"popupParam-Title"},{"fromId":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","fromProperty":"Description","toId":"7d4fe431-ee07-aac4-d0f6-78d62cfa9e36","toProperty":"value"},{"fromId":"7d4fe431-ee07-aac4-d0f6-78d62cfa9e36","fromProperty":"savedValue","toId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","toProperty":"popupParam-Description"},{"fromId":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","fromProperty":"Primary Button Label","toId":"165fa576-66cf-a3bf-471e-0a0e4f05c973","toProperty":"value"},{"fromId":"165fa576-66cf-a3bf-471e-0a0e4f05c973","fromProperty":"savedValue","toId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","toProperty":"popupParam-Primary Button Label"},{"fromId":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","fromProperty":"Secondary Button Label","toId":"c98128f7-c256-2b07-a9f5-eb699f8c94c0","toProperty":"value"},{"fromId":"c98128f7-c256-2b07-a9f5-eb699f8c94c0","fromProperty":"savedValue","toId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","toProperty":"popupParam-Secondary Button Label"},{"fromId":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","fromProperty":"Component to show","toId":"65ed3f9b-cb95-76f3-0320-cf616035d53d","toProperty":"target"},{"fromId":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","fromProperty":"closepopup","toId":"98952998-8113-58bc-3414-5ba71b487302","toProperty":"Closed"}],"roots":[{"id":"65ed3f9b-cb95-76f3-0320-cf616035d53d","type":"NavigationShowPopup","x":91.96418347009899,"y":135.4363398491261,"parameters":{"target":"/Collection Pages/Passport/Avatar/Modal Component"},"ports":[],"dynamicports":[{"name":"popupParam-Title","displayName":"Title","type":{"name":"string","multiline":true},"plug":"input","group":"Params","index":3},{"name":"popupParam-Description","displayName":"Description","type":"*","plug":"input","group":"Params","index":4},{"name":"popupParam-Primary Button Label","displayName":"Primary Button Label","type":"*","plug":"input","group":"Params","index":5},{"name":"popupParam-Secondary Button Label","displayName":"Secondary Button Label","type":"*","plug":"input","group":"Params","index":6},{"name":"popupParam-closepopup","displayName":"closepopup","type":"*","plug":"input","group":"Params","index":7},{"name":"closeAction-Confirmed","displayName":"Confirmed","type":"signal","plug":"output","group":"Close Actions","index":8}],"children":[]},{"id":"4bb7abdb-4719-5adb-93ff-d3a0e2af5fb0","type":"Component Inputs","x":-591.5947745170042,"y":133,"parameters":{},"ports":[{"name":"Show popup","plug":"output","type":{"name":"*"},"index":4,"group":"Action"},{"name":"Title","plug":"output","type":{"name":"*"},"group":"Text","index":0},{"name":"Description","plug":"output","type":{"name":"*"},"group":"Text","index":1},{"name":"Primary Button Label","plug":"output","type":{"name":"*"},"group":"Text","index":2},{"name":"Secondary Button Label","plug":"output","type":{"name":"*"},"group":"Text","index":3},{"name":"Component to show","plug":"output","type":{"name":"*"},"group":"General","index":5},{"name":"closepopup","plug":"output","type":{"name":"*"},"group":"General","index":6}],"dynamicports":[],"children":[]},{"id":"98952998-8113-58bc-3414-5ba71b487302","type":"Component Outputs","x":346.2378145694978,"y":169.59043267494678,"parameters":{},"ports":[{"name":"Closed","plug":"input","type":{"name":"*"},"index":1},{"name":"Confirm Clicked","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"2bdb4580-8364-35c6-bf3f-48422b975c40","type":"String","x":-200.74416819137218,"y":64.27295381410153,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"7d4fe431-ee07-aac4-d0f6-78d62cfa9e36","type":"String","x":-198.18050804049824,"y":162.97386962274555,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"165fa576-66cf-a3bf-471e-0a0e4f05c973","type":"String","x":-194.33501781418738,"y":271.92942603488507,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"c98128f7-c256-2b07-a9f5-eb699f8c94c0","type":"String","x":-195.61684788962435,"y":369.34851176809235,"parameters":{},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":[]}},{"name":"/Collection Pages/Passport/Avatar Logic","id":"834cf5aa-a6b0-f61e-2d74-1b07b9e3435c","graph":{"connections":[{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"prop-Label","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-Label"},{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"id","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-ID"},{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"prop-Boy","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-Boy"},{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"prop-Girl","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-Girl"},{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"prop-Answer1","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-Answer1"},{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"prop-Answer2","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-Answer2"},{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"prop-Answer3","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-Answer3"},{"fromId":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","fromProperty":"prop-Answer4","toId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","toProperty":"in-Answer4"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Boy","toId":"d0cd49f4-240b-86ce-bcdb-ace59e8e678c","toProperty":"name"},{"fromId":"d0cd49f4-240b-86ce-bcdb-ace59e8e678c","fromProperty":"name","toId":"c5c3958c-9191-2105-c032-36332e3912fa","toProperty":"in-Boy"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Girl","toId":"f2323d71-0631-30f7-f9e6-b170ac7c0206","toProperty":"name"},{"fromId":"f2323d71-0631-30f7-f9e6-b170ac7c0206","fromProperty":"name","toId":"c5c3958c-9191-2105-c032-36332e3912fa","toProperty":"in-Girl"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Answer1","toId":"6cfd2a19-dafe-5289-a98a-45592cd153df","toProperty":"text"},{"fromId":"a155836c-14d7-fbe5-45d8-860fb05e7e56","fromProperty":"onClick","toId":"1e7611ab-1149-98e4-4726-20ed4c2e18ec","toProperty":"closepopup"},{"fromId":"a155836c-14d7-fbe5-45d8-860fb05e7e56","fromProperty":"onClick","toId":"c5c3958c-9191-2105-c032-36332e3912fa","toProperty":"in-ClickBoy"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Boy","toId":"a155836c-14d7-fbe5-45d8-860fb05e7e56","toProperty":"src"},{"fromId":"c70788e3-cb80-afc5-84a0-2608dad427c7","fromProperty":"onClick","toId":"1e7611ab-1149-98e4-4726-20ed4c2e18ec","toProperty":"closepopup"},{"fromId":"c70788e3-cb80-afc5-84a0-2608dad427c7","fromProperty":"onClick","toId":"c5c3958c-9191-2105-c032-36332e3912fa","toProperty":"in-ClickGirl"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Girl","toId":"c70788e3-cb80-afc5-84a0-2608dad427c7","toProperty":"src"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Answer2","toId":"38ac4089-9d2a-f537-55cb-73d07c6bb9a2","toProperty":"text"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Answer3","toId":"948c9207-ae2c-bccb-e595-766846dcc1d8","toProperty":"text"},{"fromId":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","fromProperty":"out-Answer4","toId":"4f632ea4-770c-0dba-d5ab-61b051fa3787","toProperty":"text"},{"fromId":"a155836c-14d7-fbe5-45d8-860fb05e7e56","fromProperty":"onClick","toId":"751f41a2-a81b-fa72-52de-6a527974607e","toProperty":"run"},{"fromId":"c70788e3-cb80-afc5-84a0-2608dad427c7","fromProperty":"onClick","toId":"751f41a2-a81b-fa72-52de-6a527974607e","toProperty":"run"}],"roots":[{"id":"6f578ecc-31d2-35b4-0c6b-87b524c8a790","type":"Group","label":"Group","x":5,"y":7,"parameters":{"borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Text Light","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"borderStyle":"solid","scrollEnabled":false,"maxWidth":{"value":500,"unit":"px"},"minWidth":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9e74019a-f443-83a6-6974-60e942909692","type":"Group","parameters":{"flexDirection":"row","justifyContent":"center","marginTop":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a155836c-14d7-fbe5-45d8-860fb05e7e56","type":"Image","label":"Boy","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","borderRadius":{"value":10,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"alignX":"center","sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[]},{"id":"c70788e3-cb80-afc5-84a0-2608dad427c7","type":"Image","label":"Girl","parameters":{"borderRadius":{"value":10,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"sizeMode":"contentHeight","alignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"740b8a05-b28a-6a84-ee8e-61db65bf5b21","type":"Group","parameters":{"paddingLeft":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[{"id":"6cfd2a19-dafe-5289-a98a-45592cd153df","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"38ac4089-9d2a-f537-55cb-73d07c6bb9a2","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"948c9207-ae2c-bccb-e595-766846dcc1d8","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"4f632ea4-770c-0dba-d5ab-61b051fa3787","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"b6876ed9-1eb0-3320-4d04-35b5238fad6f","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-467.7722623368452,"y":160.16787010535523,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst boy = Inputs.Boy || '';\nconst girl = Inputs.Girl || '';\nconst answer1 = Inputs.Answer1 || '';\nconst answer2 = Inputs.Answer2 || '';\nconst answer3 = Inputs.Answer3 || '';\nconst answer4 = Inputs.Answer4 || '';\nconst checked = Inputs.Checked || ''; // Changed to an empty string to match your JSON\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Boy = boy;\n    Outputs.Girl = girl;\n    Outputs.Answer1 = answer1;\n    Outputs.Answer2 = answer2;\n    Outputs.Answer3 = answer3;\n    Outputs.Answer4 = answer4;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Boy = result.Boy || '';\n        Outputs.Girl = result.Girl || '';\n        Outputs.Answer1 = result.Answer1 || '';\n        Outputs.Answer2 = result.Answer2 || '';\n        Outputs.Answer3 = result.Answer3 || '';\n        Outputs.Answer4 = result.Answer4 || '';\n        Outputs.Checked = result.Checked || ''; // Handle Checked as an empty string\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Boy","displayName":"Boy","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Girl","displayName":"Girl","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Answer1","displayName":"Answer1","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Answer2","displayName":"Answer2","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Answer3","displayName":"Answer3","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Answer4","displayName":"Answer4","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Boy","displayName":"Boy","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Girl","displayName":"Girl","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Answer1","displayName":"Answer1","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Answer2","displayName":"Answer2","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Answer3","displayName":"Answer3","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Answer4","displayName":"Answer4","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":23}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"dac57b6b-c2f3-de75-e8ea-10408e1ff11d","type":"Model2","x":-950.3167870105354,"y":219.07882075797454,"parameters":{"idSource":"foreach","properties":"id,Label,Boy,Girl,Answer1,Answer2,Answer3,Answer4"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Boy","displayName":"Boy","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Boy Changed","name":"changed-Boy","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Girl","displayName":"Girl","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Girl Changed","name":"changed-Girl","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer1","displayName":"Answer1","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer1 Changed","name":"changed-Answer1","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer2","displayName":"Answer2","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer2 Changed","name":"changed-Answer2","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer3","displayName":"Answer3","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer3 Changed","name":"changed-Answer3","index":20},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer4","displayName":"Answer4","index":21},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer4 Changed","name":"changed-Answer4","index":22}],"children":[]},{"id":"c5c3958c-9191-2105-c032-36332e3912fa","type":"JavaScriptFunction","label":"Store Avatar Passport","x":519,"y":171,"parameters":{"functionScript":"const boyAvatar = Inputs.Boy || '';\nconst girlAvatar = Inputs.Girl || '';\n\nif (!boyAvatar && !girlAvatar) return;\n\n// Function to handle Boy Click event\nfunction handleClickBoy() {\n    try {\n        // Set avatar-passport with Boy avatar in local storage\n        localStorage.setItem('avatar-passport', boyAvatar);\n        Outputs.Success();\n    } catch (error) {\n        Outputs.error = error;\n        Outputs.Failure();\n    }\n}\n\n// Function to handle Girl Click event\nfunction handleClickGirl() {\n    try {\n        // Set avatar-passport with Girl avatar in local storage\n        localStorage.setItem('avatar-passport', girlAvatar);\n        Outputs.Success();\n    } catch (error) {\n        Outputs.error = error;\n        Outputs.Failure();\n    }\n}\n\n// Listen for the ClickBoy input\nif (Inputs.ClickBoy) {\n    handleClickBoy();\n}\n\n// Listen for the ClickGirl input\nif (Inputs.ClickGirl) {\n    handleClickGirl();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Boy","displayName":"Boy","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Girl","displayName":"Girl","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-ClickBoy","displayName":"ClickBoy","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-ClickGirl","displayName":"ClickGirl","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":10}],"children":[],"metadata":{"prompt":{"history":[{"content":"Function with one input only that collects string.  When it receives data, it will store key \"avatar-passport\" with the \"value\" of the string received.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const avatarPassport = Inputs.AvatarPassport || '';\nif (!avatarPassport) return;\n\ntry {\n  localStorage.setItem('avatar-passport', avatarPassport);\n  Outputs.Success();\n} catch (error) {\n  Outputs.error = error;\n  Outputs.Failure();\n}\n"},"snowflakeId":"019171156441-pzpzoa","type":"user"},{"type":"assistant","content":"\nThis function takes a string input through <span style=\"color: var(--base-color-yellow-400);\">Inputs.AvatarPassport</span> and stores it in the local storage of the browser with the key \"avatar-passport\". If the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there is an error during the operation, it assigns the error to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019171158a1a-18qkes","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d0cd49f4-240b-86ce-bcdb-ace59e8e678c","type":"Variable2","x":248,"y":-24,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"f2323d71-0631-30f7-f9e6-b170ac7c0206","type":"Variable2","x":309,"y":348,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"1e7611ab-1149-98e4-4726-20ed4c2e18ec","type":"Component Outputs","x":487.5,"y":50,"parameters":{},"ports":[{"name":"closepopup","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]},{"id":"751f41a2-a81b-fa72-52de-6a527974607e","type":"JavaScriptFunction","label":"Play Audio File","x":781,"y":74,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["6f578ecc-31d2-35b4-0c6b-87b524c8a790"]}},{"name":"/Collection Pages/Passport/Avatar Logic/Options","id":"78793894-62df-2a5a-f7ac-6a985b74e4f0","graph":{"connections":[{"fromId":"8600bf17-7d2c-4652-c785-228dcf3f1d9f","fromProperty":"id","toId":"a2ef1fce-4244-d30b-e775-777f3be00501","toProperty":"in-ID"},{"fromId":"8600bf17-7d2c-4652-c785-228dcf3f1d9f","fromProperty":"prop-Label","toId":"a2ef1fce-4244-d30b-e775-777f3be00501","toProperty":"in-Label"},{"fromId":"8600bf17-7d2c-4652-c785-228dcf3f1d9f","fromProperty":"prop-Checked","toId":"a2ef1fce-4244-d30b-e775-777f3be00501","toProperty":"in-Checked"},{"fromId":"a2ef1fce-4244-d30b-e775-777f3be00501","fromProperty":"out-ID","toId":"34b158c6-351a-09e2-a712-b4721cbe3974","toProperty":"in-ID"},{"fromId":"34b158c6-351a-09e2-a712-b4721cbe3974","fromProperty":"out-ID","toId":"22426942-f860-b656-10c8-f39dc062b309","toProperty":"modelId"},{"fromId":"34b158c6-351a-09e2-a712-b4721cbe3974","fromProperty":"out-Checked","toId":"22426942-f860-b656-10c8-f39dc062b309","toProperty":"prop-Checked"},{"fromId":"a2ef1fce-4244-d30b-e775-777f3be00501","fromProperty":"out-Label","toId":"34b158c6-351a-09e2-a712-b4721cbe3974","toProperty":"in-Label"},{"fromId":"8600bf17-7d2c-4652-c785-228dcf3f1d9f","fromProperty":"prop-Icon","toId":"a2ef1fce-4244-d30b-e775-777f3be00501","toProperty":"in-Icon"},{"fromId":"a2ef1fce-4244-d30b-e775-777f3be00501","fromProperty":"out-Icon","toId":"34b158c6-351a-09e2-a712-b4721cbe3974","toProperty":"in-Icon"},{"fromId":"22426942-f860-b656-10c8-f39dc062b309","fromProperty":"stored","toId":"710733c7-89b3-b1d7-4e78-e055a60093f7","toProperty":"Selection Changed"},{"fromId":"d43bc723-7dda-1015-0725-bc2b5a2dfafe","fromProperty":"onChange","toId":"22426942-f860-b656-10c8-f39dc062b309","toProperty":"store"},{"fromId":"d43bc723-7dda-1015-0725-bc2b5a2dfafe","fromProperty":"onChange","toId":"34b158c6-351a-09e2-a712-b4721cbe3974","toProperty":"in-Changed"},{"fromId":"d43bc723-7dda-1015-0725-bc2b5a2dfafe","fromProperty":"checked","toId":"34b158c6-351a-09e2-a712-b4721cbe3974","toProperty":"in-Checked"},{"fromId":"a2ef1fce-4244-d30b-e775-777f3be00501","fromProperty":"out-Checked","toId":"d43bc723-7dda-1015-0725-bc2b5a2dfafe","toProperty":"checked"},{"fromId":"a2ef1fce-4244-d30b-e775-777f3be00501","fromProperty":"out-Label","toId":"d43bc723-7dda-1015-0725-bc2b5a2dfafe","toProperty":"label"}],"roots":[{"id":"c7e38ed7-2cd0-2d43-aa1e-c006cb034522","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"d43bc723-7dda-1015-0725-bc2b5a2dfafe","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8600bf17-7d2c-4652-c785-228dcf3f1d9f","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"22426942-f860-b656-10c8-f39dc062b309","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"a2ef1fce-4244-d30b-e775-777f3be00501","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"34b158c6-351a-09e2-a712-b4721cbe3974","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"710733c7-89b3-b1d7-4e78-e055a60093f7","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["c7e38ed7-2cd0-2d43-aa1e-c006cb034522"]}},{"name":"/Collection Pages/Passport/Avatar/Modal Component","id":"ba061070-a67b-ee62-766f-1995f40ecc4e","graph":{"connections":[{"fromId":"27e9f0a5-2103-3d2f-07a4-aded159764fe","fromProperty":"onClick","toId":"f98548bf-27fa-341b-183b-07995c8e5879","toProperty":"close"},{"fromId":"1ae39a2c-53b8-6ed9-9f8d-91f77fb08746","fromProperty":"didMount","toId":"b840c178-b15a-833b-7e71-7eb34faba370","toProperty":"to-show"},{"fromId":"b840c178-b15a-833b-7e71-7eb34faba370","fromProperty":"size","toId":"24dc3f44-8b9f-ed7e-6537-e872ce11ff24","toProperty":"transformScale"},{"fromId":"b840c178-b15a-833b-7e71-7eb34faba370","fromProperty":"opacity","toId":"24dc3f44-8b9f-ed7e-6537-e872ce11ff24","toProperty":"opacity"},{"fromId":"c9030acb-aaf2-f78a-c2ad-08753f6385ce","fromProperty":"Title","toId":"577ba3a2-dbfd-b8c5-f78f-033c0425d976","toProperty":"text"},{"fromId":"6114bb91-332d-45bb-2db1-c402cd006694","fromProperty":"items","toId":"973158c0-eb13-ec90-ee03-a785b263b9cc","toProperty":"items"},{"fromId":"973158c0-eb13-ec90-ee03-a785b263b9cc","fromProperty":"itemOutputSignal-closepopup","toId":"f98548bf-27fa-341b-183b-07995c8e5879","toProperty":"close"}],"roots":[{"id":"f98548bf-27fa-341b-183b-07995c8e5879","type":"NavigationClosePopup","x":397,"y":349.3146799870558,"parameters":{"closeActions":"Confirmed"},"ports":[],"dynamicports":[{"type":"signal","plug":"input","group":"Close Actions","name":"closeAction-Confirmed","displayName":"Confirmed","index":3}],"children":[]},{"id":"1ae39a2c-53b8-6ed9-9f8d-91f77fb08746","type":"Group","x":-18,"y":-72,"parameters":{"scrollEnabled":false,"alignX":"center","sizeMode":"explicit","maxHeight":{"value":93,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"24dc3f44-8b9f-ed7e-6537-e872ce11ff24","type":"Group","label":"Modal","parameters":{"position":"relative","backgroundColor":"Grey - 100","blockTouch":true,"borderRadius":{"value":4,"unit":"px"},"boxShadowBlurRadius":{"value":8,"unit":"px"},"boxShadowSpreadRadius":{"value":0,"unit":"px"},"boxShadowOffsetY":{"value":4,"unit":"px"},"boxShadowColor":"#00000026","maxWidth":{"value":500,"unit":"px"},"minWidth":{"value":50,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"sizeMode":"explicit","flexDirection":"column","mounted":true,"marginBottom":{"value":5,"unit":"px"},"alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[{"id":"577ba3a2-dbfd-b8c5-f78f-033c0425d976","type":"Text","label":"Title","parameters":{"textStyle":"Title Medium","text":"Modal Title","marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"alignX":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"74d2d755-d56d-dd70-5948-27bc032b7b5b","type":"Group","parameters":{"scrollEnabled":true},"ports":[],"dynamicports":[],"children":[{"id":"b1f7024c-9bc3-93c0-7eef-e9634fe64c4e","type":"Text","parameters":{"text":"Animal Crossing avatars are selected at the beginning of the game during your conversation with Rover. Your answers will determine your character's appearance.","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"textAlignX":"center","marginBottom":{"value":10,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"fontSize":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"973158c0-eb13-ec90-ee03-a785b263b9cc","type":"For Each","parameters":{"template":"/Collection Pages/Passport/Avatar Logic"},"ports":[],"dynamicports":[{"name":"itemOutputSignal-closepopup","displayName":"closepopup","type":"signal","plug":"output","group":"Item Signals","index":6},{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":7}],"children":[]}]},{"id":"7e49c021-f698-e218-8c62-d747c43eae4f","type":"Group","label":"Button section","parameters":{"flexDirection":"row","marginTop":{"value":10,"unit":"px"},"sizeMode":"contentHeight","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"27e9f0a5-2103-3d2f-07a4-aded159764fe","type":"net.noodl.controls.button","label":"Secondary Button","parameters":{"label":"Cancel","borderColor":"Primary","borderWidth":{"value":1,"unit":"px"},"backgroundColor":"#9A0600","color":"#FFFFFF","marginBottom":{"value":10,"unit":"px"}},"stateParameters":{"hover":{"borderColor":"Primary Dark"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"b840c178-b15a-833b-7e71-7eb34faba370","type":"States","label":"Show animation","x":372.40031396109833,"y":-65.70626405198828,"parameters":{"states":"hide,show","values":"size,opacity","value-hide-size":0,"value-show-size":1,"value-hide-opacity":0,"value-show-opacity":1,"currentState":"hide","transitiondef-hide":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"transitiondef-show":{"curve":[0,0,0.58,1],"dur":150,"delay":0}},"ports":[],"dynamicports":[{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"size","index":6},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"size","name":"type-size","index":7},{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"opacity","index":8},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"opacity","name":"type-opacity","index":9},{"plug":"input","type":"number","group":"hide Values","name":"value-hide-size","displayName":"size","editorName":"hide|size","index":10},{"plug":"input","type":"number","group":"hide Values","name":"value-hide-opacity","displayName":"opacity","editorName":"hide|opacity","index":11},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"hide Transitions","name":"transitiondef-hide","index":12},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"hide Transitions","name":"transition-hide-size","displayName":"size","editorName":"Transition hide|size","index":13},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"hide Transitions","name":"transition-hide-opacity","displayName":"opacity","editorName":"Transition hide|opacity","index":14},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To hide","name":"to-hide","group":"Go to state","index":15},{"plug":"output","type":"boolean","displayName":"At hide","name":"at-hide","group":"Current state","index":16},{"plug":"output","type":"signal","displayName":"Has Reached hide","name":"reached-hide","group":"Current state","index":17},{"plug":"input","type":"number","group":"show Values","name":"value-show-size","displayName":"size","editorName":"show|size","index":18},{"plug":"input","type":"number","group":"show Values","name":"value-show-opacity","displayName":"opacity","editorName":"show|opacity","index":19},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"show Transitions","name":"transitiondef-show","index":20},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"show Transitions","name":"transition-show-size","displayName":"size","editorName":"Transition show|size","index":21},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"show Transitions","name":"transition-show-opacity","displayName":"opacity","editorName":"Transition show|opacity","index":22},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To show","name":"to-show","group":"Go to state","index":23},{"plug":"output","type":"boolean","displayName":"At show","name":"at-show","group":"Current state","index":24},{"plug":"output","type":"signal","displayName":"Has Reached show","name":"reached-show","group":"Current state","index":25},{"plug":"input","type":{"name":"enum","enums":["hide","show"]},"group":"States","displayName":"State","name":"currentState","default":"hide","index":26}],"children":[]},{"id":"c9030acb-aaf2-f78a-c2ad-08753f6385ce","type":"Component Inputs","x":-403.43267743823577,"y":332.2708708053495,"parameters":{},"ports":[{"name":"Title","plug":"output","type":{"name":"*"},"index":1},{"name":"Description","plug":"output","type":{"name":"*"},"index":2},{"name":"Primary Button Label","plug":"output","type":{"name":"*"},"index":3},{"name":"Secondary Button Label","plug":"output","type":{"name":"*"},"index":4},{"name":"closepopup","plug":"output","type":{"name":"*"},"index":5}],"dynamicports":[],"children":[]},{"id":"6114bb91-332d-45bb-2db1-c402cd006694","type":"Static Data","x":-366,"y":520,"parameters":{"csv":"[\r\n  {\r\n    \"id\": \"avatar-0001\",\r\n    \"Label\": \"Boy (1)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_1.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0002\",\r\n    \"Label\": \"Boy (2)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_2.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0003\",\r\n    \"Label\": \"Boy (3)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_3.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0004\",\r\n    \"Label\": \"Boy (4)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_4.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0005\",\r\n    \"Label\": \"Boy (5)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_5.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0006\",\r\n    \"Label\": \"Boy (6)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_6.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0007\",\r\n    \"Label\": \"Boy (7)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_7.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0008\",\r\n    \"Label\": \"Boy (8)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/boy_8.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0009\",\r\n    \"Label\": \"Girl (1)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_1.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0010\",\r\n    \"Label\": \"Girl (2)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_2.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0011\",\r\n    \"Label\": \"Girl (3)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_3.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0012\",\r\n    \"Label\": \"Girl (4)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_4.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0013\",\r\n    \"Label\": \"Girl (5)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_5.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0014\",\r\n    \"Label\": \"Girl (6)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_6.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0015\",\r\n    \"Label\": \"Girl (7)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_7.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0016\",\r\n    \"Label\": \"Girl (8)\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/player/girl_8.png\",\r\n    \"Checked\": \"\"\r\n  }\r\n]\r\n","type":"json","json":"[\r\n  {\r\n    \"id\": \"avatar-0001\",\r\n    \"Label\": \"Boy (1)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_1.png\",\r\n\t\"Girl\": \"https://acgc.sterner.digital/images/player/girl_8.png\",\r\n\t\"Answer1\": \"Answer 1: No way!\",\r\n\t\"Answer2\": \"Answer 2: I'm moving!\",\r\n\t\"Answer3\": \"Answer 3: Don't know yet.\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0002\",\r\n    \"Label\": \"Boy (2)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_2.png\",\r\n\t\"Girl\": \"https://acgc.sterner.digital/images/player/girl_5.png\",\r\n\t\"Answer1\": \"Answer 1: Please!\",\r\n\t\"Answer2\": \"Answer 2: What's it to ya?\",\r\n\t\"Answer3\": \"Answer 3: Don't know yet.\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0003\",\r\n    \"Label\": \"Boy (3)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_3.png\",\r\n\t\"Girl\": \"https://acgc.sterner.digital/images/player/girl_7.png\",\r\n\t\"Answer1\": \"Answer 1: Please!\",\r\n\t\"Answer2\": \"Answer 2: What's it to ya?\",\r\n\t\"Answer3\": \"Answer 3: Leave me alone!\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0004\",\r\n    \"Label\": \"Boy (4)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_4.png\",\r\n\t\"Girl\": \"https://acgc.sterner.digital/images/player/girl_2.png\",\r\n\t\"Answer1\": \"Answer 1: No way!\",\r\n\t\"Answer2\": \"Answer 2: What's it to ya?\",\r\n\t\"Answer3\": \"Answer 3: Leave me alone!\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0005\",\r\n    \"Label\": \"Boy (5)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_5.png\",\r\n\t\"Girl\": \"https://acgc.sterner.digital/images/player/girl_3.png\",\r\n\t\"Answer1\": \"Answer 1: No way!\",\r\n\t\"Answer2\": \"Answer 2: I'm moving!\",\r\n\t\"Answer3\": \"Answer 3: Leave me alone!\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0006\",\r\n    \"Label\": \"Boy (6)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_6.png\",\r\n\t\"Girl\": \"https://acgc.sterner.digital/images/player/girl_6.png\",\r\n\t\"Answer1\": \"Answer 1: Please!\",\r\n\t\"Answer2\": \"Answer 2: I'm moving!\",\r\n\t\"Answer3\": \"Answer 3: Leave me alone!\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0007\",\r\n    \"Label\": \"Boy (7)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_7.png\",\r\n    \"Girl\": \"https://acgc.sterner.digital/images/player/girl_1.png\",\r\n\t\"Answer1\": \"Answer 1: Please!\",\r\n\t\"Answer2\": \"Answer 2: I'm moving!\",\r\n\t\"Answer3\": \"Answer 3: Don't know yet.\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  },\r\n  {\r\n    \"id\": \"avatar-0008\",\r\n    \"Label\": \"Boy (8)\",\r\n    \"Boy\": \"https://acgc.sterner.digital/images/player/boy_8.png\",\r\n\t\"Girl\": \"https://acgc.sterner.digital/images/player/girl_4.png\",\r\n\t\"Answer1\": \"Answer 1: No way!\",\r\n\t\"Answer2\": \"Answer 2: What's it to ya?\",\r\n\t\"Answer3\": \"Answer 3: Don't know yet.\",\r\n\t\"Answer4\": \"Answer 4: Just a little...\"\r\n  }\r\n]\r\n"},"ports":[],"dynamicports":[],"children":[],"metadata":{"merge":{"soureCodePorts":["json"]}}}],"visualRoots":["1ae39a2c-53b8-6ed9-9f8d-91f77fb08746"]}},{"name":"/Collection Pages/Passport/Bugs Progress Circle","id":"c89ca09d-899c-b5fa-e486-ac37e679f186","graph":{"connections":[{"fromId":"9a7df594-5530-8e9e-a29c-6650979c8e57","fromProperty":"formatted","toId":"13367520-9d2a-2922-03bd-2df416c2607a","toProperty":"text"},{"fromId":"17c16906-3590-b740-d54d-2d04ba1ffa91","fromProperty":"remappedValue","toId":"fafe03a0-eec1-7889-c9dd-c9dd4327f486","toProperty":"mounted"},{"fromId":"17c16906-3590-b740-d54d-2d04ba1ffa91","fromProperty":"remappedValue","toId":"bffe89a6-4b1e-93d9-05a1-9b9aee8a99c3","toProperty":"Value in procentage"},{"fromId":"17c16906-3590-b740-d54d-2d04ba1ffa91","fromProperty":"remappedValue","toId":"adb22816-09dd-068d-8e17-a3617cdbbc32","toProperty":"inputValue"},{"fromId":"17c16906-3590-b740-d54d-2d04ba1ffa91","fromProperty":"remappedValue","toId":"ce0933f5-d300-0683-12cf-cceb98829b37","toProperty":"val"},{"fromId":"ca8e23d2-f6f3-c973-01d7-4079258aca96","fromProperty":"currentValue","toId":"fafe03a0-eec1-7889-c9dd-c9dd4327f486","toProperty":"endAngle"},{"fromId":"adb22816-09dd-068d-8e17-a3617cdbbc32","fromProperty":"remappedValue","toId":"ca8e23d2-f6f3-c973-01d7-4079258aca96","toProperty":"targetValue"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Margin Left","toId":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","toProperty":"marginLeft"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Margin Top","toId":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","toProperty":"marginTop"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Margin Bottom","toId":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","toProperty":"marginBottom"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Margin Right","toId":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","toProperty":"marginRight"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Align X","toId":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","toProperty":"alignX"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Align Y","toId":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","toProperty":"alignY"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Position","toId":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","toProperty":"position"},{"fromId":"ca8e23d2-f6f3-c973-01d7-4079258aca96","fromProperty":"atTargetValue","toId":"bffe89a6-4b1e-93d9-05a1-9b9aee8a99c3","toProperty":"At animation done"},{"fromId":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","fromProperty":"Animation Duration","toId":"ca8e23d2-f6f3-c973-01d7-4079258aca96","toProperty":"duration"},{"fromId":"ce0933f5-d300-0683-12cf-cceb98829b37","fromProperty":"result","toId":"9a7df594-5530-8e9e-a29c-6650979c8e57","toProperty":"val"},{"fromId":"43cde7df-0a77-ec19-84ea-930dbcc6c002","fromProperty":"out-TotalBugs","toId":"17c16906-3590-b740-d54d-2d04ba1ffa91","toProperty":"inputValue"},{"fromId":"5ae98fa9-4828-fd98-f664-ac0ccbb46825","fromProperty":"onClick","toId":"ec7e356f-4faf-36d9-0ea9-aefaca8829b0","toProperty":"navigate"},{"fromId":"5ae98fa9-4828-fd98-f664-ac0ccbb46825","fromProperty":"onClick","toId":"68e55e57-72d8-64d0-9f9e-778dc19bf962","toProperty":"run"}],"roots":[{"id":"571c96e5-63e5-8f4b-65e1-d9cbf48b17a8","type":"Group","label":"Progress Circle","x":0,"y":0,"parameters":{"sizeMode":"contentSize"},"ports":[],"dynamicports":[],"children":[{"id":"b0e9b5a7-54b8-dd8a-030e-61ffa01c9f11","type":"Circle","label":"Inactive Circle","parameters":{"size":128,"strokeWidth":8,"fillEnabled":false,"strokeEnabled":true,"strokeColor":"#ebe5ce","fillColor":"#ebe5ce"},"ports":[],"dynamicports":[],"children":[]},{"id":"fafe03a0-eec1-7889-c9dd-c9dd4327f486","type":"Circle","label":"Active Circle","parameters":{"size":128,"strokeWidth":8,"position":"absolute","fillEnabled":false,"strokeColor":"#5961e1","strokeLineCap":"round","strokeEnabled":true,"endAngle":0,"fillColor":"#5961e1"},"ports":[],"dynamicports":[],"children":[]},{"id":"5ae98fa9-4828-fd98-f664-ac0ccbb46825","type":"Group","label":"Text","parameters":{"position":"absolute"},"ports":[],"dynamicports":[],"children":[{"id":"3fde0e1b-544e-35f6-d809-c5e1cf6710a9","type":"Image","parameters":{"src":"images/museum/museum_bugs.png","minWidth":{"value":112,"unit":"px"},"maxWidth":{"value":112,"unit":"px"},"minHeight":{"value":112,"unit":"px"},"maxHeight":{"value":112,"unit":"px"},"position":"absolute","borderRadius":{"value":200,"unit":"px"},"alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"56ef6d57-7351-3749-1377-19b993db03a4","type":"Group","label":"Text","parameters":{"sizeMode":"contentSize","position":"absolute","alignX":"center","marginTop":{"value":20,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"13367520-9d2a-2922-03bd-2df416c2607a","type":"Text","parameters":{"textStyle":"Label Large","text":"99%","color":"Nook Text","lineHeight":{"value":1,"unit":""},"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","textAlignX":"center","fontSize":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"17c16906-3590-b740-d54d-2d04ba1ffa91","type":"Number Remapper","label":"Value in procentage","x":-227.3994727841646,"y":750.9582554671847,"parameters":{"maxOutputValue":100,"maxInputValue":40},"ports":[],"dynamicports":[],"children":[]},{"id":"8082824b-2e1d-2223-da4d-f57f9d88d6ec","type":"Component Inputs","x":-661.0736952429797,"y":83.9693738962768,"parameters":{},"ports":[{"name":"Value","plug":"output","type":{"name":"*"},"index":0},{"name":"Min Value","plug":"output","type":{"name":"*"},"index":1},{"name":"Max Value","plug":"output","type":{"name":"*"},"index":2},{"name":"Margin Left","plug":"output","type":{"name":"*"},"group":"Margin","index":4},{"name":"Margin Top","plug":"output","type":{"name":"*"},"group":"Margin","index":5},{"name":"Margin Bottom","plug":"output","type":{"name":"*"},"group":"Margin","index":6},{"name":"Margin Right","plug":"output","type":{"name":"*"},"group":"Margin","index":7},{"name":"Align X","plug":"output","type":{"name":"*"},"group":"Alignment","index":8},{"name":"Align Y","plug":"output","type":{"name":"*"},"group":"Alignment","index":9},{"name":"Position","plug":"output","type":{"name":"*"},"group":"Position","index":10},{"name":"Animation Duration","plug":"output","type":{"name":"*"},"index":3}],"dynamicports":[],"children":[]},{"id":"9a7df594-5530-8e9e-a29c-6650979c8e57","type":"String Format","x":-228.25577158769153,"y":512.5397884639392,"parameters":{"format":"{val}%"},"ports":[],"dynamicports":[{"name":"val","type":"string","plug":"input","index":2}],"children":[]},{"id":"bffe89a6-4b1e-93d9-05a1-9b9aee8a99c3","type":"Component Outputs","x":48.24089911087907,"y":818.8381288895145,"parameters":{},"ports":[{"name":"Value in procentage","plug":"input","type":{"name":"*"},"index":1},{"name":"At animation done","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"adb22816-09dd-068d-8e17-a3617cdbbc32","type":"Number Remapper","label":"Value in Degrees","x":49.555265376773605,"y":686.5108910120125,"parameters":{"maxInputValue":100,"maxOutputValue":360},"ports":[],"dynamicports":[],"children":[]},{"id":"ce0933f5-d300-0683-12cf-cceb98829b37","type":"Expression","x":-684,"y":558,"parameters":{"expression":"Math.round(val)"},"ports":[],"dynamicports":[{"group":"Parameters","name":"val","type":{"name":"*","editAsType":"string"},"plug":"input","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["expression"]}}},{"id":"ca8e23d2-f6f3-c973-01d7-4079258aca96","type":"net.noodl.animatetovalue","x":308.67523046801034,"y":567.7875143542458,"parameters":{"duration":300},"ports":[],"dynamicports":[],"children":[]},{"id":"43cde7df-0a77-ec19-84ea-930dbcc6c002","type":"JavaScriptFunction","label":"Calculate Total Bugs","x":-693,"y":402,"parameters":{"functionScript":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('bugs-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count);\nOutputs.TotalBugs = totalBugs;\n"},"ports":[],"dynamicports":[{"name":"out-TotalBugs","displayName":"TotalBugs","plug":"output","type":"*","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Count total of keys starting with \"bugs-\" in localstorage, divide by 40, rounded to nearest whole number, output \"totalbugs\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('bugs-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count / 40);\nOutputs.TotalBugs = totalBugs;\n"},"snowflakeId":"019177137eaa-casd9p","type":"user"},{"type":"assistant","content":"\nThis function calculates the total number of keys in the local storage that start with \"bugs-\", divides that number by 40, and rounds it to the nearest whole number. \n\nIt iterates over all keys in the local storage, and for each key that starts with \"bugs-\", it increments a counter. \n\nAfter going through all the keys, it divides the counter by 40 and rounds the result to the nearest whole number. \n\nThe final result is outputted as <span style=\"color: var(--base-color-yellow-400);\">Outputs.TotalBugs</span>.\n","snowflakeId":"019177138f41-mzh77j","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"ec7e356f-4faf-36d9-0ea9-aefaca8829b0","type":"RouterNavigate","x":344,"y":371,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"68e55e57-72d8-64d0-9f9e-778dc19bf962","type":"JavaScriptFunction","label":"Play Audio File","x":342,"y":240,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["571c96e5-63e5-8f4b-65e1-d9cbf48b17a8"]}},{"name":"/Collection Pages/Passport/Date Picker","id":"f5ab4749-d463-8293-c208-dc2045421973","graph":{"connections":[{"fromId":"27ae82cb-650e-4ada-8761-bb2fc855023b","fromProperty":"didMount","toId":"99ff0486-6717-b204-e41e-087fd2a8f246","toProperty":"DidMount"},{"fromId":"7b072dfc-f78c-a079-273c-4a13d47d45d7","fromProperty":"Value","toId":"5b5825be-340d-e3fc-895f-cc3939134f2c","toProperty":"value-Date"},{"fromId":"5b5825be-340d-e3fc-895f-cc3939134f2c","fromProperty":"value-Date","toId":"7f9ee380-b4a9-cf9f-25ac-b2fb8e8d0aea","toProperty":"Value"},{"fromId":"99ff0486-6717-b204-e41e-087fd2a8f246","fromProperty":"DateSelected","toId":"7f9ee380-b4a9-cf9f-25ac-b2fb8e8d0aea","toProperty":"Changed"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Align Y","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"alignY"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Align X","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"alignX"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Margin Top","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"marginTop"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Margin Bottom","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"marginBottom"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Margin Left","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"marginLeft"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Margin Right","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"marginRight"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Position","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"position"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Width","toId":"27ae82cb-650e-4ada-8761-bb2fc855023b","toProperty":"width"},{"fromId":"01299228-f6ae-1f0a-0d84-cc1ae0131d5d","fromProperty":"this","toId":"99ff0486-6717-b204-e41e-087fd2a8f246","toProperty":"TextInput"},{"fromId":"5b5825be-340d-e3fc-895f-cc3939134f2c","fromProperty":"value-Formatted Date","toId":"01299228-f6ae-1f0a-0d84-cc1ae0131d5d","toProperty":"startValue"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Label","toId":"e685b776-a21e-67cb-766b-c740b86e7cb7","toProperty":"text"},{"fromId":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","fromProperty":"Show Label","toId":"e685b776-a21e-67cb-766b-c740b86e7cb7","toProperty":"mounted"}],"roots":[{"id":"27ae82cb-650e-4ada-8761-bb2fc855023b","type":"Group","label":"Date Picker","x":-260,"y":-153,"parameters":{"height":{"value":40,"unit":"px"},"borderColor":"#999","flexDirection":"column","sizeMode":"contentHeight","borderWidth":{"value":2,"unit":"px"},"styleCss":"cursor:pointer;","marginBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e685b776-a21e-67cb-766b-c740b86e7cb7","type":"Text","parameters":{"textStyle":"Label Small","marginBottom":{"value":4,"unit":"px"},"text":"Birthday","color":"Grey - 700","sizeMode":"contentSize"},"ports":[],"dynamicports":[],"children":[]},{"id":"43664b97-6fef-4dbe-b0f4-c884e212680c","type":"Group","parameters":{"height":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"842637b8-78b6-1725-8089-5bc05ddcdf01","type":"Group","label":"Icon wrapper","parameters":{"position":"absolute","sizeMode":"contentSize","alignY":"center","styleCss":"cursor:pointer;"},"ports":[],"dynamicports":[],"children":[{"id":"43b46bb5-2eb4-4ac2-1357-aa65f3c71c3c","type":"net.noodl.visual.icon","parameters":{"iconIconSource":{"class":"material-icons","code":"calendar_today"},"iconSize":{"value":20,"unit":"px"},"iconColor":"Grey - 700","marginLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"01299228-f6ae-1f0a-0d84-cc1ae0131d5d","type":"net.noodl.controls.textinput","parameters":{"useLabel":false,"placeholder":"MMM DD, YYYY","alignY":"center","paddingLeft":{"value":40,"unit":"px"},"paddingRight":{"value":0,"unit":"px"},"height":{"value":100,"unit":"%"},"useIcon":false,"iconIconSource":{"class":"material-icons","code":"calendar_today"},"iconSpacing":{"value":8,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"stateParameters":{"focused":{"iconColor":"Primary"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"99ff0486-6717-b204-e41e-087fd2a8f246","type":"Javascript2","label":"Date Picker","x":135.41077978324927,"y":-121.10018885810723,"parameters":{"code":"function mobileAndTabletCheck() {\n  let check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n}\n\nfunction isMobile() {\n    return mobileAndTabletCheck()\n}\n\nconst scriptUrl = \"https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js\"\nconst cssUrl =  \"https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker.min.css\"\n\nfunction injectDatePicker(onload) {\n    if (document.querySelectorAll('#--ndl-datepicker-datepicker-js--').length === 0) {\n        window.__ndl_datepicker_onload = [onload]\n\n        var script = document.createElement('script');\n        script.id = \"--ndl-datepicker-datepicker-js--\"\n        script.setAttribute('src', scriptUrl);\n        script.onload = () => {\n            window.__ndl_datepicker_onload.forEach(cb => cb())\n            window.__ndl_datepicker_onload = []\n        }\n        document.head.appendChild(script)\n    }\n    else {\n        if (window.__ndl_datepicker_onload.length > 0) window.__ndl_datepicker_onload.push(onload)\n        else onload()\n    }\n}\n\nfunction injectDatePickerStyles() {\n    const datePickerStyles = `\n        .ndl-datepicker-native-input {\n            display: block;\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            opacity: 0;\n            cursor: pointer;\n            min-width: 100%;\n            margin: 0;\n            padding: 0;\n            border: 0;\n            border-radius: 0;\n        }\n        .ndl-datepicker-native-input::-webkit-calendar-picker-indicator {\n            position: absolute;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            cursor: pointer;\n        }\n\n        .datepicker {\n            display:none;\n            font-family: Roboto, sans-serif;\n            border: 1px solid ${Script.Inputs.Accent};\n            border-radius: 4px;\n        }\n\n        .datepicker-picker {\n            background-color: ${Script.Inputs.Background};\n            padding: 24px;\n        }\n\n        .datepicker-header {\n            padding-bottom: 14px;\n        }\n\n        .datepicker-header .datepicker-controls {\n            display: flex;\n            justify-content: space-between;\n        }\n\n        .datepicker-header .datepicker-controls .button {\n            background-color: transparent;\n            color: ${Script.Inputs.Text};\n        }\n\n        .datepicker-header .datepicker-controls button.button:focus,\n        .datepicker-header .datepicker-controls button.button:hover {\n            background-color: ${Script.Inputs.HoverDateBackground};\n            color: ${Script.Inputs.HoverDateText};\n        }\n\n        .datepicker-controls .button.view-switch {\n            border: 1px solid ${Script.Inputs.Text};\n            flex: 0 0 180px;\n        }\n\n        .days-of-week .dow {\n            height: 45px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 16px;\n            font-weight: 400;\n            color: ${Script.Inputs.Accent}\n        }\n\n        .datepicker-grid {\n            width: 315px;\n        }\n\n        .datepicker-grid .datepicker-cell.day {\n            border-radius: 50%;\n            width: 45px;\n            height: 45px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .datepicker-grid .datepicker-cell {\n            color: ${Script.Inputs.Text}\n            font-size: 16px;\n        }\n\n        .datepicker-grid .datepicker-cell.next,\n        .datepicker-grid .datepicker-cell.prev {\n            color: ${Script.Inputs.TextMuted};\n        }\n\n        .datepicker-grid .datepicker-cell.focused {\n        }\n\n        .datepicker-grid .datepicker-cell.selected {\n            background-color:  ${Script.Inputs.SelectedDateBackgroud};\n            color: ${Script.Inputs.SelectedDateText};\n        }\n\n        .datepicker-grid .datepicker-cell:hover,\n        .datepicker-grid .datepicker-cell:focus {\n            color: ${Script.Inputs.HoverDateText};\n            background-color: ${Script.Inputs.HoverDateBackground};\n        }\n`\n\n    if(!isMobile()) { // This sheet is only needed if we are on desktop\n        if(document.querySelectorAll('#--ndl-datepicker-sheet--').length === 0) {\n            let addSheet = document.createElement('link');\n            addSheet.id = \"--ndl-datepicker-sheet--\"\n            addSheet.setAttribute('rel', 'stylesheet');\n            addSheet.setAttribute('href',cssUrl);\n            document.head.appendChild(addSheet);\n        }\n    }\n\n    if(document.querySelectorAll('#--ndl-datepicker-styles--').length === 0) {\n        const styles = document.createElement('style')\n        styles.id = '--ndl-datepicker-styles--'\n        styles.innerHTML = datePickerStyles\n        document.head.append(styles)\n    }\n}\n\n// Format a date object into a string\nfunction formatDate(date) {\n    if(!(date instanceof Date)) return\n\n    const months = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ]\n\n    let newDateString = months[date.getMonth()] + ' ' +date.getDate() + ', ' + date.getFullYear()\n\n    return newDateString\n}\n\n// Parse a date string in the format we use into a date object\n// if possible\nfunction parseDate(_dateString) {\n    // No valid date, return todays date\n    if(_dateString === undefined || _dateString.length < 3) \n        return null\n\n    let dateString = _dateString.trim().toLowerCase()\n\n    const months = {\n        'jan':0,\n        'feb':1,\n        'mar':2,\n        'apr':3,\n        'may':4,\n        'jun':5,\n        'jul':6,\n        'aug':7,\n        'sep':8,\n        'oct':9,\n        'nov':10,\n        'dec':11\n    }\n\n    let month = months[dateString.substring(0,3)]\n    if(month === undefined) return new Date() // Not a valid month\n\n    // Remove month\n    dateString = dateString.substring(3)\n    dateString = dateString.trim()\n\n    let sepIndex = dateString.indexOf(',')\n    let dayString = dateString.substring(0,sepIndex==-1?dateString.length:sepIndex)\n\n    let day = parseInt(dayString) || 1\n\n    let year = (new Date()).getFullYear()\n    if(sepIndex !== -1) {\n        dateString = dateString.substring(sepIndex+1)\n        dateString = dateString.trim()\n        \n        if(dateString.length === 4)\n        year = parseInt(dateString)\n    }\n\n    return new Date(year,month,day)\n}\n\n// Compare two dates, ignoring the time\nfunction compareDates(a,b) {\n    if(a.getFullYear() === b.getFullYear() && a.getDate() === b.getDate() && a.getMonth() === b.getMonth())\n        return true\n\n    return false\n}\n\nvar dateInput,datepicker,datePopup\n\nconst TextInputFocused = () => {\n    Component.Object.TextInputIsFocused = true\n\n    // If the text input is focused and we are not running on a mobile device\n    // launch the popup\n    if(!isMobile()) {\n        const textInput = Script.Inputs.TextInput.getDOMElement().querySelectorAll('input')[0]\n        const rect = textInput.getBoundingClientRect()\n\n      //  let top = rect.bottom + Script.Inputs.PopupMarginTop\n      //  let left = rect.left + Script.Inputs.PopupMarginRight\n\n        datePopup = document.createElement('div')\n        datePopup.style.zIndex = 100\n        datePopup.style.position = 'absolute'\n        datePopup.style.border = \"1px solid \" + Script.Inputs.BorderColor\n        datePopup.style.borderRadius = \"4px\"\n        datePopup.style.top = (rect.bottom + Script.Inputs.PopupMarginTop) + 'px'\n        datePopup.style.left = (rect.left + Script.Inputs.PopupMarginRight) + 'px'\n        document.body.appendChild(datePopup)\n\n        // This is running on desktop, install the vanilla js\n        injectDatePicker(() => {\n            // Script is loaded\n\n            datepicker = new Datepicker(datePopup, {\n                prevArrow:'<',\n                nextArrow:'>',\n            }); \n\n            // adjuste position if outside of screen\n            const rect = datePopup.getBoundingClientRect()\n            if(rect.top + rect.height > window.innerHeight) {\n                datePopup.style.top = Math.max(0,window.innerHeight - rect.height) + 'px'\n            }\n            if(rect.left + rect.width > window.innerWidth) {\n                datePopup.style.left = Math.max(0,window.innerWidth - rect.width) + 'px'\n            }\n         \n           \n\n            if(Component.Object.Date !== undefined) {\n                datepicker.setDate(Component.Object.Date)\n            }\n\n            datePopup.addEventListener('changeDate',() => {\n                // The picker reports a changed date\n                \n            })\n\n            datePopup.addEventListener('click',(ev) => {\n                // The user have clicked a date in the popup\n                var date = datepicker.getDate()\n\n                // If the date is a new date\n                if(date && (!Component.Object.Date || !compareDates(Component.Object.Date,date))) {\n                    \n                    // Blur the text input so the date can be updated\n                    Component.Object.Date = date\n                   \n                    textInput.blur()\n                }\n            })\n            \n        })\n\n    }\n}\n\nconst TextInputBlurred = () => {\n    Component.Object.TextInputIsFocused = false\n\n    const textInput = Script.Inputs.TextInput.getDOMElement().querySelectorAll('input')[0]\n    const dateString = textInput.value\n\n    const date = parseDate(dateString)\n    Component.Object.Date = date\n    Script.Outputs.DateSelected()\n\n    document.body.removeChild(datePopup)\n}\n\nconst DateStringChanged = (e) => {\n    const dateString = e.target.value\n\n    if(Component.Object.TextInputIsFocused) {\n        const date = parseDate(dateString)\n\n        // The date have changed in the component object, update the\n        // date picker\n        if(datepicker !== undefined) {\n            datepicker.setDate(date)\n        }\n\n        if(dateInput !== undefined) {\n            dateInput.value = date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate()\n        }\n    }\n}\n\nScript.Inputs = {\n    PopupMarginRight: 'number',\n    PopupMarginTop: 'number',\n    Text: 'color',\n    TextMuted: 'color',\n    Accent: 'color',\n    Background: 'color',\n    SelectedDateBackground: 'color',\n    SelectedDateText: 'color',\n    HoverDateBackground: 'color',\n    HoverDateText: 'color'\n}\n\nScript.Signals.DidMount = () => {\n    Script.Outputs.IsMobile = isMobile()\n\n    injectDatePickerStyles()\n\n    // Register blur / focus listeners\n    if(Script.Inputs.TextInput.getDOMElement() !== undefined) {\n        var textInput = Script.Inputs.TextInput.getDOMElement().querySelectorAll('input')[0]\n        textInput.addEventListener('focus',TextInputFocused)\n        textInput.addEventListener('blur',TextInputBlurred)\n        textInput.addEventListener('keydown',(e) => {\n            if(e.keyCode===13) textInput.blur()\n        })\n        textInput.addEventListener('keyup',DateStringChanged)\n    }\n\n    // If there is a date set from start, format it \n    if(Component.Object.Date !== undefined) {\n        let formattedDate = formatDate(Component.Object.Date)\n        Component.Object['Formatted Date'] = formattedDate\n    }\n\n\n    Component.Object.on('change',(ev) => {\n        if(ev.name === 'Date') {\n            const date = Component.Object.Date\n            // The date have changed in the component object, update the\n            // date picker\n            if(datepicker !== undefined) {\n                datepicker.setDate(date)\n            }\n\n            if(dateInput !== undefined) {\n                dateInput.value = date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate()\n            }\n\n            let formattedDate = formatDate(date)\n            textInput.value = formattedDate\n            Component.Object['Formatted Date'] = formattedDate\n        }\n    })\n\n    if(isMobile()) {\n        // On Mobile create a native date input hidden\n        // under the icon, clicking it will show the\n        // native picker\n        const elem = Script.Inputs.TextInput.getDOMElement()\n\n        dateInput = document.createElement('input')\n        dateInput.className = 'ndl-datepicker-native-input'\n\n        elem.parentNode.appendChild(dateInput)\n\n        dateInput.type = \"date\"\n\n        dateInput.onchange = () => {\n            var date = new Date(dateInput.value)\n            Component.Object.Date = date\n            Script.Outputs.DateSelected()\n        }\n    }\n}","scriptInputs":[],"PopupRightMargin":-44,"PopupMarginRight":-42,"PopupMarginTop":4,"Text":"Grey - 700","Accent":"Primary","SelectedDateBackground":"Primary","SelectedDateText":"White","HoverDateBackground":"Grey - 300","HoverDateText":"Grey - 900","BorderColor":"Primary","Background":"White","TextMuted":"Grey - 400"},"ports":[],"dynamicports":[{"name":"PopupMarginRight","plug":"input","type":{"name":"number"},"group":"Inputs","index":5},{"name":"PopupMarginTop","plug":"input","type":{"name":"number"},"group":"Inputs","index":6},{"name":"Text","plug":"input","type":{"name":"color"},"group":"Inputs","index":7},{"name":"TextMuted","plug":"input","type":{"name":"color"},"group":"Inputs","index":8},{"name":"Accent","plug":"input","type":{"name":"color"},"group":"Inputs","index":9},{"name":"Background","plug":"input","type":{"name":"color"},"group":"Inputs","index":10},{"name":"SelectedDateBackground","plug":"input","type":{"name":"color"},"group":"Inputs","index":11},{"name":"SelectedDateText","plug":"input","type":{"name":"color"},"group":"Inputs","index":12},{"name":"HoverDateBackground","plug":"input","type":{"name":"color"},"group":"Inputs","index":13},{"name":"HoverDateText","plug":"input","type":{"name":"color"},"group":"Inputs","index":14},{"name":"DidMount","plug":"input","type":{"name":"signal"},"group":"Inputs","index":15},{"name":"SelectedDateBackgroud","displayName":"SelectedDateBackgroud","plug":"input","type":"*","group":"Inputs","index":16},{"name":"TextInput","displayName":"TextInput","plug":"input","type":"*","group":"Inputs","index":17},{"name":"BorderColor","displayName":"BorderColor","plug":"input","type":"*","group":"Inputs","index":18},{"name":"DateSelected","displayName":"DateSelected","plug":"output","type":"signal","group":"Outputs","index":19},{"name":"IsMobile","displayName":"IsMobile","plug":"output","type":"*","group":"Outputs","index":20}],"children":[],"metadata":{"merge":{"soureCodePorts":["code"]}}},{"id":"5b5825be-340d-e3fc-895f-cc3939134f2c","type":"net.noodl.ComponentObject","x":-699.4916489820396,"y":120.64558149300865,"parameters":{"properties":"Date,Formatted Date"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"value-Date","displayName":"Date","index":4},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Date Changed","name":"changed-Date","index":5},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"value-Formatted Date","displayName":"Formatted Date","index":6},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Formatted Date Changed","name":"changed-Formatted Date","index":7}],"children":[]},{"id":"7b072dfc-f78c-a079-273c-4a13d47d45d7","type":"Component Inputs","x":-991.015517828351,"y":136.41885823553514,"parameters":{},"ports":[{"name":"Value","plug":"output","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]},{"id":"7f9ee380-b4a9-cf9f-25ac-b2fb8e8d0aea","type":"Component Outputs","x":134.95985723986172,"y":115.83345879317977,"parameters":{},"ports":[{"name":"Value","plug":"input","type":{"name":"*"},"index":1},{"name":"Changed","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"a1e5155f-a3b9-2014-60f3-9d5f015ee94c","type":"Component Inputs","x":-590.5466150500234,"y":-166.54382360308125,"parameters":{},"ports":[{"name":"Align X","plug":"output","type":{"name":"*"},"group":"Alignment","index":1},{"name":"Align Y","plug":"output","type":{"name":"*"},"group":"Alignment","index":0},{"name":"Position","plug":"output","type":{"name":"*"},"group":"Layout","index":7},{"name":"Margin Top","plug":"output","type":{"name":"*"},"group":"Margins","index":2},{"name":"Margin Bottom","plug":"output","type":{"name":"*"},"group":"Margins","index":3},{"name":"Margin Left","plug":"output","type":{"name":"*"},"group":"Margins","index":4},{"name":"Margin Right","plug":"output","type":{"name":"*"},"group":"Margins","index":5},{"name":"Width","plug":"output","type":{"name":"*"},"group":"Dimensions","index":8},{"name":"Text","plug":"output","type":{"name":"*"},"group":"Colors","index":9},{"name":"Show Label","plug":"output","type":{"name":"*"},"group":"Label","index":10},{"name":"Label","plug":"output","type":{"name":"*"},"group":"Label","index":11}],"dynamicports":[],"children":[]}],"visualRoots":["27ae82cb-650e-4ada-8761-bb2fc855023b"],"comments":[{"text":"This is where the Datepicker is being initiated. \nIt's also where all the styling can be done.\n\nWe've exposed the colors as variables for easy \ncustomisation, but more advanced stying can\nbe done in the style block at the top of the code","width":313,"height":378,"fill":true,"x":55,"y":-286,"id":"11dc4abe-eb63-832b-1643-e0882309b74b","color":"visual"}]},"metadata":{"canvasPos":{"x":564,"y":20}}},{"name":"/Collection Pages/Passport/EditPassport","id":"4a3044b2-8bbc-3584-b028-b455965a4d2a","graph":{"connections":[{"fromId":"e8d2259e-085b-640f-3813-3f481136068c","fromProperty":"closepopup","toId":"00eccbd6-dd8a-5787-669c-1ba83bae78b5","toProperty":"Closed"},{"fromId":"e8d2259e-085b-640f-3813-3f481136068c","fromProperty":"Component to show","toId":"0f0e66e1-0945-8f53-4daf-205cbca36de5","toProperty":"target"},{"fromId":"0f0e66e1-0945-8f53-4daf-205cbca36de5","fromProperty":"closeAction-Confirmed","toId":"00eccbd6-dd8a-5787-669c-1ba83bae78b5","toProperty":"Confirm Clicked"},{"fromId":"0f0e66e1-0945-8f53-4daf-205cbca36de5","fromProperty":"Closed","toId":"00eccbd6-dd8a-5787-669c-1ba83bae78b5","toProperty":"Closed"},{"fromId":"e8d2259e-085b-640f-3813-3f481136068c","fromProperty":"Show popup","toId":"0f0e66e1-0945-8f53-4daf-205cbca36de5","toProperty":"show"},{"fromId":"e8d2259e-085b-640f-3813-3f481136068c","fromProperty":"Title","toId":"b60cd3c0-cd7c-34f6-a49d-544f07661e66","toProperty":"value"},{"fromId":"e8d2259e-085b-640f-3813-3f481136068c","fromProperty":"Description","toId":"838ac1f0-4a03-17de-e489-26ae303de51b","toProperty":"value"},{"fromId":"e8d2259e-085b-640f-3813-3f481136068c","fromProperty":"Primary Button Label","toId":"31e6cd86-ed69-f992-daf9-483994acaba0","toProperty":"value"},{"fromId":"e8d2259e-085b-640f-3813-3f481136068c","fromProperty":"Secondary Button Label","toId":"be243119-1b38-0c76-4478-8f856a71f2be","toProperty":"value"}],"roots":[{"id":"00eccbd6-dd8a-5787-669c-1ba83bae78b5","type":"Component Outputs","x":346.2378145694978,"y":169.59043267494678,"parameters":{},"ports":[{"name":"Closed","plug":"input","type":{"name":"*"},"index":1},{"name":"Confirm Clicked","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"e8d2259e-085b-640f-3813-3f481136068c","type":"Component Inputs","x":-591.5947745170042,"y":133,"parameters":{},"ports":[{"name":"Show popup","plug":"output","type":{"name":"*"},"index":4,"group":"Action"},{"name":"Title","plug":"output","type":{"name":"*"},"group":"Text","index":0},{"name":"Description","plug":"output","type":{"name":"*"},"group":"Text","index":1},{"name":"Primary Button Label","plug":"output","type":{"name":"*"},"group":"Text","index":2},{"name":"Secondary Button Label","plug":"output","type":{"name":"*"},"group":"Text","index":3},{"name":"Component to show","plug":"output","type":{"name":"*"},"group":"General","index":5},{"name":"closepopup","plug":"output","type":{"name":"*"},"group":"General","index":6}],"dynamicports":[],"children":[]},{"id":"0f0e66e1-0945-8f53-4daf-205cbca36de5","type":"NavigationShowPopup","x":91.96418347009899,"y":135.4363398491261,"parameters":{"target":"/Collection Pages/Passport/EditPassport/Edit Modal Component"},"ports":[],"dynamicports":[{"name":"closeAction-Confirmed","displayName":"Confirmed","type":"signal","plug":"output","group":"Close Actions","index":3}],"children":[]},{"id":"b60cd3c0-cd7c-34f6-a49d-544f07661e66","type":"String","x":-200.74416819137218,"y":64.27295381410153,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"838ac1f0-4a03-17de-e489-26ae303de51b","type":"String","x":-198.18050804049824,"y":162.97386962274555,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"31e6cd86-ed69-f992-daf9-483994acaba0","type":"String","x":-194.33501781418738,"y":271.92942603488507,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"be243119-1b38-0c76-4478-8f856a71f2be","type":"String","x":-195.61684788962435,"y":369.34851176809235,"parameters":{},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":[]}},{"name":"/Collection Pages/Passport/EditPassport Logic","id":"34fbcc0e-1e9d-dd3c-128c-76088145ff9e","graph":{"connections":[{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"prop-Label","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-Label"},{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"id","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-ID"},{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"prop-Boy","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-Boy"},{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"prop-Girl","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-Girl"},{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"prop-Answer1","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-Answer1"},{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"prop-Answer2","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-Answer2"},{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"prop-Answer3","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-Answer3"},{"fromId":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","fromProperty":"prop-Answer4","toId":"31f37b7c-72e5-4546-bd41-f53e2d981054","toProperty":"in-Answer4"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Boy","toId":"c5dd3e5a-1931-64e8-ec1a-d4648b7507c7","toProperty":"src"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Girl","toId":"36ade294-70d8-336f-d826-8cc4e7852bea","toProperty":"src"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Answer1","toId":"69b63b03-8eee-d8f2-8407-77126ac2f824","toProperty":"text"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Answer2","toId":"1644fc32-f82b-a641-3512-53dd7fcf7120","toProperty":"text"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Answer3","toId":"e4ebd020-f63f-395c-702a-397d6a7fad2c","toProperty":"text"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Answer4","toId":"0c8ae40a-20af-a8f4-d96f-859dc85fde64","toProperty":"text"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Boy","toId":"7aa875dd-277d-5928-1ddc-60e3854c3e19","toProperty":"name"},{"fromId":"7aa875dd-277d-5928-1ddc-60e3854c3e19","fromProperty":"name","toId":"8b60cf0a-d20f-6f27-179c-130c09dacb0e","toProperty":"in-Boy"},{"fromId":"31f37b7c-72e5-4546-bd41-f53e2d981054","fromProperty":"out-Girl","toId":"050f001b-19ea-dd0b-8b4b-98230d46d746","toProperty":"name"},{"fromId":"050f001b-19ea-dd0b-8b4b-98230d46d746","fromProperty":"name","toId":"8b60cf0a-d20f-6f27-179c-130c09dacb0e","toProperty":"in-Girl"},{"fromId":"c5dd3e5a-1931-64e8-ec1a-d4648b7507c7","fromProperty":"onClick","toId":"8b60cf0a-d20f-6f27-179c-130c09dacb0e","toProperty":"in-ClickBoy"},{"fromId":"36ade294-70d8-336f-d826-8cc4e7852bea","fromProperty":"onClick","toId":"8b60cf0a-d20f-6f27-179c-130c09dacb0e","toProperty":"in-ClickGirl"},{"fromId":"c5dd3e5a-1931-64e8-ec1a-d4648b7507c7","fromProperty":"onClick","toId":"95b19204-d4e0-b6cd-1dbc-3cd593326bb4","toProperty":"closepopup"},{"fromId":"36ade294-70d8-336f-d826-8cc4e7852bea","fromProperty":"onClick","toId":"95b19204-d4e0-b6cd-1dbc-3cd593326bb4","toProperty":"closepopup"}],"roots":[{"id":"c1835a4b-7c3c-fff4-2e69-66b843caf65f","type":"Group","label":"Group","x":5,"y":7,"parameters":{"borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Text Light","marginBottom":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"borderStyle":"solid","scrollEnabled":false,"maxWidth":{"value":500,"unit":"px"},"minWidth":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3b300dde-7bdb-ce8f-80fe-2413e116ae4c","type":"Group","parameters":{"flexDirection":"row","justifyContent":"center","marginTop":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c5dd3e5a-1931-64e8-ec1a-d4648b7507c7","type":"Image","label":"Boy","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","borderRadius":{"value":10,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"alignX":"center","sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[]},{"id":"36ade294-70d8-336f-d826-8cc4e7852bea","type":"Image","label":"Girl","parameters":{"borderRadius":{"value":10,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"sizeMode":"contentHeight","alignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"692c20c5-677b-be52-da45-3060967fcf5c","type":"Group","parameters":{"paddingLeft":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[{"id":"69b63b03-8eee-d8f2-8407-77126ac2f824","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"1644fc32-f82b-a641-3512-53dd7fcf7120","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"e4ebd020-f63f-395c-702a-397d6a7fad2c","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"0c8ae40a-20af-a8f4-d96f-859dc85fde64","type":"Text","parameters":{"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"31f37b7c-72e5-4546-bd41-f53e2d981054","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-467.7722623368452,"y":160.16787010535523,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst boy = Inputs.Boy || '';\nconst girl = Inputs.Girl || '';\nconst answer1 = Inputs.Answer1 || '';\nconst answer2 = Inputs.Answer2 || '';\nconst answer3 = Inputs.Answer3 || '';\nconst answer4 = Inputs.Answer4 || '';\nconst checked = Inputs.Checked || ''; // Changed to an empty string to match your JSON\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Boy = boy;\n    Outputs.Girl = girl;\n    Outputs.Answer1 = answer1;\n    Outputs.Answer2 = answer2;\n    Outputs.Answer3 = answer3;\n    Outputs.Answer4 = answer4;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Boy = result.Boy || '';\n        Outputs.Girl = result.Girl || '';\n        Outputs.Answer1 = result.Answer1 || '';\n        Outputs.Answer2 = result.Answer2 || '';\n        Outputs.Answer3 = result.Answer3 || '';\n        Outputs.Answer4 = result.Answer4 || '';\n        Outputs.Checked = result.Checked || ''; // Handle Checked as an empty string\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Boy","displayName":"Boy","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Girl","displayName":"Girl","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Answer1","displayName":"Answer1","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Answer2","displayName":"Answer2","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Answer3","displayName":"Answer3","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Answer4","displayName":"Answer4","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Boy","displayName":"Boy","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Girl","displayName":"Girl","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Answer1","displayName":"Answer1","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Answer2","displayName":"Answer2","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Answer3","displayName":"Answer3","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Answer4","displayName":"Answer4","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":23}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"1a97efba-92aa-c5b8-3c80-ec2479a23ead","type":"Model2","x":-950.3167870105354,"y":219.07882075797454,"parameters":{"idSource":"foreach","properties":"id,Label,Boy,Girl,Answer1,Answer2,Answer3,Answer4"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Boy","displayName":"Boy","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Boy Changed","name":"changed-Boy","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Girl","displayName":"Girl","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Girl Changed","name":"changed-Girl","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer1","displayName":"Answer1","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer1 Changed","name":"changed-Answer1","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer2","displayName":"Answer2","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer2 Changed","name":"changed-Answer2","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer3","displayName":"Answer3","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer3 Changed","name":"changed-Answer3","index":20},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Answer4","displayName":"Answer4","index":21},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Answer4 Changed","name":"changed-Answer4","index":22}],"children":[]},{"id":"8b60cf0a-d20f-6f27-179c-130c09dacb0e","type":"JavaScriptFunction","label":"Store Avatar Passport","x":519,"y":171,"parameters":{"functionScript":"const boyAvatar = Inputs.Boy || '';\nconst girlAvatar = Inputs.Girl || '';\n\nif (!boyAvatar && !girlAvatar) return;\n\n// Function to handle Boy Click event\nfunction handleClickBoy() {\n    try {\n        // Set avatar-passport with Boy avatar in local storage\n        localStorage.setItem('avatar-passport', boyAvatar);\n        Outputs.Success();\n    } catch (error) {\n        Outputs.error = error;\n        Outputs.Failure();\n    }\n}\n\n// Function to handle Girl Click event\nfunction handleClickGirl() {\n    try {\n        // Set avatar-passport with Girl avatar in local storage\n        localStorage.setItem('avatar-passport', girlAvatar);\n        Outputs.Success();\n    } catch (error) {\n        Outputs.error = error;\n        Outputs.Failure();\n    }\n}\n\n// Listen for the ClickBoy input\nif (Inputs.ClickBoy) {\n    handleClickBoy();\n}\n\n// Listen for the ClickGirl input\nif (Inputs.ClickGirl) {\n    handleClickGirl();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Boy","displayName":"Boy","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Girl","displayName":"Girl","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-ClickBoy","displayName":"ClickBoy","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-ClickGirl","displayName":"ClickGirl","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":10}],"children":[],"metadata":{"prompt":{"history":[{"content":"Function with one input only that collects string.  When it receives data, it will store key \"avatar-passport\" with the \"value\" of the string received.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const avatarPassport = Inputs.AvatarPassport || '';\nif (!avatarPassport) return;\n\ntry {\n  localStorage.setItem('avatar-passport', avatarPassport);\n  Outputs.Success();\n} catch (error) {\n  Outputs.error = error;\n  Outputs.Failure();\n}\n"},"snowflakeId":"019171156441-pzpzoa","type":"user"},{"type":"assistant","content":"\nThis function takes a string input through <span style=\"color: var(--base-color-yellow-400);\">Inputs.AvatarPassport</span> and stores it in the local storage of the browser with the key \"avatar-passport\". If the operation is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. If there is an error during the operation, it assigns the error to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019171158a1a-18qkes","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"7aa875dd-277d-5928-1ddc-60e3854c3e19","type":"Variable2","x":248,"y":-24,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"050f001b-19ea-dd0b-8b4b-98230d46d746","type":"Variable2","x":309,"y":348,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"95b19204-d4e0-b6cd-1dbc-3cd593326bb4","type":"Component Outputs","x":487.5,"y":50,"parameters":{},"ports":[{"name":"closepopup","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["c1835a4b-7c3c-fff4-2e69-66b843caf65f"]}},{"name":"/Collection Pages/Passport/EditPassport Logic/Options","id":"07dea20e-9159-4e14-e03a-f5294a63e9ba","graph":{"connections":[{"fromId":"d9d04e94-1920-ac8a-d855-6aee9fdf9233","fromProperty":"id","toId":"191156c1-129d-8974-ed7b-5a9cf6f82926","toProperty":"in-ID"},{"fromId":"d9d04e94-1920-ac8a-d855-6aee9fdf9233","fromProperty":"prop-Label","toId":"191156c1-129d-8974-ed7b-5a9cf6f82926","toProperty":"in-Label"},{"fromId":"d9d04e94-1920-ac8a-d855-6aee9fdf9233","fromProperty":"prop-Checked","toId":"191156c1-129d-8974-ed7b-5a9cf6f82926","toProperty":"in-Checked"},{"fromId":"191156c1-129d-8974-ed7b-5a9cf6f82926","fromProperty":"out-ID","toId":"a8faf87b-217b-c32d-c1df-760655ecfcb8","toProperty":"in-ID"},{"fromId":"a8faf87b-217b-c32d-c1df-760655ecfcb8","fromProperty":"out-ID","toId":"d22b4fcc-a062-8828-c405-9a886958672f","toProperty":"modelId"},{"fromId":"a8faf87b-217b-c32d-c1df-760655ecfcb8","fromProperty":"out-Checked","toId":"d22b4fcc-a062-8828-c405-9a886958672f","toProperty":"prop-Checked"},{"fromId":"191156c1-129d-8974-ed7b-5a9cf6f82926","fromProperty":"out-Label","toId":"a8faf87b-217b-c32d-c1df-760655ecfcb8","toProperty":"in-Label"},{"fromId":"d9d04e94-1920-ac8a-d855-6aee9fdf9233","fromProperty":"prop-Icon","toId":"191156c1-129d-8974-ed7b-5a9cf6f82926","toProperty":"in-Icon"},{"fromId":"191156c1-129d-8974-ed7b-5a9cf6f82926","fromProperty":"out-Icon","toId":"a8faf87b-217b-c32d-c1df-760655ecfcb8","toProperty":"in-Icon"},{"fromId":"d22b4fcc-a062-8828-c405-9a886958672f","fromProperty":"stored","toId":"a355306f-9137-b642-8bb6-94a76abf12bd","toProperty":"Selection Changed"},{"fromId":"576871f0-649d-adab-f5be-51b03c5565df","fromProperty":"onChange","toId":"d22b4fcc-a062-8828-c405-9a886958672f","toProperty":"store"},{"fromId":"576871f0-649d-adab-f5be-51b03c5565df","fromProperty":"onChange","toId":"a8faf87b-217b-c32d-c1df-760655ecfcb8","toProperty":"in-Changed"},{"fromId":"576871f0-649d-adab-f5be-51b03c5565df","fromProperty":"checked","toId":"a8faf87b-217b-c32d-c1df-760655ecfcb8","toProperty":"in-Checked"},{"fromId":"191156c1-129d-8974-ed7b-5a9cf6f82926","fromProperty":"out-Checked","toId":"576871f0-649d-adab-f5be-51b03c5565df","toProperty":"checked"},{"fromId":"191156c1-129d-8974-ed7b-5a9cf6f82926","fromProperty":"out-Label","toId":"576871f0-649d-adab-f5be-51b03c5565df","toProperty":"label"}],"roots":[{"id":"178005df-a870-b2cd-7445-af862d2585b1","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"576871f0-649d-adab-f5be-51b03c5565df","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d9d04e94-1920-ac8a-d855-6aee9fdf9233","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"d22b4fcc-a062-8828-c405-9a886958672f","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"191156c1-129d-8974-ed7b-5a9cf6f82926","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a8faf87b-217b-c32d-c1df-760655ecfcb8","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"a355306f-9137-b642-8bb6-94a76abf12bd","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["178005df-a870-b2cd-7445-af862d2585b1"]}},{"name":"/Collection Pages/Passport/EditPassport/Edit Modal Component","id":"f1426afb-c23a-fa8e-2ebd-4fcf7ef5495e","graph":{"connections":[{"fromId":"6868cb4a-05a9-37fb-e005-faa3552b9fb6","fromProperty":"onClick","toId":"c78308ae-75d9-1dce-f5ec-212a100b69a2","toProperty":"close"},{"fromId":"5998e87d-0311-9d0a-1317-cd1a5670fa1e","fromProperty":"didMount","toId":"1715f2a6-9304-137e-b985-b185c245c205","toProperty":"to-show"},{"fromId":"1715f2a6-9304-137e-b985-b185c245c205","fromProperty":"size","toId":"3860e59f-9236-9c14-db40-be5b83d5cfc0","toProperty":"transformScale"},{"fromId":"1715f2a6-9304-137e-b985-b185c245c205","fromProperty":"opacity","toId":"3860e59f-9236-9c14-db40-be5b83d5cfc0","toProperty":"opacity"},{"fromId":"b84e1fbf-49ec-7d0a-c151-121e0edc8d36","fromProperty":"out-PlayerName","toId":"b3c99d77-ec8a-180d-961f-11dc5b7e48ff","toProperty":"startValue"},{"fromId":"b84e1fbf-49ec-7d0a-c151-121e0edc8d36","fromProperty":"out-TownName","toId":"9e706b8c-1f29-ce5e-648c-3711482b311b","toProperty":"startValue"},{"fromId":"b84e1fbf-49ec-7d0a-c151-121e0edc8d36","fromProperty":"out-IslandName","toId":"e6408dd5-7f3a-72b0-acec-4f87fe78a350","toProperty":"startValue"},{"fromId":"b3c99d77-ec8a-180d-961f-11dc5b7e48ff","fromProperty":"onTextChanged","toId":"e4beb764-e38c-41ac-118f-6d64256fd295","toProperty":"name"},{"fromId":"e4beb764-e38c-41ac-118f-6d64256fd295","fromProperty":"name","toId":"8e12aa53-348f-dfdd-0667-e0e2ca78afd3","toProperty":"in-PlayerName"},{"fromId":"9e706b8c-1f29-ce5e-648c-3711482b311b","fromProperty":"onTextChanged","toId":"eef5b33f-1289-bc02-e834-51eafa67d4da","toProperty":"name"},{"fromId":"eef5b33f-1289-bc02-e834-51eafa67d4da","fromProperty":"name","toId":"8e12aa53-348f-dfdd-0667-e0e2ca78afd3","toProperty":"in-TownName"},{"fromId":"e6408dd5-7f3a-72b0-acec-4f87fe78a350","fromProperty":"onTextChanged","toId":"27d2b1c2-3522-ada7-baff-8a7e35cf3814","toProperty":"name"},{"fromId":"27d2b1c2-3522-ada7-baff-8a7e35cf3814","fromProperty":"name","toId":"8e12aa53-348f-dfdd-0667-e0e2ca78afd3","toProperty":"in-IslandName"},{"fromId":"a054dc91-fb26-699b-5778-91c17b33d7ea","fromProperty":"onClick","toId":"024ae6ea-045a-46ec-2fc6-0d1469ce8fa0","toProperty":"in-ClickApple"},{"fromId":"60514316-6c23-0c4b-cb46-06fadcfe96a9","fromProperty":"onClick","toId":"024ae6ea-045a-46ec-2fc6-0d1469ce8fa0","toProperty":"in-ClickCherry"},{"fromId":"f25e4a1d-2737-281a-3cf7-8d808bf04ece","fromProperty":"onClick","toId":"024ae6ea-045a-46ec-2fc6-0d1469ce8fa0","toProperty":"in-ClickOrange"},{"fromId":"a91caf95-f1bd-9f78-f2ee-60496b65f08b","fromProperty":"onClick","toId":"024ae6ea-045a-46ec-2fc6-0d1469ce8fa0","toProperty":"in-ClickPeach"},{"fromId":"52f14168-9f9f-e6dd-ab46-d0cbd30d7449","fromProperty":"onClick","toId":"024ae6ea-045a-46ec-2fc6-0d1469ce8fa0","toProperty":"in-ClickPear"},{"fromId":"a054dc91-fb26-699b-5778-91c17b33d7ea","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"60514316-6c23-0c4b-cb46-06fadcfe96a9","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"f25e4a1d-2737-281a-3cf7-8d808bf04ece","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"a91caf95-f1bd-9f78-f2ee-60496b65f08b","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"52f14168-9f9f-e6dd-ab46-d0cbd30d7449","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"6868cb4a-05a9-37fb-e005-faa3552b9fb6","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"2e527c58-1318-d627-8ce8-da6486ce5292","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"a99a0a1c-e60a-9f04-a499-4d7525dde984","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"e532493b-8641-30c5-6108-67f1773c3683","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"ec2724b0-2ebb-db7b-68dc-aca43927aa0a","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"627bcae9-8d94-57e8-573d-8fa09ba6110d","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"30ec5d9a-11f4-b384-45c4-657b41fc3daf","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"49542c7c-c2ae-0776-3938-cf9b25159e7a","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"77714322-8be5-924c-6f13-4455a56679f3","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"50ed0f74-9ac2-d9cc-654f-25b2dd09b822","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"29f3907c-b5b6-e247-1004-683905a97d97","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"a9a22e7b-c745-b67c-679f-bbe88c9d9e6d","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"a6fd8ee9-f8bd-c048-c13f-7a2bef1588c9","fromProperty":"onClick","toId":"a9bd827d-f07f-209a-4a6f-d32298555d92","toProperty":"run"},{"fromId":"2e527c58-1318-d627-8ce8-da6486ce5292","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickAries"},{"fromId":"a99a0a1c-e60a-9f04-a499-4d7525dde984","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickTaurus"},{"fromId":"e532493b-8641-30c5-6108-67f1773c3683","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickGemini"},{"fromId":"ec2724b0-2ebb-db7b-68dc-aca43927aa0a","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickCancer"},{"fromId":"627bcae9-8d94-57e8-573d-8fa09ba6110d","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickLeo"},{"fromId":"30ec5d9a-11f4-b384-45c4-657b41fc3daf","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickVirgo"},{"fromId":"49542c7c-c2ae-0776-3938-cf9b25159e7a","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickLibra"},{"fromId":"77714322-8be5-924c-6f13-4455a56679f3","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickScorpio"},{"fromId":"50ed0f74-9ac2-d9cc-654f-25b2dd09b822","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickSagittarius"},{"fromId":"29f3907c-b5b6-e247-1004-683905a97d97","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickCapricorn"},{"fromId":"a9a22e7b-c745-b67c-679f-bbe88c9d9e6d","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickAquarius"},{"fromId":"a6fd8ee9-f8bd-c048-c13f-7a2bef1588c9","fromProperty":"onClick","toId":"4bc4373b-a401-9bdb-7244-011ec40e209d","toProperty":"in-ClickPisces"}],"roots":[{"id":"c78308ae-75d9-1dce-f5ec-212a100b69a2","type":"NavigationClosePopup","x":489.21530662801274,"y":3870.7688708178302,"parameters":{"closeActions":"Confirmed"},"ports":[],"dynamicports":[{"type":"signal","plug":"input","group":"Close Actions","name":"closeAction-Confirmed","displayName":"Confirmed","index":3}],"children":[]},{"id":"5998e87d-0311-9d0a-1317-cd1a5670fa1e","type":"Group","x":-18,"y":-72,"parameters":{"scrollEnabled":false,"alignX":"center","sizeMode":"explicit","maxHeight":{"value":93,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"3860e59f-9236-9c14-db40-be5b83d5cfc0","type":"Group","label":"Modal","parameters":{"position":"relative","backgroundColor":"Nook Tan","blockTouch":true,"borderRadius":{"value":12,"unit":"px"},"boxShadowBlurRadius":{"value":8,"unit":"px"},"boxShadowSpreadRadius":{"value":0,"unit":"px"},"boxShadowOffsetY":{"value":4,"unit":"px"},"boxShadowColor":"#00000026","maxWidth":{"value":500,"unit":"px"},"minWidth":{"value":50,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"flexDirection":"column","mounted":true,"alignX":"center","alignY":"center","sizeMode":"explicit","scrollEnabled":true,"borderStyle":"solid","borderColor":"Nook Tan Dark"},"ports":[],"dynamicports":[],"children":[{"id":"0aef0836-0f30-cee6-4656-538e27209a42","type":"Group","label":"PlayerName","parameters":{"scrollEnabled":true,"sizeMode":"contentHeight","backgroundColor":"Nook Tan","borderBottomStyle":"solid","borderBottomColor":"Nook Tan Dark","borderTopStyle":"none","borderTopColor":"Nook Tan Dark","borderTopLeftRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3a09d828-e9a5-16ed-0e49-5455223b4ad9","type":"Text","label":"Title","parameters":{"textStyle":"Title Medium","text":"Details","marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"alignX":"center","textAlignX":"center","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"b3c99d77-ec8a-180d-961f-11dc5b7e48ff","type":"net.noodl.controls.textinput","label":"PlayerName","parameters":{"useLabel":false,"textAlignX":"center","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"startValue":"PlayerName","maxLength":10},"ports":[],"dynamicports":[],"children":[]},{"id":"9e706b8c-1f29-ce5e-648c-3711482b311b","type":"net.noodl.controls.textinput","label":"TownName","parameters":{"useLabel":false,"textAlignX":"center","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"startValue":"TownName","maxLength":10},"ports":[],"dynamicports":[],"children":[]},{"id":"e6408dd5-7f3a-72b0-acec-4f87fe78a350","type":"net.noodl.controls.textinput","label":"IslandName","parameters":{"useLabel":false,"textAlignX":"center","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"startValue":"IslandName","marginBottom":{"value":5,"unit":"px"},"maxLength":10},"ports":[],"dynamicports":[],"children":[]}]},{"id":"00ec006a-4d5b-2525-a4c3-242967de6981","type":"Group","label":"Fruit","parameters":{"scrollEnabled":true,"sizeMode":"contentHeight","backgroundColor":"Nook Tan","borderBottomStyle":"solid","borderBottomColor":"Nook Tan Dark"},"ports":[],"dynamicports":[],"children":[{"id":"308d6893-be58-abd8-3562-342e2c426eab","type":"Text","label":"Title","parameters":{"textStyle":"Title Medium","text":"Native Fruit","marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"alignX":"center","textAlignX":"center","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"15aba6e4-02dc-d33c-b960-ec0a8c32dc9d","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"cb4f0cc3-8960-cd76-da77-83b82ba7dd41","type":"Text","label":"Apple","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Apple","fontSize":{"value":12,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"5b479e6e-8d42-6755-78f0-dfbc20453edb","type":"Text","label":"Cherry","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Cherry","textAlignX":"center","fontSize":{"value":12,"unit":"px"},"color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"01f7fe76-cc05-41a0-9dff-53e53fb25b69","type":"Text","label":"Orange","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Orange","fontSize":{"value":12,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"49b72df4-4288-b4fd-e969-12c95e53436e","type":"Text","label":"Peach","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Peach","textAlignX":"center","fontSize":{"value":12,"unit":"px"},"color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"ae5cb09e-aa0d-4c0e-b488-534b6140760b","type":"Text","label":"Pear","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Pear","fontSize":{"value":12,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"708ab21d-0ed3-2223-7c2e-ae485e27fd0a","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"a054dc91-fb26-699b-5778-91c17b33d7ea","type":"Image","label":"apple","parameters":{"src":"images/apple.png","minWidth":{"value":50,"unit":"px"},"maxWidth":{"value":50,"unit":"px"},"minHeight":{"value":50,"unit":"px"},"maxHeight":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"60514316-6c23-0c4b-cb46-06fadcfe96a9","type":"Image","label":"cherry","parameters":{"src":"images/cherry.png","minWidth":{"value":50,"unit":"px"},"maxWidth":{"value":50,"unit":"px"},"minHeight":{"value":50,"unit":"px"},"maxHeight":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"f25e4a1d-2737-281a-3cf7-8d808bf04ece","type":"Image","label":"orange","parameters":{"src":"images/fruit/Orange.png","minWidth":{"value":50,"unit":"px"},"maxWidth":{"value":50,"unit":"px"},"minHeight":{"value":50,"unit":"px"},"maxHeight":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a91caf95-f1bd-9f78-f2ee-60496b65f08b","type":"Image","label":"peach","parameters":{"src":"images/fruit/Peach.png","minWidth":{"value":50,"unit":"px"},"maxWidth":{"value":50,"unit":"px"},"minHeight":{"value":50,"unit":"px"},"maxHeight":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"52f14168-9f9f-e6dd-ab46-d0cbd30d7449","type":"Image","label":"pear","parameters":{"src":"images/fruit/Pear.png","minWidth":{"value":50,"unit":"px"},"maxWidth":{"value":50,"unit":"px"},"minHeight":{"value":50,"unit":"px"},"maxHeight":{"value":50,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"709b2bf5-6ca9-e83a-dd09-1a64ad1dcf05","type":"Group","label":"Star Sign","parameters":{"scrollEnabled":true,"sizeMode":"contentHeight","borderBottomStyle":"solid","borderBottomColor":"Nook Tan Dark"},"ports":[],"dynamicports":[],"children":[{"id":"8ae52095-0b42-b409-6905-2d775a3a15b4","type":"Text","label":"Title","parameters":{"textStyle":"Title Medium","text":"Star Sign","marginRight":{"value":5,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"alignX":"center","textAlignX":"center","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"2a360b1d-2457-a78a-662e-33b91df0c2d4","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"c2e599e5-e4ec-96c6-6526-4716f4d459da","type":"Text","label":"Aries","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Aries","fontSize":{"value":10,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"39bcc992-c1bd-9726-3602-8eec58993e2e","type":"Text","label":"Taurus","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Taurus","textAlignX":"center","fontSize":{"value":10,"unit":"px"},"color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"eb55be3a-ba51-01ae-cf87-421585b98a2b","type":"Text","label":"Gemini","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Gemini","fontSize":{"value":10,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"ce099d68-0a27-22e6-b9f1-ee13a263f7bd","type":"Text","label":"Cancer","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Cancer","textAlignX":"center","fontSize":{"value":10,"unit":"px"},"color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a333afae-30e2-2985-7f55-ef59ff603420","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"2e527c58-1318-d627-8ce8-da6486ce5292","type":"Image","label":"aries","parameters":{"src":"images/zodiac/aries.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a99a0a1c-e60a-9f04-a499-4d7525dde984","type":"Image","label":"taurus","parameters":{"src":"images/zodiac/taurus.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"e532493b-8641-30c5-6108-67f1773c3683","type":"Image","label":"gemini","parameters":{"src":"images/zodiac/gemini.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"ec2724b0-2ebb-db7b-68dc-aca43927aa0a","type":"Image","label":"cancer","parameters":{"src":"images/zodiac/cancer.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6c8ba99d-a618-defa-0a4e-4614a26e78e2","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"6c488845-5b0e-d1f7-7f27-08bca03fda76","type":"Text","label":"Leo","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Leo","fontSize":{"value":10,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"14183a6a-76a3-5d6e-ea9c-d97a4e3fae1e","type":"Text","label":"Virgo","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Virgo","fontSize":{"value":10,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"43a3f47c-7fa0-6d54-a5d0-23840d0000d2","type":"Text","label":"Libra","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Libra","fontSize":{"value":9,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"9fce83a2-dd23-1815-b7ec-fc7c98161e71","type":"Text","label":"Scorpio","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Scorpio","textAlignX":"center","fontSize":{"value":9,"unit":"px"},"color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8ec220dc-e984-85a5-5af0-0a589993340e","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"627bcae9-8d94-57e8-573d-8fa09ba6110d","type":"Image","label":"leo","parameters":{"src":"images/zodiac/leo.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"30ec5d9a-11f4-b384-45c4-657b41fc3daf","type":"Image","label":"virgo","parameters":{"src":"images/zodiac/virgo.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"49542c7c-c2ae-0776-3938-cf9b25159e7a","type":"Image","label":"libra","parameters":{"src":"images/zodiac/libra.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"77714322-8be5-924c-6f13-4455a56679f3","type":"Image","label":"scorpio","parameters":{"src":"images/zodiac/scorpio.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"57a602b5-274b-15b3-098a-66c96ed82564","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"08260ef4-63f5-abba-2fb7-9758ffd8eecd","type":"Text","label":"Sagittarius","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Sagittarius","fontSize":{"value":9,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"b3a2c0c3-cf4c-58f3-ddaa-9526d56538d6","type":"Text","label":"Capricorn","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Capricorn","textAlignX":"center","fontSize":{"value":9,"unit":"px"},"color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"6b9599ef-cfcc-615f-a3dd-80b7fcff2103","type":"Text","label":"Aquarius","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Aquarius","fontSize":{"value":9,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]},{"id":"acfa082b-f73a-e474-d23a-52e27d4ddac2","type":"Text","label":"Pisces","parameters":{"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","text":"Pisces","fontSize":{"value":9,"unit":"px"},"textAlignX":"center","color":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"898a4f4c-66c2-1cdf-11c9-5a75365249cb","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around"},"ports":[],"dynamicports":[],"children":[{"id":"50ed0f74-9ac2-d9cc-654f-25b2dd09b822","type":"Image","label":"sagittarius","parameters":{"src":"images/zodiac/sagittarius.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"29f3907c-b5b6-e247-1004-683905a97d97","type":"Image","label":"capricorn","parameters":{"src":"images/zodiac/capricorn.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a9a22e7b-c745-b67c-679f-bbe88c9d9e6d","type":"Image","label":"aquarius","parameters":{"src":"images/zodiac/aquarius.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a6fd8ee9-f8bd-c048-c13f-7a2bef1588c9","type":"Image","label":"pisces","parameters":{"src":"images/zodiac/pisces.png","minWidth":{"value":40,"unit":"px"},"maxWidth":{"value":40,"unit":"px"},"minHeight":{"value":40,"unit":"px"},"maxHeight":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"f9a48873-5607-0892-5bf1-97f157989fa8","type":"Group","label":"Button section","parameters":{"flexDirection":"row","marginTop":{"value":10,"unit":"px"},"sizeMode":"contentHeight","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"6868cb4a-05a9-37fb-e005-faa3552b9fb6","type":"net.noodl.controls.button","label":"Secondary Button","parameters":{"label":"Close","borderColor":"Primary","borderWidth":{"value":1,"unit":"px"},"backgroundColor":"#9A9A9A","color":"#FFFFFF","marginBottom":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"},"sizeMode":"explicit"},"stateParameters":{"hover":{"borderColor":"Primary Dark"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"1715f2a6-9304-137e-b985-b185c245c205","type":"States","label":"Show animation","x":343.40031396109833,"y":-49.706264051988285,"parameters":{"states":"hide,show","values":"size,opacity","value-hide-size":0,"value-show-size":1,"value-hide-opacity":0,"value-show-opacity":1,"currentState":"hide","transitiondef-hide":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"transitiondef-show":{"curve":[0,0,0.58,1],"dur":150,"delay":0}},"ports":[],"dynamicports":[{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"size","index":6},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"size","name":"type-size","index":7},{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"opacity","index":8},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"opacity","name":"type-opacity","index":9},{"plug":"input","type":"number","group":"hide Values","name":"value-hide-size","displayName":"size","editorName":"hide|size","index":10},{"plug":"input","type":"number","group":"hide Values","name":"value-hide-opacity","displayName":"opacity","editorName":"hide|opacity","index":11},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"hide Transitions","name":"transitiondef-hide","index":12},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"hide Transitions","name":"transition-hide-size","displayName":"size","editorName":"Transition hide|size","index":13},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"hide Transitions","name":"transition-hide-opacity","displayName":"opacity","editorName":"Transition hide|opacity","index":14},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To hide","name":"to-hide","group":"Go to state","index":15},{"plug":"output","type":"boolean","displayName":"At hide","name":"at-hide","group":"Current state","index":16},{"plug":"output","type":"signal","displayName":"Has Reached hide","name":"reached-hide","group":"Current state","index":17},{"plug":"input","type":"number","group":"show Values","name":"value-show-size","displayName":"size","editorName":"show|size","index":18},{"plug":"input","type":"number","group":"show Values","name":"value-show-opacity","displayName":"opacity","editorName":"show|opacity","index":19},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"show Transitions","name":"transitiondef-show","index":20},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"show Transitions","name":"transition-show-size","displayName":"size","editorName":"Transition show|size","index":21},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"show Transitions","name":"transition-show-opacity","displayName":"opacity","editorName":"Transition show|opacity","index":22},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To show","name":"to-show","group":"Go to state","index":23},{"plug":"output","type":"boolean","displayName":"At show","name":"at-show","group":"Current state","index":24},{"plug":"output","type":"signal","displayName":"Has Reached show","name":"reached-show","group":"Current state","index":25},{"plug":"input","type":{"name":"enum","enums":["hide","show"]},"group":"States","displayName":"State","name":"currentState","default":"hide","index":26}],"children":[]},{"id":"b84e1fbf-49ec-7d0a-c151-121e0edc8d36","type":"JavaScriptFunction","x":-329,"y":332,"parameters":{"functionScript":"function loadTownAndPlayerName() {\r\n    try {\r\n        // Retrieve townname, playername, and islandname from local storage\r\n        const townName = localStorage.getItem('townname');\r\n        const playerName = localStorage.getItem('playername');\r\n        const islandName = localStorage.getItem('islandname');\r\n\r\n        // Set outputs based on the retrieved values or provide default values\r\n        Outputs.TownName = townName || 'TownName';\r\n        Outputs.PlayerName = playerName || 'PlayerName';\r\n        Outputs.IslandName = islandName || 'IslandName';\r\n\r\n        Outputs.Success();\r\n    } catch (error) {\r\n        Outputs.error = error;\r\n        Outputs.Failure();\r\n    }\r\n}\r\n\r\n// Call the function to load and output the townname, playername, and islandname\r\nloadTownAndPlayerName();\r\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-TownName","displayName":"TownName","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-PlayerName","displayName":"PlayerName","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-IslandName","displayName":"IslandName","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":9}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"8e12aa53-348f-dfdd-0667-e0e2ca78afd3","type":"JavaScriptFunction","x":566,"y":356,"parameters":{"functionScript":"function saveTownPlayerAndIslandName() {\r\n    try {\r\n        // Retrieve inputs for townname, playername, and islandname\r\n        const townName = Inputs.TownName || '';\r\n        const playerName = Inputs.PlayerName || '';\r\n        const islandName = Inputs.IslandName || '';\r\n\r\n        // Save each input to local storage\r\n        if (townName) {\r\n            localStorage.setItem('townname', townName);\r\n        }\r\n        \r\n        if (playerName) {\r\n            localStorage.setItem('playername', playerName);\r\n        }\r\n        \r\n        if (islandName) {\r\n            localStorage.setItem('islandname', islandName);\r\n        }\r\n\r\n        Outputs.Success();\r\n    } catch (error) {\r\n        Outputs.error = error;\r\n        Outputs.Failure();\r\n    }\r\n}\r\n\r\n// Call the function to save the townname, playername, and islandname\r\nsaveTownPlayerAndIslandName();\r\n"},"ports":[],"dynamicports":[{"name":"in-TownName","displayName":"TownName","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-PlayerName","displayName":"PlayerName","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-IslandName","displayName":"IslandName","plug":"input","type":"*","group":"Inputs","index":6},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":9}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"e4beb764-e38c-41ac-118f-6d64256fd295","type":"Variable2","x":296,"y":276,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"eef5b33f-1289-bc02-e834-51eafa67d4da","type":"Variable2","x":304,"y":392,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"27d2b1c2-3522-ada7-baff-8a7e35cf3814","type":"Variable2","x":314,"y":496,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"024ae6ea-045a-46ec-2fc6-0d1469ce8fa0","type":"JavaScriptFunction","x":445,"y":861,"parameters":{"functionScript":"const appleAvatar = 'images/fruit/apple_stamp.png';\r\nconst cherryAvatar = '/images/fruit/cherry_stamp.png';\r\nconst orangeAvatar = '/images/fruit/orange_stamp.png';\r\nconst peachAvatar = '/images/fruit/peach_stamp.png';\r\nconst pearAvatar = '/images/fruit/pear_stamp.png';\r\n\r\n// Function to handle setting nativefruit in local storage\r\nfunction handleSetNativeFruit(fruitAvatar) {\r\n    try {\r\n        // Set nativefruit with the selected fruit avatar in local storage\r\n        localStorage.setItem('nativefruit', fruitAvatar);\r\n        Outputs.Success();\r\n    } catch (error) {\r\n        Outputs.error = error;\r\n        Outputs.Failure();\r\n    }\r\n}\r\n\r\n// Listen for the ClickApple input\r\nif (Inputs.ClickApple) {\r\n    handleSetNativeFruit(appleAvatar);\r\n}\r\n\r\n// Listen for the ClickCherry input\r\nif (Inputs.ClickCherry) {\r\n    handleSetNativeFruit(cherryAvatar);\r\n}\r\n\r\n// Listen for the ClickOrange input\r\nif (Inputs.ClickOrange) {\r\n    handleSetNativeFruit(orangeAvatar);\r\n}\r\n\r\n// Listen for the ClickPeach input\r\nif (Inputs.ClickPeach) {\r\n    handleSetNativeFruit(peachAvatar);\r\n}\r\n\r\n// Listen for the ClickPear input\r\nif (Inputs.ClickPear) {\r\n    handleSetNativeFruit(pearAvatar);\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ClickApple","displayName":"ClickApple","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-ClickCherry","displayName":"ClickCherry","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-ClickOrange","displayName":"ClickOrange","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-ClickPeach","displayName":"ClickPeach","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-ClickPear","displayName":"ClickPear","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":11}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"a9bd827d-f07f-209a-4a6f-d32298555d92","type":"JavaScriptFunction","label":"Play Audio File","x":-827.1128295720831,"y":2532.4193176135714,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4bc4373b-a401-9bdb-7244-011ec40e209d","type":"JavaScriptFunction","x":869.8673455599653,"y":2731.4693822398604,"parameters":{"functionScript":"const ariesAvatar = 'images/zodiac/aries.png';\r\nconst taurusAvatar = 'images/zodiac/taurus.png';\r\nconst geminiAvatar = 'images/zodiac/gemini.png';\r\nconst cancerAvatar = 'images/zodiac/cancer.png';\r\nconst leoAvatar = 'images/zodiac/leo.png';\r\nconst virgoAvatar = 'images/zodiac/virgo.png';\r\nconst libraAvatar = 'images/zodiac/libra.png';\r\nconst scorpioAvatar = 'images/zodiac/scorpio.png';\r\nconst sagittariusAvatar = 'images/zodiac/sagittarius.png';\r\nconst capricornAvatar = 'images/zodiac/capricorn.png';\r\nconst aquariusAvatar = 'images/zodiac/aquarius.png';\r\nconst piscesAvatar = 'images/zodiac/pisces.png';\r\n\r\n// Function to handle setting zodiac sign in local storage\r\nfunction handleSetZodiacSign(zodiacAvatar) {\r\n    try {\r\n        // Set zodiacSign with the selected zodiac avatar in local storage\r\n        localStorage.setItem('zodiacSign', zodiacAvatar);\r\n        Outputs.Success();\r\n    } catch (error) {\r\n        Outputs.error = error;\r\n        Outputs.Failure();\r\n    }\r\n}\r\n\r\n// Listen for the ClickAries input\r\nif (Inputs.ClickAries) {\r\n    handleSetZodiacSign(ariesAvatar);\r\n}\r\n\r\n// Listen for the ClickTaurus input\r\nif (Inputs.ClickTaurus) {\r\n    handleSetZodiacSign(taurusAvatar);\r\n}\r\n\r\n// Listen for the ClickGemini input\r\nif (Inputs.ClickGemini) {\r\n    handleSetZodiacSign(geminiAvatar);\r\n}\r\n\r\n// Listen for the ClickCancer input\r\nif (Inputs.ClickCancer) {\r\n    handleSetZodiacSign(cancerAvatar);\r\n}\r\n\r\n// Listen for the ClickLeo input\r\nif (Inputs.ClickLeo) {\r\n    handleSetZodiacSign(leoAvatar);\r\n}\r\n\r\n// Listen for the ClickVirgo input\r\nif (Inputs.ClickVirgo) {\r\n    handleSetZodiacSign(virgoAvatar);\r\n}\r\n\r\n// Listen for the ClickLibra input\r\nif (Inputs.ClickLibra) {\r\n    handleSetZodiacSign(libraAvatar);\r\n}\r\n\r\n// Listen for the ClickScorpio input\r\nif (Inputs.ClickScorpio) {\r\n    handleSetZodiacSign(scorpioAvatar);\r\n}\r\n\r\n// Listen for the ClickSagittarius input\r\nif (Inputs.ClickSagittarius) {\r\n    handleSetZodiacSign(sagittariusAvatar);\r\n}\r\n\r\n// Listen for the ClickCapricorn input\r\nif (Inputs.ClickCapricorn) {\r\n    handleSetZodiacSign(capricornAvatar);\r\n}\r\n\r\n// Listen for the ClickAquarius input\r\nif (Inputs.ClickAquarius) {\r\n    handleSetZodiacSign(aquariusAvatar);\r\n}\r\n\r\n// Listen for the ClickPisces input\r\nif (Inputs.ClickPisces) {\r\n    handleSetZodiacSign(piscesAvatar);\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ClickAries","displayName":"ClickAries","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-ClickTaurus","displayName":"ClickTaurus","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-ClickGemini","displayName":"ClickGemini","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-ClickCancer","displayName":"ClickCancer","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-ClickLeo","displayName":"ClickLeo","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-ClickVirgo","displayName":"ClickVirgo","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-ClickLibra","displayName":"ClickLibra","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-ClickScorpio","displayName":"ClickScorpio","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-ClickSagittarius","displayName":"ClickSagittarius","plug":"input","type":"*","group":"Inputs","index":12},{"name":"in-ClickCapricorn","displayName":"ClickCapricorn","plug":"input","type":"*","group":"Inputs","index":13},{"name":"in-ClickAquarius","displayName":"ClickAquarius","plug":"input","type":"*","group":"Inputs","index":14},{"name":"in-ClickPisces","displayName":"ClickPisces","plug":"input","type":"*","group":"Inputs","index":15},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":16},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":17},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":18}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["5998e87d-0311-9d0a-1317-cd1a5670fa1e"]}},{"name":"/Collection Pages/Passport/Fish Progress Circle","id":"8030eba0-a716-9117-10b2-f80137bfba77","graph":{"connections":[{"fromId":"2d530bf1-832c-bb4c-dcc4-3b1031086315","fromProperty":"formatted","toId":"eec18293-1f60-b430-af2b-2470673e069b","toProperty":"text"},{"fromId":"a5b66f3a-5c21-cf61-bd55-8c10d4e90c22","fromProperty":"remappedValue","toId":"8d7220a9-d029-ae9d-a7de-ae2eba9b8e39","toProperty":"mounted"},{"fromId":"a5b66f3a-5c21-cf61-bd55-8c10d4e90c22","fromProperty":"remappedValue","toId":"688408d6-466d-af46-f732-adad767372db","toProperty":"Value in procentage"},{"fromId":"a5b66f3a-5c21-cf61-bd55-8c10d4e90c22","fromProperty":"remappedValue","toId":"23560bb6-f64b-8218-093f-5d2d57a2ca7d","toProperty":"inputValue"},{"fromId":"a5b66f3a-5c21-cf61-bd55-8c10d4e90c22","fromProperty":"remappedValue","toId":"234d601a-8d31-7602-415b-73bce9002900","toProperty":"val"},{"fromId":"e5794f44-55b2-c9ba-6b1e-a987dbaa8b68","fromProperty":"currentValue","toId":"8d7220a9-d029-ae9d-a7de-ae2eba9b8e39","toProperty":"endAngle"},{"fromId":"23560bb6-f64b-8218-093f-5d2d57a2ca7d","fromProperty":"remappedValue","toId":"e5794f44-55b2-c9ba-6b1e-a987dbaa8b68","toProperty":"targetValue"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Margin Left","toId":"a9a624fa-7316-4ef2-2976-84f00716f669","toProperty":"marginLeft"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Margin Top","toId":"a9a624fa-7316-4ef2-2976-84f00716f669","toProperty":"marginTop"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Margin Bottom","toId":"a9a624fa-7316-4ef2-2976-84f00716f669","toProperty":"marginBottom"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Margin Right","toId":"a9a624fa-7316-4ef2-2976-84f00716f669","toProperty":"marginRight"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Align X","toId":"a9a624fa-7316-4ef2-2976-84f00716f669","toProperty":"alignX"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Align Y","toId":"a9a624fa-7316-4ef2-2976-84f00716f669","toProperty":"alignY"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Position","toId":"a9a624fa-7316-4ef2-2976-84f00716f669","toProperty":"position"},{"fromId":"e5794f44-55b2-c9ba-6b1e-a987dbaa8b68","fromProperty":"atTargetValue","toId":"688408d6-466d-af46-f732-adad767372db","toProperty":"At animation done"},{"fromId":"c2cbe22b-eb31-017a-9274-ccf235086205","fromProperty":"Animation Duration","toId":"e5794f44-55b2-c9ba-6b1e-a987dbaa8b68","toProperty":"duration"},{"fromId":"234d601a-8d31-7602-415b-73bce9002900","fromProperty":"result","toId":"2d530bf1-832c-bb4c-dcc4-3b1031086315","toProperty":"val"},{"fromId":"4a97744b-9422-ff31-d1d7-e394c3053893","fromProperty":"out-TotalBugs","toId":"a5b66f3a-5c21-cf61-bd55-8c10d4e90c22","toProperty":"inputValue"},{"fromId":"88afbd1c-eb39-b998-2979-1add041dd9cc","fromProperty":"onClick","toId":"1acd27e7-ec2e-e462-e659-be69516a865a","toProperty":"navigate"},{"fromId":"88afbd1c-eb39-b998-2979-1add041dd9cc","fromProperty":"onClick","toId":"079dae07-90d6-22f9-9c87-89c30c9071ff","toProperty":"run"}],"roots":[{"id":"a9a624fa-7316-4ef2-2976-84f00716f669","type":"Group","label":"Progress Circle","x":0,"y":0,"parameters":{"sizeMode":"contentSize"},"ports":[],"dynamicports":[],"children":[{"id":"297213da-f454-dd21-aa3b-5b0f205cfa61","type":"Circle","label":"Inactive Circle","parameters":{"size":128,"strokeWidth":8,"fillEnabled":false,"strokeEnabled":true,"strokeColor":"#ebe5ce","fillColor":"#ebe5ce"},"ports":[],"dynamicports":[],"children":[]},{"id":"8d7220a9-d029-ae9d-a7de-ae2eba9b8e39","type":"Circle","label":"Active Circle","parameters":{"size":128,"strokeWidth":8,"position":"absolute","fillEnabled":false,"strokeColor":"#5961e1","strokeLineCap":"round","strokeEnabled":true,"endAngle":0,"fillColor":"#5961e1"},"ports":[],"dynamicports":[],"children":[]},{"id":"88afbd1c-eb39-b998-2979-1add041dd9cc","type":"Group","label":"Text","parameters":{"position":"absolute"},"ports":[],"dynamicports":[],"children":[{"id":"c13b82e7-1db7-2da2-0b5a-116f4c999a13","type":"Image","parameters":{"src":"images/museum/museum_fish.png","minWidth":{"value":112,"unit":"px"},"maxWidth":{"value":112,"unit":"px"},"minHeight":{"value":112,"unit":"px"},"maxHeight":{"value":112,"unit":"px"},"position":"absolute","borderRadius":{"value":200,"unit":"px"},"alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ab6dd93f-9aeb-b05f-fd80-a510c4365f38","type":"Group","label":"Text","parameters":{"sizeMode":"contentSize","position":"absolute","alignX":"center","marginTop":{"value":20,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"eec18293-1f60-b430-af2b-2470673e069b","type":"Text","parameters":{"textStyle":"Label Large","text":"99%","color":"Nook Text","lineHeight":{"value":1,"unit":""},"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","textAlignX":"center","fontSize":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"a5b66f3a-5c21-cf61-bd55-8c10d4e90c22","type":"Number Remapper","label":"Value in procentage","x":-227.3994727841646,"y":750.9582554671847,"parameters":{"maxOutputValue":100,"maxInputValue":40},"ports":[],"dynamicports":[],"children":[]},{"id":"c2cbe22b-eb31-017a-9274-ccf235086205","type":"Component Inputs","x":-661.0736952429797,"y":83.9693738962768,"parameters":{},"ports":[{"name":"Value","plug":"output","type":{"name":"*"},"index":0},{"name":"Min Value","plug":"output","type":{"name":"*"},"index":1},{"name":"Max Value","plug":"output","type":{"name":"*"},"index":2},{"name":"Margin Left","plug":"output","type":{"name":"*"},"group":"Margin","index":4},{"name":"Margin Top","plug":"output","type":{"name":"*"},"group":"Margin","index":5},{"name":"Margin Bottom","plug":"output","type":{"name":"*"},"group":"Margin","index":6},{"name":"Margin Right","plug":"output","type":{"name":"*"},"group":"Margin","index":7},{"name":"Align X","plug":"output","type":{"name":"*"},"group":"Alignment","index":8},{"name":"Align Y","plug":"output","type":{"name":"*"},"group":"Alignment","index":9},{"name":"Position","plug":"output","type":{"name":"*"},"group":"Position","index":10},{"name":"Animation Duration","plug":"output","type":{"name":"*"},"index":3}],"dynamicports":[],"children":[]},{"id":"2d530bf1-832c-bb4c-dcc4-3b1031086315","type":"String Format","x":-228.25577158769153,"y":512.5397884639392,"parameters":{"format":"{val}%"},"ports":[],"dynamicports":[{"name":"val","type":"string","plug":"input","index":2}],"children":[]},{"id":"688408d6-466d-af46-f732-adad767372db","type":"Component Outputs","x":48.24089911087907,"y":818.8381288895145,"parameters":{},"ports":[{"name":"Value in procentage","plug":"input","type":{"name":"*"},"index":1},{"name":"At animation done","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"23560bb6-f64b-8218-093f-5d2d57a2ca7d","type":"Number Remapper","label":"Value in Degrees","x":49.555265376773605,"y":686.5108910120125,"parameters":{"maxInputValue":100,"maxOutputValue":360},"ports":[],"dynamicports":[],"children":[]},{"id":"234d601a-8d31-7602-415b-73bce9002900","type":"Expression","x":-684,"y":558,"parameters":{"expression":"Math.round(val)"},"ports":[],"dynamicports":[{"group":"Parameters","name":"val","type":{"name":"*","editAsType":"string"},"plug":"input","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["expression"]}}},{"id":"e5794f44-55b2-c9ba-6b1e-a987dbaa8b68","type":"net.noodl.animatetovalue","x":308.67523046801034,"y":567.7875143542458,"parameters":{"duration":300},"ports":[],"dynamicports":[],"children":[]},{"id":"4a97744b-9422-ff31-d1d7-e394c3053893","type":"JavaScriptFunction","label":"Calculate Total Bugs","x":-693,"y":402,"parameters":{"functionScript":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('fish-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count);\nOutputs.TotalBugs = totalBugs;\n"},"ports":[],"dynamicports":[{"name":"out-TotalBugs","displayName":"TotalBugs","plug":"output","type":"*","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Count total of keys starting with \"bugs-\" in localstorage, divide by 40, rounded to nearest whole number, output \"totalbugs\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('bugs-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count / 40);\nOutputs.TotalBugs = totalBugs;\n"},"snowflakeId":"019177137eaa-casd9p","type":"user"},{"type":"assistant","content":"\nThis function calculates the total number of keys in the local storage that start with \"bugs-\", divides that number by 40, and rounds it to the nearest whole number. \n\nIt iterates over all keys in the local storage, and for each key that starts with \"bugs-\", it increments a counter. \n\nAfter going through all the keys, it divides the counter by 40 and rounds the result to the nearest whole number. \n\nThe final result is outputted as <span style=\"color: var(--base-color-yellow-400);\">Outputs.TotalBugs</span>.\n","snowflakeId":"019177138f41-mzh77j","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"1acd27e7-ec2e-e462-e659-be69516a865a","type":"RouterNavigate","x":251,"y":372,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"079dae07-90d6-22f9-9c87-89c30c9071ff","type":"JavaScriptFunction","label":"Play Audio File","x":258,"y":245,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["a9a624fa-7316-4ef2-2976-84f00716f669"]}},{"name":"/Collection Pages/Passport/Fossil Progress Circle","id":"30b9484f-a4e8-4302-3c17-2897df2b5396","graph":{"connections":[{"fromId":"52f85cfc-c0b1-42e7-4192-92248c6fc5c6","fromProperty":"formatted","toId":"232d2ac6-57bd-20ca-fcef-08a1e0d9a3e7","toProperty":"text"},{"fromId":"a4d4ec42-b3d4-cce8-052a-3e9130ed49f7","fromProperty":"remappedValue","toId":"72821468-97a9-1103-b188-e31a28f4d8b9","toProperty":"mounted"},{"fromId":"a4d4ec42-b3d4-cce8-052a-3e9130ed49f7","fromProperty":"remappedValue","toId":"67901eb7-cb4d-6a2d-0f03-1ba3ba8f190c","toProperty":"Value in procentage"},{"fromId":"a4d4ec42-b3d4-cce8-052a-3e9130ed49f7","fromProperty":"remappedValue","toId":"51c51e8d-488e-88c5-4320-e84976b0aa88","toProperty":"inputValue"},{"fromId":"a4d4ec42-b3d4-cce8-052a-3e9130ed49f7","fromProperty":"remappedValue","toId":"bc28c841-7e51-4030-cf43-892317c57570","toProperty":"val"},{"fromId":"bdfe4707-b4ed-de23-067f-6a35b9d0108e","fromProperty":"currentValue","toId":"72821468-97a9-1103-b188-e31a28f4d8b9","toProperty":"endAngle"},{"fromId":"51c51e8d-488e-88c5-4320-e84976b0aa88","fromProperty":"remappedValue","toId":"bdfe4707-b4ed-de23-067f-6a35b9d0108e","toProperty":"targetValue"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Margin Left","toId":"f26625ae-571b-cff2-3a5b-3916023aba35","toProperty":"marginLeft"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Margin Top","toId":"f26625ae-571b-cff2-3a5b-3916023aba35","toProperty":"marginTop"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Margin Bottom","toId":"f26625ae-571b-cff2-3a5b-3916023aba35","toProperty":"marginBottom"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Margin Right","toId":"f26625ae-571b-cff2-3a5b-3916023aba35","toProperty":"marginRight"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Align X","toId":"f26625ae-571b-cff2-3a5b-3916023aba35","toProperty":"alignX"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Align Y","toId":"f26625ae-571b-cff2-3a5b-3916023aba35","toProperty":"alignY"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Position","toId":"f26625ae-571b-cff2-3a5b-3916023aba35","toProperty":"position"},{"fromId":"bdfe4707-b4ed-de23-067f-6a35b9d0108e","fromProperty":"atTargetValue","toId":"67901eb7-cb4d-6a2d-0f03-1ba3ba8f190c","toProperty":"At animation done"},{"fromId":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","fromProperty":"Animation Duration","toId":"bdfe4707-b4ed-de23-067f-6a35b9d0108e","toProperty":"duration"},{"fromId":"bc28c841-7e51-4030-cf43-892317c57570","fromProperty":"result","toId":"52f85cfc-c0b1-42e7-4192-92248c6fc5c6","toProperty":"val"},{"fromId":"fe1f1df6-1af1-ddf8-12f4-9d72ac2a3bee","fromProperty":"out-TotalBugs","toId":"a4d4ec42-b3d4-cce8-052a-3e9130ed49f7","toProperty":"inputValue"},{"fromId":"c5530dfa-f419-a9f8-69c6-e0b7dc85a405","fromProperty":"onClick","toId":"d6a8c828-18c1-5a04-9e89-876ce8975e6d","toProperty":"navigate"},{"fromId":"c5530dfa-f419-a9f8-69c6-e0b7dc85a405","fromProperty":"onClick","toId":"27323e48-c303-ad89-4a48-e9478561f0e3","toProperty":"run"}],"roots":[{"id":"f26625ae-571b-cff2-3a5b-3916023aba35","type":"Group","label":"Progress Circle","x":0,"y":0,"parameters":{"sizeMode":"contentSize"},"ports":[],"dynamicports":[],"children":[{"id":"fc432b8c-fc53-ab4f-c1ea-8e19b18b4358","type":"Circle","label":"Inactive Circle","parameters":{"size":128,"strokeWidth":8,"fillEnabled":false,"strokeEnabled":true,"strokeColor":"#ebe5ce","fillColor":"#ebe5ce"},"ports":[],"dynamicports":[],"children":[]},{"id":"72821468-97a9-1103-b188-e31a28f4d8b9","type":"Circle","label":"Active Circle","parameters":{"size":128,"strokeWidth":8,"position":"absolute","fillEnabled":false,"strokeColor":"#5961e1","strokeLineCap":"round","strokeEnabled":true,"endAngle":0,"fillColor":"#5961e1"},"ports":[],"dynamicports":[],"children":[]},{"id":"c5530dfa-f419-a9f8-69c6-e0b7dc85a405","type":"Group","label":"Text","parameters":{"position":"absolute"},"ports":[],"dynamicports":[],"children":[{"id":"3d8e55a2-983e-b1a1-0313-1671d26dc5ba","type":"Image","parameters":{"src":"images/museum/museum_fossils.png","minWidth":{"value":112,"unit":"px"},"maxWidth":{"value":112,"unit":"px"},"minHeight":{"value":112,"unit":"px"},"maxHeight":{"value":112,"unit":"px"},"position":"absolute","borderRadius":{"value":200,"unit":"px"},"alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e1e797bb-b94d-5b47-ac6a-a5ab1326bae2","type":"Group","label":"Text","parameters":{"sizeMode":"contentSize","position":"absolute","alignX":"center","marginTop":{"value":20,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"232d2ac6-57bd-20ca-fcef-08a1e0d9a3e7","type":"Text","parameters":{"textStyle":"Label Large","text":"99%","color":"Nook Text","lineHeight":{"value":1,"unit":""},"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","textAlignX":"center","fontSize":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"a4d4ec42-b3d4-cce8-052a-3e9130ed49f7","type":"Number Remapper","label":"Value in procentage","x":-227.3994727841646,"y":750.9582554671847,"parameters":{"maxOutputValue":100,"maxInputValue":40},"ports":[],"dynamicports":[],"children":[]},{"id":"ce6baf2c-4823-4ae9-b8f8-d05e3782b573","type":"Component Inputs","x":-661.0736952429797,"y":83.9693738962768,"parameters":{},"ports":[{"name":"Value","plug":"output","type":{"name":"*"},"index":0},{"name":"Min Value","plug":"output","type":{"name":"*"},"index":1},{"name":"Max Value","plug":"output","type":{"name":"*"},"index":2},{"name":"Margin Left","plug":"output","type":{"name":"*"},"group":"Margin","index":4},{"name":"Margin Top","plug":"output","type":{"name":"*"},"group":"Margin","index":5},{"name":"Margin Bottom","plug":"output","type":{"name":"*"},"group":"Margin","index":6},{"name":"Margin Right","plug":"output","type":{"name":"*"},"group":"Margin","index":7},{"name":"Align X","plug":"output","type":{"name":"*"},"group":"Alignment","index":8},{"name":"Align Y","plug":"output","type":{"name":"*"},"group":"Alignment","index":9},{"name":"Position","plug":"output","type":{"name":"*"},"group":"Position","index":10},{"name":"Animation Duration","plug":"output","type":{"name":"*"},"index":3}],"dynamicports":[],"children":[]},{"id":"52f85cfc-c0b1-42e7-4192-92248c6fc5c6","type":"String Format","x":-228.25577158769153,"y":512.5397884639392,"parameters":{"format":"{val}%"},"ports":[],"dynamicports":[{"name":"val","type":"string","plug":"input","index":2}],"children":[]},{"id":"67901eb7-cb4d-6a2d-0f03-1ba3ba8f190c","type":"Component Outputs","x":48.24089911087907,"y":818.8381288895145,"parameters":{},"ports":[{"name":"Value in procentage","plug":"input","type":{"name":"*"},"index":1},{"name":"At animation done","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"51c51e8d-488e-88c5-4320-e84976b0aa88","type":"Number Remapper","label":"Value in Degrees","x":49.555265376773605,"y":686.5108910120125,"parameters":{"maxInputValue":100,"maxOutputValue":360},"ports":[],"dynamicports":[],"children":[]},{"id":"bc28c841-7e51-4030-cf43-892317c57570","type":"Expression","x":-684,"y":558,"parameters":{"expression":"Math.round(val)"},"ports":[],"dynamicports":[{"group":"Parameters","name":"val","type":{"name":"*","editAsType":"string"},"plug":"input","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["expression"]}}},{"id":"bdfe4707-b4ed-de23-067f-6a35b9d0108e","type":"net.noodl.animatetovalue","x":308.67523046801034,"y":567.7875143542458,"parameters":{"duration":300},"ports":[],"dynamicports":[],"children":[]},{"id":"fe1f1df6-1af1-ddf8-12f4-9d72ac2a3bee","type":"JavaScriptFunction","label":"Calculate Total Bugs","x":-693,"y":402,"parameters":{"functionScript":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('fossil-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count);\nOutputs.TotalBugs = totalBugs;\n"},"ports":[],"dynamicports":[{"name":"out-TotalBugs","displayName":"TotalBugs","plug":"output","type":"*","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Count total of keys starting with \"bugs-\" in localstorage, divide by 40, rounded to nearest whole number, output \"totalbugs\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('bugs-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count / 40);\nOutputs.TotalBugs = totalBugs;\n"},"snowflakeId":"019177137eaa-casd9p","type":"user"},{"type":"assistant","content":"\nThis function calculates the total number of keys in the local storage that start with \"bugs-\", divides that number by 40, and rounds it to the nearest whole number. \n\nIt iterates over all keys in the local storage, and for each key that starts with \"bugs-\", it increments a counter. \n\nAfter going through all the keys, it divides the counter by 40 and rounds the result to the nearest whole number. \n\nThe final result is outputted as <span style=\"color: var(--base-color-yellow-400);\">Outputs.TotalBugs</span>.\n","snowflakeId":"019177138f41-mzh77j","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d6a8c828-18c1-5a04-9e89-876ce8975e6d","type":"RouterNavigate","x":307,"y":416,"parameters":{"router":"Main","target":"/Collection Pages/Fossils/Fossils"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"27323e48-c303-ad89-4a48-e9478561f0e3","type":"JavaScriptFunction","label":"Play Audio File","x":306,"y":274,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["f26625ae-571b-cff2-3a5b-3916023aba35"]}},{"name":"/Collection Pages/Passport/Painting Progress Circle","id":"c07dfd06-a96e-669a-296a-ffdbeb01245d","graph":{"connections":[{"fromId":"704c3ff5-3ebc-e3eb-80b3-531e92122c25","fromProperty":"formatted","toId":"f1c0d8f4-945b-2a37-2fc5-b76d0ef46880","toProperty":"text"},{"fromId":"46769708-7423-7872-551d-5e55eec90fb1","fromProperty":"remappedValue","toId":"00bf78ca-aeae-93a3-8552-3d4780a9f509","toProperty":"mounted"},{"fromId":"46769708-7423-7872-551d-5e55eec90fb1","fromProperty":"remappedValue","toId":"5234e600-c950-9fad-a696-1163caf77340","toProperty":"Value in procentage"},{"fromId":"46769708-7423-7872-551d-5e55eec90fb1","fromProperty":"remappedValue","toId":"bf5ad68e-84ae-c7f1-231b-32f4bb4c1a87","toProperty":"inputValue"},{"fromId":"46769708-7423-7872-551d-5e55eec90fb1","fromProperty":"remappedValue","toId":"8909b83d-18d4-cf70-02c8-7c315acdc725","toProperty":"val"},{"fromId":"7bfb9443-8a38-ba06-4a46-ae533829282b","fromProperty":"currentValue","toId":"00bf78ca-aeae-93a3-8552-3d4780a9f509","toProperty":"endAngle"},{"fromId":"bf5ad68e-84ae-c7f1-231b-32f4bb4c1a87","fromProperty":"remappedValue","toId":"7bfb9443-8a38-ba06-4a46-ae533829282b","toProperty":"targetValue"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Margin Left","toId":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","toProperty":"marginLeft"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Margin Top","toId":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","toProperty":"marginTop"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Margin Bottom","toId":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","toProperty":"marginBottom"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Margin Right","toId":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","toProperty":"marginRight"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Align X","toId":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","toProperty":"alignX"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Align Y","toId":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","toProperty":"alignY"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Position","toId":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","toProperty":"position"},{"fromId":"7bfb9443-8a38-ba06-4a46-ae533829282b","fromProperty":"atTargetValue","toId":"5234e600-c950-9fad-a696-1163caf77340","toProperty":"At animation done"},{"fromId":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","fromProperty":"Animation Duration","toId":"7bfb9443-8a38-ba06-4a46-ae533829282b","toProperty":"duration"},{"fromId":"8909b83d-18d4-cf70-02c8-7c315acdc725","fromProperty":"result","toId":"704c3ff5-3ebc-e3eb-80b3-531e92122c25","toProperty":"val"},{"fromId":"b9d1d40b-75b1-b101-ffdc-516f57aa87b5","fromProperty":"out-TotalBugs","toId":"46769708-7423-7872-551d-5e55eec90fb1","toProperty":"inputValue"},{"fromId":"55663cb6-384a-1bcc-8a08-8005c215b84a","fromProperty":"onClick","toId":"3ac10e48-6548-f718-f5dc-1ac3d90290e8","toProperty":"navigate"},{"fromId":"55663cb6-384a-1bcc-8a08-8005c215b84a","fromProperty":"onClick","toId":"0c92bfe9-18fd-4a07-75b6-166038ee6fe3","toProperty":"run"}],"roots":[{"id":"edf2886e-a1e0-66bb-4afe-bc134bc532d9","type":"Group","label":"Progress Circle","x":0,"y":0,"parameters":{"sizeMode":"contentSize"},"ports":[],"dynamicports":[],"children":[{"id":"ff5096ae-cb16-d1d9-29d7-a17c09630a3d","type":"Circle","label":"Inactive Circle","parameters":{"size":128,"strokeWidth":8,"fillEnabled":false,"strokeEnabled":true,"strokeColor":"#ebe5ce","fillColor":"#ebe5ce"},"ports":[],"dynamicports":[],"children":[]},{"id":"00bf78ca-aeae-93a3-8552-3d4780a9f509","type":"Circle","label":"Active Circle","parameters":{"size":128,"strokeWidth":8,"position":"absolute","fillEnabled":false,"strokeColor":"#5961e1","strokeLineCap":"round","strokeEnabled":true,"endAngle":0,"fillColor":"#5961e1"},"ports":[],"dynamicports":[],"children":[]},{"id":"55663cb6-384a-1bcc-8a08-8005c215b84a","type":"Group","label":"Text","parameters":{"position":"absolute"},"ports":[],"dynamicports":[],"children":[{"id":"a5245cde-ceae-3067-8ac0-97b9b52d81f5","type":"Image","parameters":{"src":"images/museum/museum_paintings.png","minWidth":{"value":112,"unit":"px"},"maxWidth":{"value":112,"unit":"px"},"minHeight":{"value":112,"unit":"px"},"maxHeight":{"value":112,"unit":"px"},"position":"absolute","borderRadius":{"value":200,"unit":"px"},"alignX":"center","alignY":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"0f282176-5ba9-10dc-da84-95448fcf0b4a","type":"Group","label":"Text","parameters":{"sizeMode":"contentSize","position":"absolute","alignX":"center","marginTop":{"value":20,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"f1c0d8f4-945b-2a37-2fc5-b76d0ef46880","type":"Text","parameters":{"textStyle":"Label Large","text":"99%","color":"Nook Text","lineHeight":{"value":1,"unit":""},"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","textAlignX":"center","fontSize":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"46769708-7423-7872-551d-5e55eec90fb1","type":"Number Remapper","label":"Value in procentage","x":-227.3994727841646,"y":750.9582554671847,"parameters":{"maxOutputValue":100,"maxInputValue":40},"ports":[],"dynamicports":[],"children":[]},{"id":"e37bfd8c-7651-3f0c-9ad4-e3230bf01de2","type":"Component Inputs","x":-661.0736952429797,"y":83.9693738962768,"parameters":{},"ports":[{"name":"Value","plug":"output","type":{"name":"*"},"index":0},{"name":"Min Value","plug":"output","type":{"name":"*"},"index":1},{"name":"Max Value","plug":"output","type":{"name":"*"},"index":2},{"name":"Margin Left","plug":"output","type":{"name":"*"},"group":"Margin","index":4},{"name":"Margin Top","plug":"output","type":{"name":"*"},"group":"Margin","index":5},{"name":"Margin Bottom","plug":"output","type":{"name":"*"},"group":"Margin","index":6},{"name":"Margin Right","plug":"output","type":{"name":"*"},"group":"Margin","index":7},{"name":"Align X","plug":"output","type":{"name":"*"},"group":"Alignment","index":8},{"name":"Align Y","plug":"output","type":{"name":"*"},"group":"Alignment","index":9},{"name":"Position","plug":"output","type":{"name":"*"},"group":"Position","index":10},{"name":"Animation Duration","plug":"output","type":{"name":"*"},"index":3}],"dynamicports":[],"children":[]},{"id":"704c3ff5-3ebc-e3eb-80b3-531e92122c25","type":"String Format","x":-228.25577158769153,"y":512.5397884639392,"parameters":{"format":"{val}%"},"ports":[],"dynamicports":[{"name":"val","type":"string","plug":"input","index":2}],"children":[]},{"id":"5234e600-c950-9fad-a696-1163caf77340","type":"Component Outputs","x":48.24089911087907,"y":818.8381288895145,"parameters":{},"ports":[{"name":"Value in procentage","plug":"input","type":{"name":"*"},"index":1},{"name":"At animation done","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"bf5ad68e-84ae-c7f1-231b-32f4bb4c1a87","type":"Number Remapper","label":"Value in Degrees","x":49.555265376773605,"y":686.5108910120125,"parameters":{"maxInputValue":100,"maxOutputValue":360},"ports":[],"dynamicports":[],"children":[]},{"id":"8909b83d-18d4-cf70-02c8-7c315acdc725","type":"Expression","x":-684,"y":558,"parameters":{"expression":"Math.round(val)"},"ports":[],"dynamicports":[{"group":"Parameters","name":"val","type":{"name":"*","editAsType":"string"},"plug":"input","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["expression"]}}},{"id":"7bfb9443-8a38-ba06-4a46-ae533829282b","type":"net.noodl.animatetovalue","x":308.67523046801034,"y":567.7875143542458,"parameters":{"duration":300},"ports":[],"dynamicports":[],"children":[]},{"id":"b9d1d40b-75b1-b101-ffdc-516f57aa87b5","type":"JavaScriptFunction","label":"Calculate Total Bugs","x":-693,"y":402,"parameters":{"functionScript":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('painting-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count);\nOutputs.TotalBugs = totalBugs;\n"},"ports":[],"dynamicports":[{"name":"out-TotalBugs","displayName":"TotalBugs","plug":"output","type":"*","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Count total of keys starting with \"bugs-\" in localstorage, divide by 40, rounded to nearest whole number, output \"totalbugs\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"let count = 0;\nfor (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i).startsWith('bugs-')) {\n        count++;\n    }\n}\n\nconst totalBugs = Math.round(count / 40);\nOutputs.TotalBugs = totalBugs;\n"},"snowflakeId":"019177137eaa-casd9p","type":"user"},{"type":"assistant","content":"\nThis function calculates the total number of keys in the local storage that start with \"bugs-\", divides that number by 40, and rounds it to the nearest whole number. \n\nIt iterates over all keys in the local storage, and for each key that starts with \"bugs-\", it increments a counter. \n\nAfter going through all the keys, it divides the counter by 40 and rounds the result to the nearest whole number. \n\nThe final result is outputted as <span style=\"color: var(--base-color-yellow-400);\">Outputs.TotalBugs</span>.\n","snowflakeId":"019177138f41-mzh77j","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"3ac10e48-6548-f718-f5dc-1ac3d90290e8","type":"RouterNavigate","x":288,"y":376,"parameters":{"router":"Main","target":"/Collection Pages/Paintings/Paintings"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"0c92bfe9-18fd-4a07-75b6-166038ee6fe3","type":"JavaScriptFunction","label":"Play Audio File","x":287,"y":245,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["edf2886e-a1e0-66bb-4afe-bc134bc532d9"]}},{"name":"/Collection Pages/Passport/Passport","id":"ceb720e7-a417-147d-62df-f869c1c38b47","graph":{"connections":[{"fromId":"6a34997c-12c3-9c74-f205-56a5e54b564c","fromProperty":"onClick","toId":"343d2568-94bf-d11a-86dd-b509f67796b5","toProperty":"Show popup"},{"fromId":"c4ba86ac-43fe-ddce-2ed6-4cb81bbe6404","fromProperty":"out-Image","toId":"6a34997c-12c3-9c74-f205-56a5e54b564c","toProperty":"src"},{"fromId":"21dea54a-4bfc-c590-2f0c-2738d017cad3","fromProperty":"out-TownName","toId":"be4d3cde-8450-6ebb-6d0b-d376f2781b65","toProperty":"text"},{"fromId":"21dea54a-4bfc-c590-2f0c-2738d017cad3","fromProperty":"out-PlayerName","toId":"adefe8ce-d742-1d34-c69e-8fc0ef38c37c","toProperty":"text"},{"fromId":"ddec2338-5a7c-fb11-e65a-7a7930a56df1","fromProperty":"onClick","toId":"bdf0a52b-ed2e-709e-7485-72143fb41bb9","toProperty":"Show popup"},{"fromId":"21dea54a-4bfc-c590-2f0c-2738d017cad3","fromProperty":"out-IslandName","toId":"a70dbd95-455e-d183-9d63-4dc2de13578c","toProperty":"text"},{"fromId":"49151743-99b9-2025-eff2-4007055e1a21","fromProperty":"out-NativeFruit","toId":"e6ec08cb-0297-2732-d7a0-817772f02424","toProperty":"src"},{"fromId":"49151743-99b9-2025-eff2-4007055e1a21","fromProperty":"out-NativeFruitText","toId":"0ef36c4f-b33d-f153-8576-ec3944702995","toProperty":"text"},{"fromId":"6a34997c-12c3-9c74-f205-56a5e54b564c","fromProperty":"onClick","toId":"28841c75-5427-4064-5ddd-2686b27982b7","toProperty":"run"},{"fromId":"ddec2338-5a7c-fb11-e65a-7a7930a56df1","fromProperty":"onClick","toId":"28841c75-5427-4064-5ddd-2686b27982b7","toProperty":"run"},{"fromId":"b5b42c3a-0c11-6d6f-c9f2-dcf42665af97","fromProperty":"out-ZodiacSign","toId":"2c415492-0cc2-4658-9eb2-80a22f2ac471","toProperty":"src"},{"fromId":"b5b42c3a-0c11-6d6f-c9f2-dcf42665af97","fromProperty":"out-ZodiacSignText","toId":"4f838a0e-1b98-0b57-06b4-b9e697d569db","toProperty":"text"}],"roots":[{"id":"be5c2e79-982e-a88d-123f-8a134d10bda1","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Passport","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"passport","index":32}],"children":[{"id":"6652c70e-a339-3647-a256-7622beea6f55","type":"/Collection Pages/Passport/passport-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"cecbb818-a883-408e-1b52-55cf100bf994","type":"module.inlineHtml","label":"Passport Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #ffacbe; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/passport.png'),\r\n    url('/images/background/passport.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"bf5a0058-787c-c0fc-6984-75e1b552d5d0","type":"Group","label":"Paintings Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"cssClassName":"slideup","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"backgroundColor":"#F4F6DA","marginTop":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"72c89213-2e2f-2640-a5c8-f759770bf259","type":"Group","parameters":{"borderTopLeftRadius":{"value":12,"unit":"px"},"borderTopRightRadius":{"value":12,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"cssClassName":"box"},"ports":[],"dynamicports":[],"children":[{"id":"49f3ab29-7169-c8ed-31d6-c411f24e755a","type":"Text","parameters":{"textAlignX":"center","text":"━━━  PASSPORT  ━━━","textStyle":"Title Large","color":"#8aa593","alignX":"center","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","fontSize":{"value":20,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"22fe6105-ffe2-e0a5-2a21-31d27ab3d4cb","type":"Group","label":"2nd BG","parameters":{"flexDirection":"row","styleCss":"background-image: url('images/passport/bg.png');\r\nbackground-size: 15%;\r\nbackground-position: center;\r\nbackground-repeat: repeat;\r\n","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e8b0f0f6-826d-d890-7a9e-f27ee8c20d20","type":"Group","label":"Picture","parameters":{"minWidth":{"value":30,"unit":"%"},"maxWidth":{"value":30,"unit":"%"},"alignX":"center","justifyContent":"center","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6a34997c-12c3-9c74-f205-56a5e54b564c","type":"Image","parameters":{"borderRadius":{"value":10,"unit":"px"},"sizeMode":"contentHeight","marginRight":{"value":0,"unit":"px"},"marginLeft":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6b918345-20e6-fca6-7890-35df12173b39","type":"Group","label":"Content","parameters":{"minWidth":{"value":70,"unit":"%"},"maxWidth":{"value":70,"unit":"%"},"paddingRight":{"value":30,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2d229e11-2b37-57ea-33a8-f0c477a5530b","type":"Group","label":"Player","parameters":{"flexDirection":"row","maxHeight":{"value":32,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"borderTopStyle":"solid","borderTopWidth":{"value":2,"unit":"px"},"borderTopColor":"#F4F6DA","marginRight":{"value":10,"unit":"px"},"sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"adefe8ce-d742-1d34-c69e-8fc0ef38c37c","type":"Text","parameters":{"text":"Player Name","textAlignX":"left","alignY":"center","marginLeft":{"value":10,"unit":"px"},"color":"#4e3a06","textStyle":"Title Small","fontSize":{"value":20,"unit":"px"},"minHeight":{"value":32,"unit":"px"},"maxHeight":{"value":32,"unit":"px"},"textAlignY":"center","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d02f922f-b36f-c27a-46d2-eab65345de51","type":"Group","label":"Town","parameters":{"flexDirection":"row","maxHeight":{"value":32,"unit":"px"},"borderTopStyle":"solid","borderTopWidth":{"value":2,"unit":"px"},"borderTopColor":"#F4F6DA","marginRight":{"value":10,"unit":"px"},"minHeight":{"value":32,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"09695071-752f-e3a3-4997-eeacdc6d207e","type":"Image","parameters":{"src":"images/town_stamp.png","sizeMode":"contentWidth"},"ports":[],"dynamicports":[],"children":[]},{"id":"be4d3cde-8450-6ebb-6d0b-d376f2781b65","type":"Text","parameters":{"text":"Town Name","alignY":"center","marginLeft":{"value":10,"unit":"px"},"textStyle":"Title Small","color":"#4e3a06","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"0d6fa9fe-b158-3e9b-6fe1-2146e5743d35","type":"Group","label":"Island","parameters":{"flexDirection":"row","maxHeight":{"value":32,"unit":"px"},"borderTopStyle":"solid","borderTopWidth":{"value":2,"unit":"px"},"borderTopColor":"#F4F6DA","marginRight":{"value":10,"unit":"px"},"minHeight":{"value":32,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0408c16f-25d7-e92b-9a7b-f7927815bc87","type":"Image","parameters":{"src":"images/island_stamp.png","sizeMode":"contentWidth"},"ports":[],"dynamicports":[],"children":[]},{"id":"a70dbd95-455e-d183-9d63-4dc2de13578c","type":"Text","parameters":{"text":"Island Name","alignY":"center","marginLeft":{"value":10,"unit":"px"},"textStyle":"Title Small","color":"#978F72","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"be7da172-7cba-8f54-ff92-49ccd193e24b","type":"Group","label":"Fruit","parameters":{"flexDirection":"row","maxHeight":{"value":32,"unit":"px"},"borderTopStyle":"solid","borderTopWidth":{"value":2,"unit":"px"},"borderTopColor":"#F4F6DA","marginRight":{"value":10,"unit":"px"},"minHeight":{"value":32,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e6ec08cb-0297-2732-d7a0-817772f02424","type":"Image","parameters":{"sizeMode":"contentWidth","src":"images/unknown_stamp.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"0ef36c4f-b33d-f153-8576-ec3944702995","type":"Text","parameters":{"text":"Fruit","alignY":"center","marginLeft":{"value":10,"unit":"px"},"textStyle":"Title Small","color":"#978f72","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b9d88a8f-3649-1372-8d16-c1566c37a42b","type":"Group","label":"Birthday","parameters":{"flexDirection":"row","maxHeight":{"value":32,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"borderTopStyle":"solid","borderTopColor":"#F4F6DA","borderTopWidth":{"value":2,"unit":"px"},"borderBottomStyle":"solid","borderBottomColor":"#F4F6DA","borderBottomWidth":{"value":2,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"minHeight":{"value":32,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2c415492-0cc2-4658-9eb2-80a22f2ac471","type":"Image","parameters":{"src":"images/unknown_stamp.png","sizeMode":"contentWidth"},"ports":[],"dynamicports":[],"children":[]},{"id":"4f838a0e-1b98-0b57-06b4-b9e697d569db","type":"Text","parameters":{"text":"Star Sign","alignY":"center","marginLeft":{"value":10,"unit":"px"},"textStyle":"Title Small","color":"#978f72","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf"},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"99466967-4993-0d3a-fec4-308517d2676f","type":"Group","parameters":{"backgroundColor":"#F4F6DA","borderBottomRightRadius":{"value":10,"unit":"px"},"borderBottomLeftRadius":{"value":10,"unit":"px"},"flexDirection":"row","sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"ddec2338-5a7c-fb11-e65a-7a7930a56df1","type":"Group","parameters":{"maxWidth":{"value":40,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"b3afe4af-6910-1343-005e-75f872799800","type":"Text","parameters":{"textAlignX":"center","text":"Edit","color":"#978F72","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"af3cb3c6-3e0c-e683-d242-c2e8a60f1e59","type":"Text","parameters":{"text":"< < < < < < < < < <","textStyle":"Title Small","color":"#b5af89","textAlignX":"center","maxWidth":{"value":60,"unit":"%"},"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"bccd7741-2d74-aa1b-6469-c8356425d4de","type":"Group","label":"Paintings Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"backgroundColor":"#F4F6DA","marginTop":{"value":5,"unit":"px"},"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"2ff1ecb5-78a9-54c9-5eda-0186ce0f04ec","type":"Group","parameters":{"borderTopLeftRadius":{"value":12,"unit":"px"},"borderTopRightRadius":{"value":12,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6a2949ab-9c4a-497c-aaa6-eb01253c23fe","type":"Text","parameters":{"textAlignX":"center","text":"━━  Museum Progress ━━","textStyle":"Title Large","color":"#8AA590","alignX":"center","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","fontSize":{"value":20,"unit":"px"},"wordBreak":"normal"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"843dd036-89ec-ceba-aee2-7f7f027b2222","type":"Group","label":"2nd BG","parameters":{"flexDirection":"column","styleCss":"background-image: url('images/passport/museum_bg.png');\r\nbackground-size: 15%;\r\nbackground-position: center;\r\nbackground-repeat: repeat;\r\n","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"94efc61c-baf8-8e5d-2bec-1a8109395570","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around","marginBottom":{"value":10,"unit":"px"},"marginTop":{"value":20,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0271d846-955a-26f7-c214-343f921b6b1c","type":"/Collection Pages/Passport/Bugs Progress Circle","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"5b30ea53-c136-7bda-a5ce-412401b399c3","type":"/Collection Pages/Passport/Fish Progress Circle","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1e9dfbae-e54d-4c29-458f-271a68912a63","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","justifyContent":"space-around","marginBottom":{"value":20,"unit":"px"},"marginTop":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"36929931-baf8-835e-017a-e0b956512812","type":"/Collection Pages/Passport/Fossil Progress Circle","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"9f0ec5f9-e943-c7a4-6924-9a35ccc1eaae","type":"/Collection Pages/Passport/Painting Progress Circle","parameters":{},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"b9adbdd4-9ee0-ade4-991f-5fc18c44aa0c","type":"Group","parameters":{"backgroundColor":"#F4F6DA","borderBottomRightRadius":{"value":10,"unit":"px"},"borderBottomLeftRadius":{"value":10,"unit":"px"},"flexDirection":"row","sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[{"id":"dcfdf6a5-4c80-d564-0537-cf7fac642fce","type":"Group","parameters":{"maxWidth":{"value":40,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"5e0e95e1-7f6d-8188-96d1-f0fdba5cef1d","type":"Text","parameters":{"text":"< < < < < < < < < <","textStyle":"Title Small","color":"#B5AF89","textAlignX":"center","maxWidth":{"value":60,"unit":"%"},"fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","textAlignY":"bottom","minHeight":{"value":23,"unit":"px"},"marginBottom":{"value":3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"fca06123-de92-e5a8-977b-a4e710c04b00","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"467d6109-59e0-070d-90d6-3f844c7b9966","type":"JavaScriptFunction","label":"Play Audio File","x":-280,"y":-174,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"343d2568-94bf-d11a-86dd-b509f67796b5","type":"/Collection Pages/Passport/Avatar","x":339.5,"y":348,"parameters":{"Title":"Select your avatar"},"ports":[],"dynamicports":[],"children":[]},{"id":"c4ba86ac-43fe-ddce-2ed6-4cb81bbe6404","type":"JavaScriptFunction","label":"LoadAvatar","x":-233.5,"y":426,"parameters":{"functionScript":"function loadAvatarPassport() {\r\n    try {\r\n        // Attempt to retrieve the avatar-passport from local storage\r\n        const avatarPassport = localStorage.getItem('avatar-passport');\r\n        \r\n        // Check if the key exists and is not null or empty\r\n        if (avatarPassport) {\r\n            Outputs.Image = avatarPassport;\r\n        } else {\r\n            // Output default image if no key exists\r\n            Outputs.Image = \"https://acgc.sterner.digital/images/player/unknown.png\";\r\n        }\r\n        \r\n        Outputs.Success();\r\n    } catch (error) {\r\n        Outputs.error = error;\r\n        Outputs.Failure();\r\n    }\r\n}\r\n\r\n// Call the function to load and output the avatar-passport every 100ms\r\nsetInterval(loadAvatarPassport, 100);\r\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Image","displayName":"Image","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"a75f6846-1e8d-b9d8-ad44-bfcb4d32c99b","type":"JavaScriptFunction","label":"Save TownName PlayerName","x":385.5,"y":704,"parameters":{"functionScript":"function storeTownAndPlayerName() {\r\n    try {\r\n        // Retrieve townname and playername from inputs\r\n        const townName = Inputs.TownName || '';\r\n        const playerName = Inputs.PlayerName || '';\r\n\r\n        // Store townname and playername in local storage\r\n        if (townName) {\r\n            localStorage.setItem('townname', townName);\r\n        }\r\n        \r\n        if (playerName) {\r\n            localStorage.setItem('playername', playerName);\r\n        }\r\n\r\n        Outputs.Success();\r\n    } catch (error) {\r\n        Outputs.error = error;\r\n        Outputs.Failure();\r\n    }\r\n}\r\n\r\n// Call the function to store the townname and playername\r\nstoreTownAndPlayerName();\r\n"},"ports":[],"dynamicports":[{"name":"in-TownName","displayName":"TownName","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-PlayerName","displayName":"PlayerName","plug":"input","type":"*","group":"Inputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":7},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":8}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"21dea54a-4bfc-c590-2f0c-2738d017cad3","type":"JavaScriptFunction","label":"Load TownName PlayerName","x":-296,"y":818,"parameters":{"functionScript":"function loadTownAndPlayerName() {\r\n    try {\r\n        // Retrieve townname, playername, and islandname from local storage\r\n        const townName = localStorage.getItem('townname');\r\n        const playerName = localStorage.getItem('playername');\r\n        const islandName = localStorage.getItem('islandname');\r\n\r\n        // Set outputs based on the retrieved values or provide default values\r\n        Outputs.TownName = townName || 'TownName';\r\n        Outputs.PlayerName = playerName || 'PlayerName';\r\n        Outputs.IslandName = islandName || 'IslandName';\r\n\r\n        Outputs.Success();\r\n    } catch (error) {\r\n        Outputs.error = error;\r\n        Outputs.Failure();\r\n    }\r\n}\r\n\r\n// Call the function to load and output the townname, playername, and islandname every 100ms\r\nsetInterval(loadTownAndPlayerName, 100);\r\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-TownName","displayName":"TownName","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-PlayerName","displayName":"PlayerName","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-IslandName","displayName":"IslandName","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":9}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"bdf0a52b-ed2e-709e-7485-72143fb41bb9","type":"/Collection Pages/Passport/EditPassport","x":365,"y":1648,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"49151743-99b9-2025-eff2-4007055e1a21","type":"JavaScriptFunction","label":"Check Local Storage","x":-288,"y":1194,"parameters":{"functionScript":"function checkLocalStorage() {\n    // Check if the key 'nativefruit' exists in the local storage\n    if(localStorage.getItem('nativefruit')) {\n        // If it exists, get the value\n        const nativeFruitValue = localStorage.getItem('nativefruit');\n\n        // Assign the value to the output 'NativeFruit'\n        Outputs.NativeFruit = nativeFruitValue;\n\n        // Extract the fruit name from the URL path\n        const fruitNameMatch = nativeFruitValue.match(/\\/(\\w+)_stamp\\.png$/);\n        if (fruitNameMatch && fruitNameMatch[1]) {\n            // Capitalize the first letter of the fruit name\n            const fruitName = fruitNameMatch[1];\n            Outputs.NativeFruitText = fruitName.charAt(0).toUpperCase() + fruitName.slice(1);\n        } else {\n            // If the fruit name is not found in the value, set a default value\n            Outputs.NativeFruitText = 'Fruit';\n        }\n\n        Outputs.Success();\n    } else {\n        // If 'nativefruit' doesn't exist, throw an error and call the 'Failure' signal\n        Outputs.error = 'No nativefruit found in local storage';\n        Outputs.NativeFruitText = 'Fruit';\n        Outputs.Failure();\n    }\n}\n\n// Call the function every 100ms\nsetInterval(checkLocalStorage, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-NativeFruit","displayName":"NativeFruit","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-NativeFruitText","displayName":"NativeFruitText","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":8}],"children":[],"metadata":{"prompt":{"history":[{"content":"Create function to pull nativefruit key from local storage, output value in output \"NativeFruit\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Check if the key 'nativefruit' exists in the local storage\nif(localStorage.getItem('nativefruit')) {\n    // If it exists, get the value and assign it to the output 'NativeFruit'\n    Outputs.NativeFruit = localStorage.getItem('nativefruit');\n    Outputs.Success();\n} else {\n    // If it doesn't exist, throw an error and call the 'Failure' signal\n    Outputs.error = 'No nativefruit found in local storage';\n    Outputs.Failure();\n}\n"},"snowflakeId":"0191722d1a0a-b3y19g","type":"user"},{"type":"assistant","content":"\nThis function retrieves the value of the 'nativefruit' key from the local storage. \n\nIf the 'nativefruit' key exists in the local storage, the function assigns its value to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NativeFruit</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the 'nativefruit' key does not exist in the local storage, the function assigns the error message 'No nativefruit found in local storage' to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191722d2d33-izww9v","metadata":{}},{"content":"Loop every 100ms\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to check for the 'nativefruit' key in the local storage\nfunction checkLocalStorage() {\n    // Check if the key 'nativefruit' exists in the local storage\n    if(localStorage.getItem('nativefruit')) {\n        // If it exists, get the value and assign it to the output 'NativeFruit'\n        Outputs.NativeFruit = localStorage.getItem('nativefruit');\n        Outputs.Success();\n    } else {\n        // If it doesn't exist, throw an error and call the 'Failure' signal\n        Outputs.error = 'No nativefruit found in local storage';\n        Outputs.Failure();\n    }\n}\n\n// Call the function every 100ms\nsetInterval(checkLocalStorage, 100);\n"},"snowflakeId":"0191722dc5ed-jaoyzc","type":"user"},{"type":"assistant","content":"\nThis function checks the local storage for the 'nativefruit' key every 100 milliseconds. If the key exists, it assigns its value to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NativeFruit</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> signal. If the key does not exist, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to 'No nativefruit found in local storage' and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> signal.\n","snowflakeId":"0191722df07e-q95xk7","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"28841c75-5427-4064-5ddd-2686b27982b7","type":"JavaScriptFunction","label":"Play Audio File","x":744,"y":856,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"b5b42c3a-0c11-6d6f-c9f2-dcf42665af97","type":"JavaScriptFunction","label":"Check Local Storage","x":-291,"y":1451,"parameters":{"functionScript":"function checkLocalStorage() {\n    // Check if the key 'zodiacSign' exists in the local storage\n    if(localStorage.getItem('zodiacSign')) {\n        // If it exists, get the value\n        const zodiacSignValue = localStorage.getItem('zodiacSign');\n\n        // Assign the value to the output 'ZodiacSign'\n        Outputs.ZodiacSign = zodiacSignValue;\n\n        // Extract the zodiac sign name from the URL path\n        const zodiacSignMatch = zodiacSignValue.match(/\\/(\\w+)\\.png$/);\n        if (zodiacSignMatch && zodiacSignMatch[1]) {\n            // Define the list of zodiac signs\n            const zodiacSigns = [\n                'aries', 'taurus', 'gemini', 'cancer', \n                'leo', 'virgo', 'libra', 'scorpio', \n                'sagittarius', 'capricorn', 'aquarius', 'pisces'\n            ];\n\n            const zodiacSign = zodiacSignMatch[1].toLowerCase();\n\n            // Check if the extracted sign is a valid zodiac sign\n            if (zodiacSigns.includes(zodiacSign)) {\n                // Capitalize the first letter of the zodiac sign name\n                Outputs.ZodiacSignText = zodiacSign.charAt(0).toUpperCase() + zodiacSign.slice(1);\n            } else {\n                // If the zodiac sign name is not valid, set a default value\n                Outputs.ZodiacSignText = 'StarSign';\n            }\n        } else {\n            // If the zodiac sign name is not found in the value, set a default value\n            Outputs.ZodiacSignText = 'Invalid Sign';\n        }\n\n        Outputs.Success();\n    } else {\n        // If 'zodiacSign' doesn't exist, throw an error and call the 'Failure' signal\n        Outputs.error = 'No zodiac sign found in local storage';\n        Outputs.ZodiacSignText = 'Invalid Sign';\n        Outputs.Failure();\n    }\n}\n\n// Call the function immediately to run it on page load\ncheckLocalStorage();\n\n// Call the function every 100ms to continuously check for changes\nsetInterval(checkLocalStorage, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-ZodiacSign","displayName":"ZodiacSign","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-ZodiacSignText","displayName":"ZodiacSignText","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-error","displayName":"error","plug":"output","type":"*","group":"Outputs","index":8}],"children":[],"metadata":{"prompt":{"history":[{"content":"Create function to pull nativefruit key from local storage, output value in output \"NativeFruit\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Check if the key 'nativefruit' exists in the local storage\nif(localStorage.getItem('nativefruit')) {\n    // If it exists, get the value and assign it to the output 'NativeFruit'\n    Outputs.NativeFruit = localStorage.getItem('nativefruit');\n    Outputs.Success();\n} else {\n    // If it doesn't exist, throw an error and call the 'Failure' signal\n    Outputs.error = 'No nativefruit found in local storage';\n    Outputs.Failure();\n}\n"},"snowflakeId":"0191722d1a0a-b3y19g","type":"user"},{"type":"assistant","content":"\nThis function retrieves the value of the 'nativefruit' key from the local storage. \n\nIf the 'nativefruit' key exists in the local storage, the function assigns its value to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NativeFruit</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the 'nativefruit' key does not exist in the local storage, the function assigns the error message 'No nativefruit found in local storage' to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191722d2d33-izww9v","metadata":{}},{"content":"Loop every 100ms\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to check for the 'nativefruit' key in the local storage\nfunction checkLocalStorage() {\n    // Check if the key 'nativefruit' exists in the local storage\n    if(localStorage.getItem('nativefruit')) {\n        // If it exists, get the value and assign it to the output 'NativeFruit'\n        Outputs.NativeFruit = localStorage.getItem('nativefruit');\n        Outputs.Success();\n    } else {\n        // If it doesn't exist, throw an error and call the 'Failure' signal\n        Outputs.error = 'No nativefruit found in local storage';\n        Outputs.Failure();\n    }\n}\n\n// Call the function every 100ms\nsetInterval(checkLocalStorage, 100);\n"},"snowflakeId":"0191722dc5ed-jaoyzc","type":"user"},{"type":"assistant","content":"\nThis function checks the local storage for the 'nativefruit' key every 100 milliseconds. If the key exists, it assigns its value to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NativeFruit</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> signal. If the key does not exist, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to 'No nativefruit found in local storage' and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> signal.\n","snowflakeId":"0191722df07e-q95xk7","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["be5c2e79-982e-a88d-123f-8a134d10bda1"]}},{"name":"/Collection Pages/Passport/passport-splash","id":"3b14caa2-e395-9b46-12ce-6a785575f347","graph":{"connections":[{"fromId":"cbc93095-d841-6795-a665-889aa11aab6d","fromProperty":"out-Success","toId":"c763f390-d89e-5f4b-572c-bf64428ce19b","toProperty":"play"}],"roots":[{"id":"3e6a2a3f-60bb-04a9-f160-00f86c51cfbe","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"25069dc7-d2b3-87b4-3b8c-11846b9955ed","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"d41c1cde-0c9a-6382-7f18-267dacd4b1b3","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #5aa15b; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/passport.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"0d3d510d-7c60-ede7-3990-ec694015f6a6","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c763f390-d89e-5f4b-572c-bf64428ce19b","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"cbc93095-d841-6795-a665-889aa11aab6d","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["3e6a2a3f-60bb-04a9-f160-00f86c51cfbe"]}},{"name":"/Collection Pages/Songs/Songs","id":"e30fd73f-780c-e31f-eb65-ded689b62d0a","graph":{"connections":[{"fromId":"adb1f1ae-fe9c-2af3-63af-53a37ba09d15","fromProperty":"items","toId":"073e0474-4073-5471-a1e8-47f6cf774c66","toProperty":"items"},{"fromId":"e260beb2-5b2b-0366-746f-d3ab0f8726d7","fromProperty":"out-Success","toId":"073e0474-4073-5471-a1e8-47f6cf774c66","toProperty":"refresh"},{"fromId":"174f13eb-8b05-3389-7248-8c79275359c5","fromProperty":"out-CountText","toId":"84bd9534-ca65-b05d-bcdb-a21281ab70e4","toProperty":"text"}],"roots":[{"id":"0fd7a7e9-ee4c-bf67-f8b8-0ed480bbc23f","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Songs","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"songs","index":32}],"children":[{"id":"cc5c8096-3c99-d15e-2d8e-52c76d35d535","type":"module.inlineHtml","label":"Music Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/music.png'),\r\n    url('/images/background/music.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"689d15cc-a336-7ca2-06af-3df4cb6ddb2d","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"84bd9534-ca65-b05d-bcdb-a21281ab70e4","type":"Text","label":"","parameters":{"text":"K.K. Slider Songs Progress: 0 / 55","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#a0887c"},"ports":[],"dynamicports":[],"children":[]},{"id":"9ba39cb5-7c2d-8560-d3aa-55c5ebfcb405","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#a0887c","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e1399f92-bbe7-77f9-1ba6-0c3bd8c58fb1","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7afc6e9c-4484-89ea-f91d-9727ff759a19","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/kk_slider.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"71733e76-a3ac-8657-b1a7-1375a33e2ae0","type":"Text","label":"","parameters":{"text":"K.K. Slider Songs","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c9405cb3-09f8-cbd6-27c0-50a95dfa9afd","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"aec05871-2f67-348c-f9b6-e61f20f81fd3","type":"Text","label":"","parameters":{"text":"K.K. Slider Songs can be obtained from K.K. Slider on Saturday nights from 8 PM to 12 AM.\n\n\"K.K. Song\", \"I Love You\", and \"Two Days Ago\" are known as \"Secret Songs\" and must be requested manually.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"073e0474-4073-5471-a1e8-47f6cf774c66","type":"For Each","parameters":{"template":"/Collection Pages/Songs/Songs Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"20f1e936-164f-1848-051b-cb8b66aed4cd","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"adb1f1ae-fe9c-2af3-63af-53a37ba09d15","type":"Collection2","label":"Fruit Array","x":-259,"y":454,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"songs-0001\",\r\n    \"Label\": \"Aloha K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Aloha_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0002\",\r\n    \"Label\": \"Café K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Cafe_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0003\",\r\n    \"Label\": \"Comrade K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Comrade_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0004\",\r\n    \"Label\": \"DJ K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-DJ_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0005\",\r\n    \"Label\": \"Go K.K. Rider!\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Go_K.K._Rider.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0006\",\r\n    \"Label\": \"I Love You\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-I_Love_You.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0007\",\r\n    \"Label\": \"Imperial K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Imperial_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0008\",\r\n    \"Label\": \"K.K. Aria\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Aria.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0009\",\r\n    \"Label\": \"K.K. Ballad\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Ballad.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0010\",\r\n    \"Label\": \"K.K. Blues\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Blues.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0011\",\r\n    \"Label\": \"K.K. Bossa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Bossa.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0012\",\r\n    \"Label\": \"K.K. Calypso\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Calypso.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0013\",\r\n    \"Label\": \"K.K. Casbah\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Casbah.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0014\",\r\n    \"Label\": \"K.K. Chorale\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Chorale.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0015\",\r\n    \"Label\": \"K.K. Condor\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Condor.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0016\",\r\n    \"Label\": \"K.K. Country\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Country.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0017\",\r\n    \"Label\": \"K.K. Cruisin'\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Cruisin.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0018\",\r\n    \"Label\": \"K.K. D & B\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._DB.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0019\",\r\n    \"Label\": \"K.K. Dirge\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Dirge.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0020\",\r\n    \"Label\": \"K.K. Etude\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Etude.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0021\",\r\n    \"Label\": \"K.K. Faire\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Faire.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0022\",\r\n    \"Label\": \"K.K. Folk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Folk.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0023\",\r\n    \"Label\": \"K.K. Fusion\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Fusion.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0024\",\r\n    \"Label\": \"K.K. Gumbo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Gumbo.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0025\",\r\n    \"Label\": \"K.K. Jazz\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Jazz.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0026\",\r\n    \"Label\": \"K.K. Lament\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Lament.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0027\",\r\n    \"Label\": \"K.K. Love Song\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Love_Song.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0028\",\r\n    \"Label\": \"K.K. Lullaby\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Lullaby.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0029\",\r\n    \"Label\": \"K.K. Mambo\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Mambo.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0030\",\r\n    \"Label\": \"K.K. March\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._March.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0031\",\r\n    \"Label\": \"K.K. Parade\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Parade.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0032\",\r\n    \"Label\": \"K.K. Ragtime\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Ragtime.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0033\",\r\n    \"Label\": \"K.K. Reggae\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Reggae.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0034\",\r\n    \"Label\": \"K.K. Rock\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Rock.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0035\",\r\n    \"Label\": \"K.K. Safari\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Safari.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0036\",\r\n    \"Label\": \"K.K. Salsa\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/AMF-AlbumArt-K.K._Salsa.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0037\",\r\n    \"Label\": \"K.K. Samba\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/AMF-AlbumArt-K.K._Samba.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0038\",\r\n    \"Label\": \"K.K. Ska\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Ska.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0039\",\r\n    \"Label\": \"K.K. Song\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Song.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0040\",\r\n    \"Label\": \"K.K. Soul\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Soul.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0041\",\r\n    \"Label\": \"K.K. Steppe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Steppe.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0042\",\r\n    \"Label\": \"K.K. Swing\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Swing.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0043\",\r\n    \"Label\": \"K.K. Tango\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Tango.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0044\",\r\n    \"Label\": \"K.K. Technopop\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Technopop.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0045\",\r\n    \"Label\": \"K.K. Waltz\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Waltz.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0046\",\r\n    \"Label\": \"K.K. Western\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Western.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0047\",\r\n    \"Label\": \"Lucky K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Lucky_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0048\",\r\n    \"Label\": \"Mr. K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Mr._K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0049\",\r\n    \"Label\": \"Only Me\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Only_Me.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0050\",\r\n    \"Label\": \"Rockin' K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Rockin_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0051\",\r\n    \"Label\": \"Señor K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-K.K._Mariachi.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0052\",\r\n    \"Label\": \"Soulful K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Soulful_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0053\",\r\n    \"Label\": \"Surfin' K.K.\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Surfin_K.K..png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0054\",\r\n    \"Label\": \"The K. Funk\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-The_K._Funk.png\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"songs-0055\",\r\n    \"Label\": \"Two Days Ago\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/songs/NH-Album_Cover-Two_Days_Ago.png\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"e260beb2-5b2b-0366-746f-d3ab0f8726d7","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":317,"y":428,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"174f13eb-8b05-3389-7248-8c79275359c5","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-239,"y":56,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('songs-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `K.K. Slider Songs Progress: ${count} / 55`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["0fd7a7e9-ee4c-bf67-f8b8-0ed480bbc23f"]}},{"name":"/Collection Pages/Songs/Songs Logic","id":"da75c37a-c7ab-9a33-0bc1-7608d4c23e29","graph":{"connections":[{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-ID","toId":"1867a459-92e0-5616-86a2-50f4752c8f38","toProperty":"in-ID"},{"fromId":"1867a459-92e0-5616-86a2-50f4752c8f38","fromProperty":"out-ID","toId":"b80a0f11-bc18-e746-9d3c-8539d44624e7","toProperty":"modelId"},{"fromId":"1867a459-92e0-5616-86a2-50f4752c8f38","fromProperty":"out-Checked","toId":"b80a0f11-bc18-e746-9d3c-8539d44624e7","toProperty":"prop-Checked"},{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-Label","toId":"1867a459-92e0-5616-86a2-50f4752c8f38","toProperty":"in-Label"},{"fromId":"3229b4e3-db97-32d5-8b2d-6c0116047aa3","fromProperty":"id","toId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","toProperty":"in-ID"},{"fromId":"3229b4e3-db97-32d5-8b2d-6c0116047aa3","fromProperty":"prop-Label","toId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","toProperty":"in-Label"},{"fromId":"3229b4e3-db97-32d5-8b2d-6c0116047aa3","fromProperty":"prop-Image","toId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","toProperty":"in-Icon"},{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-Label","toId":"1b4f2dab-e580-c580-3347-cbafc3ab22b8","toProperty":"text"},{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-Icon","toId":"c351871f-0a37-3d90-bbfa-bbc8112003b2","toProperty":"src"},{"fromId":"3229b4e3-db97-32d5-8b2d-6c0116047aa3","fromProperty":"prop-Checked","toId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","toProperty":"in-Checked"},{"fromId":"3229b4e3-db97-32d5-8b2d-6c0116047aa3","fromProperty":"prop-Price","toId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","toProperty":"in-Price"},{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-Price","toId":"1867a459-92e0-5616-86a2-50f4752c8f38","toProperty":"in-Price"},{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-Icon","toId":"1867a459-92e0-5616-86a2-50f4752c8f38","toProperty":"in-Icon"},{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-Checked","toId":"99d1ca4b-3285-c5d9-b0e8-84efcd849c83","toProperty":"checked"},{"fromId":"99d1ca4b-3285-c5d9-b0e8-84efcd849c83","fromProperty":"checked","toId":"1867a459-92e0-5616-86a2-50f4752c8f38","toProperty":"in-Checked"},{"fromId":"99d1ca4b-3285-c5d9-b0e8-84efcd849c83","fromProperty":"onChange","toId":"1867a459-92e0-5616-86a2-50f4752c8f38","toProperty":"in-Changed"},{"fromId":"99d1ca4b-3285-c5d9-b0e8-84efcd849c83","fromProperty":"onChange","toId":"b80a0f11-bc18-e746-9d3c-8539d44624e7","toProperty":"store"},{"fromId":"3229b4e3-db97-32d5-8b2d-6c0116047aa3","fromProperty":"prop-Obtained","toId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","toProperty":"in-Obtained"},{"fromId":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","fromProperty":"out-Obtained","toId":"1867a459-92e0-5616-86a2-50f4752c8f38","toProperty":"in-Obtained"}],"roots":[{"id":"383b7b6f-8d32-afcb-ba71-8dcef25c294c","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":5,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ad8ece8a-0e1f-52a1-1240-982a0dce7898","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"76875ebe-e4f6-6a12-d14e-17e91b5bc72b","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"0ba66acb-01b4-bfee-34f7-29b6ae897f67","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"9d4d7c4b-d1f8-3126-d7dc-ac93a8f89286","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"67427a07-6d21-e426-d0e6-66022ab7c95c","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d89d59d8-98d5-9fec-afef-ae39e4d0f467","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"c351871f-0a37-3d90-bbfa-bbc8112003b2","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":4,"unit":"px"},"marginBottom":{"value":46,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1b4f2dab-e580-c580-3347-cbafc3ab22b8","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"a3c0e61c-ee49-835a-08a2-2cf1b146695f","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"99d1ca4b-3285-c5d9-b0e8-84efcd849c83","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"3229b4e3-db97-32d5-8b2d-6c0116047aa3","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"b80a0f11-bc18-e746-9d3c-8539d44624e7","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"fb37f1d3-bbd7-c94d-ce6d-363dccd5e11e","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"1867a459-92e0-5616-86a2-50f4752c8f38","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["383b7b6f-8d32-afcb-ba71-8dcef25c294c"]}},{"name":"/Collection Pages/Songs/Songs Logic/Options","id":"90798934-bc2a-bf21-63de-27676e0c3d77","graph":{"connections":[{"fromId":"d338e4c8-e1ed-ab05-9f28-f163d094333c","fromProperty":"id","toId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","toProperty":"in-ID"},{"fromId":"d338e4c8-e1ed-ab05-9f28-f163d094333c","fromProperty":"prop-Label","toId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","toProperty":"in-Label"},{"fromId":"d338e4c8-e1ed-ab05-9f28-f163d094333c","fromProperty":"prop-Checked","toId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","toProperty":"in-Checked"},{"fromId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","fromProperty":"out-ID","toId":"c1d29808-f690-bfda-94a5-c4798499dca5","toProperty":"in-ID"},{"fromId":"c1d29808-f690-bfda-94a5-c4798499dca5","fromProperty":"out-ID","toId":"7e255f80-e50e-7b30-179b-1a7082112de7","toProperty":"modelId"},{"fromId":"c1d29808-f690-bfda-94a5-c4798499dca5","fromProperty":"out-Checked","toId":"7e255f80-e50e-7b30-179b-1a7082112de7","toProperty":"prop-Checked"},{"fromId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","fromProperty":"out-Label","toId":"c1d29808-f690-bfda-94a5-c4798499dca5","toProperty":"in-Label"},{"fromId":"d338e4c8-e1ed-ab05-9f28-f163d094333c","fromProperty":"prop-Icon","toId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","toProperty":"in-Icon"},{"fromId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","fromProperty":"out-Icon","toId":"c1d29808-f690-bfda-94a5-c4798499dca5","toProperty":"in-Icon"},{"fromId":"7e255f80-e50e-7b30-179b-1a7082112de7","fromProperty":"stored","toId":"76fdc587-6ac1-8eed-a1fe-52e2be63503a","toProperty":"Selection Changed"},{"fromId":"867a540b-6e8d-b010-01eb-9fb078299372","fromProperty":"onChange","toId":"7e255f80-e50e-7b30-179b-1a7082112de7","toProperty":"store"},{"fromId":"867a540b-6e8d-b010-01eb-9fb078299372","fromProperty":"onChange","toId":"c1d29808-f690-bfda-94a5-c4798499dca5","toProperty":"in-Changed"},{"fromId":"867a540b-6e8d-b010-01eb-9fb078299372","fromProperty":"checked","toId":"c1d29808-f690-bfda-94a5-c4798499dca5","toProperty":"in-Checked"},{"fromId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","fromProperty":"out-Checked","toId":"867a540b-6e8d-b010-01eb-9fb078299372","toProperty":"checked"},{"fromId":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","fromProperty":"out-Label","toId":"867a540b-6e8d-b010-01eb-9fb078299372","toProperty":"label"}],"roots":[{"id":"01bbbef7-d990-26c8-30a0-f43b1a1a8104","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"867a540b-6e8d-b010-01eb-9fb078299372","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"d338e4c8-e1ed-ab05-9f28-f163d094333c","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"7e255f80-e50e-7b30-179b-1a7082112de7","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"0e5c49d8-467c-a7f7-e345-03c1d083d0e9","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"c1d29808-f690-bfda-94a5-c4798499dca5","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"76fdc587-6ac1-8eed-a1fe-52e2be63503a","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["01bbbef7-d990-26c8-30a0-f43b1a1a8104"]}},{"name":"/Collection Pages/Stationery/Stationery","id":"cf78c6bb-ad48-5e9c-e42c-5bb6becbd163","graph":{"connections":[{"fromId":"34d0753c-4772-df3f-5b99-5a582f40b70c","fromProperty":"items","toId":"da562587-9135-2b76-c31d-0601382c91ab","toProperty":"items"},{"fromId":"a31165c4-a2af-90be-f710-5d45f85e3320","fromProperty":"out-Success","toId":"da562587-9135-2b76-c31d-0601382c91ab","toProperty":"refresh"},{"fromId":"4cce54dc-ad7c-450e-96a7-e7558fc971d1","fromProperty":"out-CountText","toId":"6059647c-efa6-a3cd-1b28-16bee532bd7c","toProperty":"text"}],"roots":[{"id":"d30beeae-2f66-00ab-53e0-9eda6cf95882","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Stationery","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"stationery","index":32}],"children":[{"id":"a0b849b9-b53d-b6cd-e516-c3227350d594","type":"module.inlineHtml","label":"Mail Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/mail.png'),\r\n    url('/images/background/mail.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"d7fcb4f7-d7c3-f1d2-75cd-288b3ef265b0","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6059647c-efa6-a3cd-1b28-16bee532bd7c","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Nook Store Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#47b4b8"},"ports":[],"dynamicports":[],"children":[]},{"id":"e0b4d9d8-62db-f64d-2d21-5883d35997bb","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#47b4b8","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a2cf5af2-3692-064d-d205-44e4071c2829","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cc9e0391-f917-3d5e-e849-612aadc5492d","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/diary.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"88cce791-c56b-2c33-e197-e1b30ae0ab2c","type":"Text","label":"","parameters":{"text":"Stationery","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"da562587-9135-2b76-c31d-0601382c91ab","type":"For Each","parameters":{"template":"/Collection Pages/Stationery/Stationery Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"a49ce040-d2a0-dd2a-1409-2a1a5316e8d9","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"34d0753c-4772-df3f-5b99-5a582f40b70c","type":"Collection2","label":"Nook","x":-254,"y":634,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"stationery-0001\",\r\n    \"Label\": \"Airmail paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Airmail_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0002\",\r\n    \"Label\": \"Aloha paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Aloha_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0003\",\r\n    \"Label\": \"Bamboo paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Bamboo_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0004\",\r\n    \"Label\": \"Blossom paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Blossom_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0005\",\r\n    \"Label\": \"Bluebell paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Bluebell_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0006\",\r\n    \"Label\": \"Butterfly paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Butterfly_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0007\",\r\n    \"Label\": \"Cloudy paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Cloudy_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0008\",\r\n    \"Label\": \"Cool neon paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Cool_Neon_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0009\",\r\n    \"Label\": \"Cool paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Cool_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0010\",\r\n    \"Label\": \"Dainty paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Dainty_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0011\",\r\n    \"Label\": \"Daisy paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Daisy_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0012\",\r\n    \"Label\": \"Deep sea paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Deep_Sea_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0013\",\r\n    \"Label\": \"Dizzy paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Dizzy_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0014\",\r\n    \"Label\": \"Dragon paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Dragon_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0015\",\r\n    \"Label\": \"Elegant paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Elegant_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0016\",\r\n    \"Label\": \"Essay paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Essay_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0017\",\r\n    \"Label\": \"Fantasy paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Fantasy_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0018\",\r\n    \"Label\": \"Felt paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Felt_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0019\",\r\n    \"Label\": \"Festive paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Festive_Paper_PG.png\",\r\n    \"Obtained\": \"Your Mom and Jingle can send you this in the mail on Dec 24/25.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0020\",\r\n    \"Label\": \"Fireworks paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Fireworks_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0021\",\r\n    \"Label\": \"Fortune paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Fortune_Paper_PG.png\",\r\n    \"Obtained\": \"Katrina can mail you this on New Year's Day if you purchase a fortune.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0022\",\r\n    \"Label\": \"Gingko paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Gingko_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0023\",\r\n    \"Label\": \"Gyroid paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Gyroid_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0024\",\r\n    \"Label\": \"Honeybee paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Honeybee_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0025\",\r\n    \"Label\": \"Horsetail paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Horsetail_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0026\",\r\n    \"Label\": \"Hot neon paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Hot_Neon_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0027\",\r\n    \"Label\": \"Inky paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Inky_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0028\",\r\n    \"Label\": \"Ivy paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Ivy_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0029\",\r\n    \"Label\": \"Lacy paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Lacy_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0030\",\r\n    \"Label\": \"Lattice paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Lattice_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0031\",\r\n    \"Label\": \"Maple leaf paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Maple_Leaf_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0032\",\r\n    \"Label\": \"Misty paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Misty_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0033\",\r\n    \"Label\": \"Museum paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Museum_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0034\",\r\n    \"Label\": \"Mystic paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Mystic_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0035\",\r\n    \"Label\": \"Neat paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Neat_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0037\",\r\n    \"Label\": \"Noodle paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Noodle_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0038\",\r\n    \"Label\": \"Octopus paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Octopus_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0039\",\r\n    \"Label\": \"Orange paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Orange_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0040\",\r\n    \"Label\": \"Panda paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Panda_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0041\",\r\n    \"Label\": \"Parchment\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Parchment_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0042\",\r\n    \"Label\": \"Petal paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Petal_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0043\",\r\n    \"Label\": \"Polka-dot paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Polka_dot_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0044\",\r\n    \"Label\": \"Rainbow paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Rainbow_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0045\",\r\n    \"Label\": \"Rainy day paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Rainy_Day_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0046\",\r\n    \"Label\": \"Ranch paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Ranch_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0047\",\r\n    \"Label\": \"Ribbon paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Ribbon_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0048\",\r\n    \"Label\": \"Simple paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Simple_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0049\",\r\n    \"Label\": \"Skyline paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Skyline_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0050\",\r\n    \"Label\": \"Snowy paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Snowy_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0051\",\r\n    \"Label\": \"Sparkly paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Sparkly_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0052\",\r\n    \"Label\": \"Spooky paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Spooky_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0053\",\r\n    \"Label\": \"Stageshow paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Stageshow_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0054\",\r\n    \"Label\": \"Starry sky paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Starry_Sky_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0055\",\r\n    \"Label\": \"Steel paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Steel_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0056\",\r\n    \"Label\": \"Sunset paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Sunset_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0057\",\r\n    \"Label\": \"Thick paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Thick_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0058\",\r\n    \"Label\": \"Tile paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Tile_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0060\",\r\n    \"Label\": \"Vine paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Vine_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0061\",\r\n    \"Label\": \"Watermelon paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Watermelon_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0062\",\r\n    \"Label\": \"Wing paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Wing_Paper_PG.png\",\r\n    \"Obtained\": \"The Happy Room Academy uses this paper when mailing the player.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0063\",\r\n    \"Label\": \"Winter paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Winter_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0064\",\r\n    \"Label\": \"Woodcut paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Woodcut_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"stationery-0065\",\r\n    \"Label\": \"Woodland paper\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/stationery/64px-Woodland_Paper_PG.png\",\r\n    \"Obtained\": \"Purchase from Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"a31165c4-a2af-90be-f710-5d45f85e3320","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":371,"y":793,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4cce54dc-ad7c-450e-96a7-e7558fc971d1","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":47,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('stationery-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Stationery Progress: ${count} / 64`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["d30beeae-2f66-00ab-53e0-9eda6cf95882"]}},{"name":"/Collection Pages/Stationery/Stationery Logic","id":"0d9da712-a4b6-bd6f-f715-521d1f73f76b","graph":{"connections":[{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-ID","toId":"28de2d94-dbe1-203f-940a-d96989b385c9","toProperty":"in-ID"},{"fromId":"28de2d94-dbe1-203f-940a-d96989b385c9","fromProperty":"out-ID","toId":"ca649515-d64a-98f4-f71d-0dd70358b759","toProperty":"modelId"},{"fromId":"28de2d94-dbe1-203f-940a-d96989b385c9","fromProperty":"out-Checked","toId":"ca649515-d64a-98f4-f71d-0dd70358b759","toProperty":"prop-Checked"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Label","toId":"28de2d94-dbe1-203f-940a-d96989b385c9","toProperty":"in-Label"},{"fromId":"ffc52f98-b102-6955-c724-bb8a773da511","fromProperty":"id","toId":"19e00653-4986-cf37-7106-e966b8344d2e","toProperty":"in-ID"},{"fromId":"ffc52f98-b102-6955-c724-bb8a773da511","fromProperty":"prop-Label","toId":"19e00653-4986-cf37-7106-e966b8344d2e","toProperty":"in-Label"},{"fromId":"ffc52f98-b102-6955-c724-bb8a773da511","fromProperty":"prop-Image","toId":"19e00653-4986-cf37-7106-e966b8344d2e","toProperty":"in-Icon"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Label","toId":"87f21601-7ced-42d5-e6d5-e796f29c9acc","toProperty":"text"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Icon","toId":"a265e66b-7f3f-5e1a-1f51-5d19435a8a7e","toProperty":"src"},{"fromId":"ffc52f98-b102-6955-c724-bb8a773da511","fromProperty":"prop-Checked","toId":"19e00653-4986-cf37-7106-e966b8344d2e","toProperty":"in-Checked"},{"fromId":"ffc52f98-b102-6955-c724-bb8a773da511","fromProperty":"prop-Price","toId":"19e00653-4986-cf37-7106-e966b8344d2e","toProperty":"in-Price"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Price","toId":"28de2d94-dbe1-203f-940a-d96989b385c9","toProperty":"in-Price"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Icon","toId":"28de2d94-dbe1-203f-940a-d96989b385c9","toProperty":"in-Icon"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Checked","toId":"790fd3bd-08d7-32ab-4dfc-2a866abb5df2","toProperty":"checked"},{"fromId":"790fd3bd-08d7-32ab-4dfc-2a866abb5df2","fromProperty":"checked","toId":"28de2d94-dbe1-203f-940a-d96989b385c9","toProperty":"in-Checked"},{"fromId":"790fd3bd-08d7-32ab-4dfc-2a866abb5df2","fromProperty":"onChange","toId":"28de2d94-dbe1-203f-940a-d96989b385c9","toProperty":"in-Changed"},{"fromId":"790fd3bd-08d7-32ab-4dfc-2a866abb5df2","fromProperty":"onChange","toId":"ca649515-d64a-98f4-f71d-0dd70358b759","toProperty":"store"},{"fromId":"ffc52f98-b102-6955-c724-bb8a773da511","fromProperty":"prop-Obtained","toId":"19e00653-4986-cf37-7106-e966b8344d2e","toProperty":"in-Obtained"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Obtained","toId":"28de2d94-dbe1-203f-940a-d96989b385c9","toProperty":"in-Obtained"},{"fromId":"19e00653-4986-cf37-7106-e966b8344d2e","fromProperty":"out-Obtained","toId":"28790061-6c84-31c2-4f7f-e7b09b89b441","toProperty":"text"}],"roots":[{"id":"426f0821-9334-7614-219b-bb85be7649fe","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3663be86-8741-f14f-571b-5aa6e38bae71","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"454159ea-6634-e165-5644-f30965052ee6","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"9490ce3d-edf0-f04b-27ea-bf033c864f00","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"dc1fa6f5-07be-8e72-9a86-798866bc0095","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"01166eae-1471-7e46-f685-e19f997b90ec","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"aa277018-471e-45ca-11dc-25ae5ac53400","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"a265e66b-7f3f-5e1a-1f51-5d19435a8a7e","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"87f21601-7ced-42d5-e6d5-e796f29c9acc","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"616fcf19-e87d-e9bb-f99a-95c030ca0b65","type":"Group","parameters":{"minWidth":{"value":25,"unit":"%"},"maxWidth":{"value":25,"unit":"%"},"minHeight":{"value":25,"unit":"%"},"maxHeight":{"value":25,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":60,"unit":"px"},"marginTop":{"value":-8,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"790fd3bd-08d7-32ab-4dfc-2a866abb5df2","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"ee2a14df-81ba-3827-e99b-78344765ba27","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":35,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f2ac479c-2db8-b88b-32d5-a8bee735337a","type":"Text","parameters":{"text":"Obtain by:","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"28790061-6c84-31c2-4f7f-e7b09b89b441","type":"Text","parameters":{"text":"Obtain by","textAlignX":"center","marginBottom":{"value":-29,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ffc52f98-b102-6955-c724-bb8a773da511","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"ca649515-d64a-98f4-f71d-0dd70358b759","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"19e00653-4986-cf37-7106-e966b8344d2e","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"28de2d94-dbe1-203f-940a-d96989b385c9","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["426f0821-9334-7614-219b-bb85be7649fe"]}},{"name":"/Collection Pages/Stationery/Stationery Logic/Options","id":"216928c0-d414-3258-f308-d0c332323210","graph":{"connections":[{"fromId":"084b4561-4ca4-8fa9-9a91-e61aefd0a200","fromProperty":"id","toId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","toProperty":"in-ID"},{"fromId":"084b4561-4ca4-8fa9-9a91-e61aefd0a200","fromProperty":"prop-Label","toId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","toProperty":"in-Label"},{"fromId":"084b4561-4ca4-8fa9-9a91-e61aefd0a200","fromProperty":"prop-Checked","toId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","toProperty":"in-Checked"},{"fromId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","fromProperty":"out-ID","toId":"cd0c7406-5518-4686-310c-32669d6b9d14","toProperty":"in-ID"},{"fromId":"cd0c7406-5518-4686-310c-32669d6b9d14","fromProperty":"out-ID","toId":"d9371372-42fb-bda6-7fdf-25493f165956","toProperty":"modelId"},{"fromId":"cd0c7406-5518-4686-310c-32669d6b9d14","fromProperty":"out-Checked","toId":"d9371372-42fb-bda6-7fdf-25493f165956","toProperty":"prop-Checked"},{"fromId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","fromProperty":"out-Label","toId":"cd0c7406-5518-4686-310c-32669d6b9d14","toProperty":"in-Label"},{"fromId":"084b4561-4ca4-8fa9-9a91-e61aefd0a200","fromProperty":"prop-Icon","toId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","toProperty":"in-Icon"},{"fromId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","fromProperty":"out-Icon","toId":"cd0c7406-5518-4686-310c-32669d6b9d14","toProperty":"in-Icon"},{"fromId":"d9371372-42fb-bda6-7fdf-25493f165956","fromProperty":"stored","toId":"06d8ba30-9e7d-9003-c930-5eac0730145a","toProperty":"Selection Changed"},{"fromId":"7703e554-d1ba-1b1e-7d49-5bafcd594f3e","fromProperty":"onChange","toId":"d9371372-42fb-bda6-7fdf-25493f165956","toProperty":"store"},{"fromId":"7703e554-d1ba-1b1e-7d49-5bafcd594f3e","fromProperty":"onChange","toId":"cd0c7406-5518-4686-310c-32669d6b9d14","toProperty":"in-Changed"},{"fromId":"7703e554-d1ba-1b1e-7d49-5bafcd594f3e","fromProperty":"checked","toId":"cd0c7406-5518-4686-310c-32669d6b9d14","toProperty":"in-Checked"},{"fromId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","fromProperty":"out-Checked","toId":"7703e554-d1ba-1b1e-7d49-5bafcd594f3e","toProperty":"checked"},{"fromId":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","fromProperty":"out-Label","toId":"7703e554-d1ba-1b1e-7d49-5bafcd594f3e","toProperty":"label"}],"roots":[{"id":"1a24fe1a-b0f3-ba74-ee4d-f52b648a5e5e","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"7703e554-d1ba-1b1e-7d49-5bafcd594f3e","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"084b4561-4ca4-8fa9-9a91-e61aefd0a200","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"d9371372-42fb-bda6-7fdf-25493f165956","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"a66869b1-16d4-6e3f-4f21-b5a88bf37a43","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"cd0c7406-5518-4686-310c-32669d6b9d14","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"06d8ba30-9e7d-9003-c930-5eac0730145a","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["1a24fe1a-b0f3-ba74-ee4d-f52b648a5e5e"]}},{"name":"/Collection Pages/Tools/Tools","id":"87a601a9-8a3c-68aa-3a40-a2aaf48b5708","graph":{"connections":[{"fromId":"31c13494-3fdc-527e-75cf-058fd5738304","fromProperty":"items","toId":"1e48ba62-0a8e-f6d9-56dd-f18e1e5911ec","toProperty":"items"},{"fromId":"445a72a9-7964-4655-2197-452c2281a20c","fromProperty":"out-CountText","toId":"f80f3ee7-e4e9-4c3e-c06e-a9ebd32b533e","toProperty":"text"},{"fromId":"ccf3508f-0c1d-5de3-afc8-8ce68da0b86b","fromProperty":"items","toId":"8509dcab-5195-1dcf-2856-66307744248b","toProperty":"items"},{"fromId":"739daccd-6d1b-7e7a-0c4e-c7cc38127c13","fromProperty":"items","toId":"cc5a4d22-04ad-a6f1-d38f-e72a2c69e2f5","toProperty":"items"},{"fromId":"41a9796e-233b-0595-4bae-38173e6a4699","fromProperty":"items","toId":"53d0917c-f28d-2099-2be6-71ff247da246","toProperty":"items"}],"roots":[{"id":"f0b091d2-dc4d-65e0-ce1a-b685196b980f","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Tools","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"tools","index":32}],"children":[{"id":"9f28147d-8a5f-0cc6-a98a-b4b432cf227e","type":"/Collection Pages/Tools/tools-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"c2459381-06c3-cf3b-2f3e-cc97a7adc4a7","type":"module.inlineHtml","label":"Tools Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/tools.png'),\r\n    url('/images/background/tools.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"18fd9253-71aa-9ef3-dd3a-644eb4db9b1e","type":"Group","label":"Fruit Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"f80f3ee7-e4e9-4c3e-c06e-a9ebd32b533e","type":"Text","label":"Summer Camper Progress","parameters":{"text":"Nook Store Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#ffdc63"},"ports":[],"dynamicports":[],"children":[]},{"id":"b4d049c9-029b-732a-36bf-b59aa38739be","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#ffdc63","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"ebc76c89-1e89-15c0-9471-a20ab6142d77","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b4129e7a-9071-2dd0-bc66-151e1f1de56a","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/shovel.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"ba61f526-45ea-b1d9-693f-70adaa3618b8","type":"Text","label":"","parameters":{"text":"Tools","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"76bb6fc1-a634-d6bd-2942-d6860d3e2367","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a5a06b8f-5f14-6742-7b5b-8bd24d6c08c7","type":"Text","label":"","parameters":{"text":"All standard tools can be purchased at Tom Nook's Store.","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentHeight","textStyle":"Body Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"},"textAlignX":"center","marginBottom":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1e48ba62-0a8e-f6d9-56dd-f18e1e5911ec","type":"For Each","parameters":{"template":"/Collection Pages/Tools/Tools Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]},{"id":"24cfee1e-3365-1c8b-22f4-994f95f72570","type":"Group","label":"Fruit","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#ffdc63","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2741a327-40e3-2209-82fe-600cebcda6a9","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"518170f1-be5b-ba2f-89aa-d83d153665eb","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/gold_shovel.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"1e3b0349-8636-5bd7-c3e3-43d2804eac99","type":"Text","label":"","parameters":{"text":"Gold Tools","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"8509dcab-5195-1dcf-2856-66307744248b","type":"For Each","parameters":{"template":"/Collection Pages/Tools/Tools Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]},{"id":"add58aa6-6978-eecb-b6da-a3d1eff3a265","type":"Group","label":"Other handheld","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#ffdc63","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f90cfbb7-66d7-6263-a9c9-1a3439ee4441","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a6363cde-27f7-8072-9039-60e0cecfa48c","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/umbrella.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"bc735451-e680-3bd2-74d0-07deeab07959","type":"Text","label":"","parameters":{"text":"Parasols","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"53d0917c-f28d-2099-2be6-71ff247da246","type":"For Each","parameters":{"template":"/Collection Pages/Tools/Tools Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]},{"id":"79cd98b5-52aa-c7cd-3d3e-7c0b49e0099f","type":"Group","label":"Other handheld","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#ffdc63","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d9c254e9-abf4-cc28-d36d-0e8026c0716f","type":"Group","label":"Fruit Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cd0a2c71-7ea9-8075-ff43-8d9e9302aa7e","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/wand.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"c64e38cb-76ea-c7c8-f147-f44bed42233b","type":"Text","label":"","parameters":{"text":"Other Handheld","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"cc5a4d22-04ad-a6f1-d38f-e72a2c69e2f5","type":"For Each","parameters":{"template":"/Collection Pages/Tools/Tools Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"47b06808-c256-b57a-9ab9-c11ca06b4dd5","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"31c13494-3fdc-527e-75cf-058fd5738304","type":"Collection2","label":"Nook","x":-269,"y":499,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"tools-0001\",\r\n    \"Label\": \"Axe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Axe_PG_Model.png\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0002\",\r\n    \"Label\": \"Fishing rod\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Fishing_Rod_PG_Model.png\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0003\",\r\n    \"Label\": \"Net\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Net_PG_Model.png\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0004\",\r\n    \"Label\": \"Shovel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Shovel_PG_Model.png\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"445a72a9-7964-4655-2197-452c2281a20c","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-252,"y":46,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        let key = localStorage.key(i);\n        // Check if the key starts with \"tools-\" or \"parasol-\"\n        if (key.startsWith('tools-') || key.startsWith('parasol-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Tool / Handheld Progress: # / 339\"\n    Outputs.CountText = `Tool / Handheld Progress: ${count} / 64`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"ccf3508f-0c1d-5de3-afc8-8ce68da0b86b","type":"Collection2","label":"Nook","x":-298,"y":901,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"tools-0005\",\r\n    \"Label\": \"Golden axe\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Golden_Axe_PG_Model.png\",\r\n    \"Obtained\": \"Get the golden axe from Farley at the wishing well after maintaining a perfect town environment for 15 days straight.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0006\",\r\n    \"Label\": \"Golden rod\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Golden_Rod_PG_Model.png\",\r\n    \"Obtained\": \"Catch every fish.  Tortimer will give you the golden rod the next day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0007\",\r\n    \"Label\": \"Golden net\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Golden_Net_PG_Model.png\",\r\n    \"Obtained\": \"Catch every insect.  Tortimer will give you the golden net the next day.\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0008\",\r\n    \"Label\": \"Golden shovel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Golden_Shovel_PG_Model.png\",\r\n    \"Obtained\": \"Bury a standard shovel in a shining spot.  When the tree grows, you can shake it to get the golden shovel.\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"739daccd-6d1b-7e7a-0c4e-c7cc38127c13","type":"Collection2","label":"Nook","x":-312,"y":1520,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"tools-0009\",\r\n    \"Label\": \"Bamboo fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Bamboo_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0010\",\r\n    \"Label\": \"Blue balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Blue_Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0011\",\r\n    \"Label\": \"Bluebell fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Bluebell_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0012\",\r\n    \"Label\": \"Bunny B. balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Bunny_B._Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0013\",\r\n    \"Label\": \"Bunny O. balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Bunny_O._Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0014\",\r\n    \"Label\": \"Bunny P. balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Bunny_P._Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0015\",\r\n    \"Label\": \"Cloud fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Cloud_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0016\",\r\n    \"Label\": \"Fan fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Fan_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0017\",\r\n    \"Label\": \"Fancy pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Fancy_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0018\",\r\n    \"Label\": \"Flower fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Flower_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0019\",\r\n    \"Label\": \"Flower pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Flower_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0020\",\r\n    \"Label\": \"Green balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Green_Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0021\",\r\n    \"Label\": \"Green pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Green_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0022\",\r\n    \"Label\": \"Leaf fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Leaf_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0023\",\r\n    \"Label\": \"Maple fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Maple_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0024\",\r\n    \"Label\": \"Pink pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Pink_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0025\",\r\n    \"Label\": \"Plum fan\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Plum_Fan_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0026\",\r\n    \"Label\": \"Purple balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Purple_Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0027\",\r\n    \"Label\": \"Red balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Red_Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0028\",\r\n    \"Label\": \"Red pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Red_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0029\",\r\n    \"Label\": \"Striped pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Striped_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0030\",\r\n    \"Label\": \"Tiger pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Tiger_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0031\",\r\n    \"Label\": \"Yellow balloon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Yellow_Balloon_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"tools-0032\",\r\n    \"Label\": \"Yellow pinwheel\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/64px-Yellow_Pinwheel_PG_Model.png\",\r\n    \"Obtained\": \"Find Redd at his stall on July 4th between 7 PM and 9 PM, or purchase a grab bag on Sale Day (4th Friday in November).\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"41a9796e-233b-0595-4bae-38173e6a4699","type":"Collection2","label":"Umbrellas","x":-319,"y":1207,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"parasol-0001\",\r\n    \"Label\": \"Batbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Batbrella_PG_Model.png\",\r\n    \"Obtained\": \"190 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0002\",\r\n    \"Label\": \"Berry Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Berry_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"360 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0003\",\r\n    \"Label\": \"Blue Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Blue_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"100 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0004\",\r\n    \"Label\": \"Bumbershoot\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Bumbershoot_PG_Model.png\",\r\n    \"Obtained\": \"420 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0005\",\r\n    \"Label\": \"Checked Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Checked_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"230 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0006\",\r\n    \"Label\": \"Classic Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Classic_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"340 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0007\",\r\n    \"Label\": \"Daffodil parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Daffodil_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"480 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0008\",\r\n    \"Label\": \"Dainty parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Dainty_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"380 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0009\",\r\n    \"Label\": \"Elegant Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Elegant_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"380 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0010\",\r\n    \"Label\": \"Flame Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Flame_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"290 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0011\",\r\n    \"Label\": \"Gelato Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Gelato_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"220 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0012\",\r\n    \"Label\": \"Gingham parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Gingham_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"290 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0013\",\r\n    \"Label\": \"Hypno parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Hypno_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"490 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0014\",\r\n    \"Label\": \"Icy Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Icy_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"480 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0015\",\r\n    \"Label\": \"Lacy parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Lacy_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"420 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0016\",\r\n    \"Label\": \"Leaf Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Leaf_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"80 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0017\",\r\n    \"Label\": \"Lotus parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Lotus_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"480 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0018\",\r\n    \"Label\": \"Mod Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Mod_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"290 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0019\",\r\n    \"Label\": \"Nintendo parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Nintendo_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"64 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0020\",\r\n    \"Label\": \"Noodle parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Noodle_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"490 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0021\",\r\n    \"Label\": \"Orange Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Orange_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"320 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0022\",\r\n    \"Label\": \"Paper parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Paper_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"350 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0023\",\r\n    \"Label\": \"Pastel parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Pastel_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"380 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0024\",\r\n    \"Label\": \"Petal parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Petal_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"490 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0025\",\r\n    \"Label\": \"Plaid parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Plaid_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"290 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0026\",\r\n    \"Label\": \"Polka parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Polka_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"340 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0027\",\r\n    \"Label\": \"Retro Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Retro_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"360 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0028\",\r\n    \"Label\": \"Ribbon parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Ribbon_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"330 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0029\",\r\n    \"Label\": \"Sharp Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Sharp_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"250 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0030\",\r\n    \"Label\": \"Sunny parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Sunny_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"380 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0031\",\r\n    \"Label\": \"Twig parasol\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Twig_Parasol_PG_Model.png\",\r\n    \"Obtained\": \"120 Bells\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"parasol-0032\",\r\n    \"Label\": \"Yellow Umbrella\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/handheld-tools/parasol/64px-Yellow_Umbrella_PG_Model.png\",\r\n    \"Obtained\": \"240 Bells\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"8d363203-168b-3f30-54d3-3d4f9f35fd93","type":"JavaScriptFunction","label":"Play Audio File","x":-241,"y":-158,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["f0b091d2-dc4d-65e0-ce1a-b685196b980f"]}},{"name":"/Collection Pages/Tools/Tools Logic","id":"6c8d0da7-c902-c394-078e-d89b8afff67b","graph":{"connections":[{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-ID","toId":"ca4bf95d-560f-ec57-df8a-5965338d9838","toProperty":"in-ID"},{"fromId":"ca4bf95d-560f-ec57-df8a-5965338d9838","fromProperty":"out-ID","toId":"c95854c4-a726-1b5e-850d-be1baa9bc05e","toProperty":"modelId"},{"fromId":"ca4bf95d-560f-ec57-df8a-5965338d9838","fromProperty":"out-Checked","toId":"c95854c4-a726-1b5e-850d-be1baa9bc05e","toProperty":"prop-Checked"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Label","toId":"ca4bf95d-560f-ec57-df8a-5965338d9838","toProperty":"in-Label"},{"fromId":"f6d1f39a-f738-c3da-a647-37b6f4910bdc","fromProperty":"id","toId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","toProperty":"in-ID"},{"fromId":"f6d1f39a-f738-c3da-a647-37b6f4910bdc","fromProperty":"prop-Label","toId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","toProperty":"in-Label"},{"fromId":"f6d1f39a-f738-c3da-a647-37b6f4910bdc","fromProperty":"prop-Image","toId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","toProperty":"in-Icon"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Label","toId":"049ec81c-e2f8-31e8-5ff5-856609396e57","toProperty":"text"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Icon","toId":"1eedc556-d59d-8d4f-c77c-7c0375d0bd71","toProperty":"src"},{"fromId":"f6d1f39a-f738-c3da-a647-37b6f4910bdc","fromProperty":"prop-Checked","toId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","toProperty":"in-Checked"},{"fromId":"f6d1f39a-f738-c3da-a647-37b6f4910bdc","fromProperty":"prop-Price","toId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","toProperty":"in-Price"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Price","toId":"ca4bf95d-560f-ec57-df8a-5965338d9838","toProperty":"in-Price"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Icon","toId":"ca4bf95d-560f-ec57-df8a-5965338d9838","toProperty":"in-Icon"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Checked","toId":"ea6b009f-57c2-33c2-1a46-619896fb514d","toProperty":"checked"},{"fromId":"ea6b009f-57c2-33c2-1a46-619896fb514d","fromProperty":"checked","toId":"ca4bf95d-560f-ec57-df8a-5965338d9838","toProperty":"in-Checked"},{"fromId":"ea6b009f-57c2-33c2-1a46-619896fb514d","fromProperty":"onChange","toId":"ca4bf95d-560f-ec57-df8a-5965338d9838","toProperty":"in-Changed"},{"fromId":"ea6b009f-57c2-33c2-1a46-619896fb514d","fromProperty":"onChange","toId":"c95854c4-a726-1b5e-850d-be1baa9bc05e","toProperty":"store"},{"fromId":"f6d1f39a-f738-c3da-a647-37b6f4910bdc","fromProperty":"prop-Obtained","toId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","toProperty":"in-Obtained"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Obtained","toId":"ca4bf95d-560f-ec57-df8a-5965338d9838","toProperty":"in-Obtained"},{"fromId":"7838e51e-faf1-bf99-0ff3-f953f85c1287","fromProperty":"out-Obtained","toId":"01074135-a00c-c150-abb3-1030e668914a","toProperty":"text"},{"fromId":"ea6b009f-57c2-33c2-1a46-619896fb514d","fromProperty":"onChange","toId":"27b929e2-1226-0af1-c035-ca06e29358e0","toProperty":"run"}],"roots":[{"id":"173c5935-ceb0-e267-2f50-e33e53da119f","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":33,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"64d71215-bc7e-754b-d352-96484fe0000a","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a5f3f2db-d650-cea4-32c4-b48fd4b0b1b7","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"42c791f5-c60c-60cb-68e6-cf76eff13b72","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"06fe926b-4448-3b85-ad75-8d0231df3aa5","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"960b2e69-ada7-43d2-85c4-43f5b15fba1d","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"688b9036-fb90-1ded-1eb7-29e01cb3d616","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"}},"ports":[],"dynamicports":[],"children":[{"id":"1eedc556-d59d-8d4f-c77c-7c0375d0bd71","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":-3,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"049ec81c-e2f8-31e8-5ff5-856609396e57","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":12,"unit":"px"},"sizeMode":"contentWidth","textAlignY":"center","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"de889e3e-6c49-ab87-e0cd-480b0f14deee","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"flexDirection":"row","justifyContent":"center","marginBottom":{"value":60,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"alignY":"center","alignX":"right"},"ports":[],"dynamicports":[],"children":[{"id":"ea6b009f-57c2-33c2-1a46-619896fb514d","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"fd38183a-c659-241b-3dd8-2c991e78d8d3","type":"Group","label":"Group","parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":35,"unit":"px"},"marginBottom":{"value":7,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9fb67fcd-765a-d367-66ff-abbba5569e70","type":"Text","parameters":{"text":"Obtained / Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"01074135-a00c-c150-abb3-1030e668914a","type":"Text","parameters":{"text":"Obtained by","textAlignX":"center","marginBottom":{"value":-32,"unit":"px"},"marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f6d1f39a-f738-c3da-a647-37b6f4910bdc","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"c95854c4-a726-1b5e-850d-be1baa9bc05e","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"7838e51e-faf1-bf99-0ff3-f953f85c1287","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"ca4bf95d-560f-ec57-df8a-5965338d9838","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"27b929e2-1226-0af1-c035-ca06e29358e0","type":"JavaScriptFunction","label":"Play Audio File","x":474,"y":600,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["173c5935-ceb0-e267-2f50-e33e53da119f"]}},{"name":"/Collection Pages/Tools/Tools Logic/Options","id":"8525737b-ede9-320a-5bc5-d94040d0a230","graph":{"connections":[{"fromId":"40eef074-06bb-6a73-26ff-55d4784227cd","fromProperty":"id","toId":"48ea236b-4880-f8ca-a07c-30a5b0780513","toProperty":"in-ID"},{"fromId":"40eef074-06bb-6a73-26ff-55d4784227cd","fromProperty":"prop-Label","toId":"48ea236b-4880-f8ca-a07c-30a5b0780513","toProperty":"in-Label"},{"fromId":"40eef074-06bb-6a73-26ff-55d4784227cd","fromProperty":"prop-Checked","toId":"48ea236b-4880-f8ca-a07c-30a5b0780513","toProperty":"in-Checked"},{"fromId":"48ea236b-4880-f8ca-a07c-30a5b0780513","fromProperty":"out-ID","toId":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","toProperty":"in-ID"},{"fromId":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","fromProperty":"out-ID","toId":"1baf3ad1-d0d9-adbc-7d33-24a3c541d4ab","toProperty":"modelId"},{"fromId":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","fromProperty":"out-Checked","toId":"1baf3ad1-d0d9-adbc-7d33-24a3c541d4ab","toProperty":"prop-Checked"},{"fromId":"48ea236b-4880-f8ca-a07c-30a5b0780513","fromProperty":"out-Label","toId":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","toProperty":"in-Label"},{"fromId":"40eef074-06bb-6a73-26ff-55d4784227cd","fromProperty":"prop-Icon","toId":"48ea236b-4880-f8ca-a07c-30a5b0780513","toProperty":"in-Icon"},{"fromId":"48ea236b-4880-f8ca-a07c-30a5b0780513","fromProperty":"out-Icon","toId":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","toProperty":"in-Icon"},{"fromId":"1baf3ad1-d0d9-adbc-7d33-24a3c541d4ab","fromProperty":"stored","toId":"fec4787d-f70f-6f1a-03a8-cd895eed61d2","toProperty":"Selection Changed"},{"fromId":"32263cb2-34cb-2e24-5728-b83eb20965b4","fromProperty":"onChange","toId":"1baf3ad1-d0d9-adbc-7d33-24a3c541d4ab","toProperty":"store"},{"fromId":"32263cb2-34cb-2e24-5728-b83eb20965b4","fromProperty":"onChange","toId":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","toProperty":"in-Changed"},{"fromId":"32263cb2-34cb-2e24-5728-b83eb20965b4","fromProperty":"checked","toId":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","toProperty":"in-Checked"},{"fromId":"48ea236b-4880-f8ca-a07c-30a5b0780513","fromProperty":"out-Checked","toId":"32263cb2-34cb-2e24-5728-b83eb20965b4","toProperty":"checked"},{"fromId":"48ea236b-4880-f8ca-a07c-30a5b0780513","fromProperty":"out-Label","toId":"32263cb2-34cb-2e24-5728-b83eb20965b4","toProperty":"label"}],"roots":[{"id":"96000a94-f0bd-6046-526a-63eb7abc1957","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"32263cb2-34cb-2e24-5728-b83eb20965b4","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"40eef074-06bb-6a73-26ff-55d4784227cd","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"1baf3ad1-d0d9-adbc-7d33-24a3c541d4ab","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"48ea236b-4880-f8ca-a07c-30a5b0780513","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"58ac0629-fdc5-6d27-1c2f-956dcd5414ce","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"fec4787d-f70f-6f1a-03a8-cd895eed61d2","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["96000a94-f0bd-6046-526a-63eb7abc1957"]}},{"name":"/Collection Pages/Tools/tools-splash","id":"a0ad90b3-6d71-9542-4c36-a8ca36362262","graph":{"connections":[{"fromId":"11bd6764-d2fd-c325-d631-14f9861883bd","fromProperty":"out-Success","toId":"75f5165c-b535-d4ba-d6fd-771fb072301f","toProperty":"play"}],"roots":[{"id":"d6764979-7f4a-35a9-1bac-5049ab315c75","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"4a784d9e-971e-9efb-240d-0bfcbdef783d","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"1a94bf50-71e1-2e42-b0e2-479e372b656a","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #7ec8b9; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/items.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"0506813b-0fd1-22c1-873a-274f493bce61","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"75f5165c-b535-d4ba-d6fd-771fb072301f","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"11bd6764-d2fd-c325-d631-14f9861883bd","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["d6764979-7f4a-35a9-1bac-5049ab315c75"]}},{"name":"/Collection Pages/Wallpaper/Wallpaper","id":"bc44e826-34f5-f5c8-c49a-755f6bd85f40","graph":{"connections":[{"fromId":"3810653d-1b1d-be56-c34a-eb4c5ecb2c7c","fromProperty":"items","toId":"4c62ae71-e1d4-a75e-4894-a25816f17f8e","toProperty":"items"},{"fromId":"7e59506c-6541-5ad4-1db4-68098ea00149","fromProperty":"out-Success","toId":"4c62ae71-e1d4-a75e-4894-a25816f17f8e","toProperty":"refresh"},{"fromId":"a7d62c7f-c0ce-5903-076f-78ba15e277c5","fromProperty":"out-CountText","toId":"8bed829c-af52-24d1-bc70-4a3fe8b7d7ed","toProperty":"text"}],"roots":[{"id":"9814e4a5-3753-08b1-152b-a8624898e356","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Wallpaper","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"wallpaper","index":32}],"children":[{"id":"d129b932-5b4c-8e26-b61b-471ae9810ba7","type":"module.inlineHtml","label":"Wallpaper Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/wallpaper.png'),\r\n    url('/images/background/wallpaper.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"17b79b30-4870-19c6-bd21-b7c487ab6e06","type":"Group","label":"Clothing Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"8bed829c-af52-24d1-bc70-4a3fe8b7d7ed","type":"Text","label":"","parameters":{"text":"Clothing Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#8DE279"},"ports":[],"dynamicports":[],"children":[]},{"id":"a80c4df1-7699-47bf-071b-b51b117cf052","type":"Group","label":"Clothing","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"#8DE279","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3af2b3c6-a56c-f8e4-0c73-100a18782499","type":"Group","label":"Clothing Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"92372e32-b915-d887-ece3-0ffeaf38ec66","type":"Image","label":"Clothing","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"objectFit":"contain","src":"images/wallpaper.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"818e78b0-5a7e-eb31-c4ef-6ef172cee0a3","type":"Text","label":"","parameters":{"text":"Wallpaper","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"4c62ae71-e1d4-a75e-4894-a25816f17f8e","type":"For Each","parameters":{"template":"/Collection Pages/Wallpaper/Wallpaper Logic"},"ports":[],"dynamicports":[{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":6}],"children":[]}]}]}]},{"id":"50eceaf5-1583-9234-bfcf-cd7188b07ea9","type":"PageInputs","x":-239,"y":166,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"3810653d-1b1d-be56-c34a-eb4c5ecb2c7c","type":"Collection2","label":"Clothing Array","x":-259,"y":454,"parameters":{"items":"[\r\n  {\r\n    \"id\": \"wallpaper-0001\",\r\n    \"Label\": \"Ancient wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Ancient_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0002\",\r\n    \"Label\": \"Arched window\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Arched_Window_PG_Texture.png\",\r\n    \"Price\": \"2,150 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0003\",\r\n    \"Label\": \"Backgammon wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Backgammon_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0004\",\r\n    \"Label\": \"Backyard fence\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Backyard_Fence_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0005\",\r\n    \"Label\": \"Bamboo wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Bamboo_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,150 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0006\",\r\n    \"Label\": \"Basement wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Basement_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0007\",\r\n    \"Label\": \"Blue tarp\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Blue_Tarp_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0008\",\r\n    \"Label\": \"Blue wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Blue_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,260 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0009\",\r\n    \"Label\": \"Blue-trim wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Blue-Trim_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,420 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0010\",\r\n    \"Label\": \"Cabana wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Cabana_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,480 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0011\",\r\n    \"Label\": \"Cabin wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Cabin_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,200 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0012\",\r\n    \"Label\": \"Chic wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Chic_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,960 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0013\",\r\n    \"Label\": \"Citrus wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Citrus_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,120 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0014\",\r\n    \"Label\": \"Classic wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Classic_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,100 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0015\",\r\n    \"Label\": \"Classroom wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Classroom_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0016\",\r\n    \"Label\": \"Concrete wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Concrete_Wall_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0017\",\r\n    \"Label\": \"Desert vista\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Desert_Vista_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0018\",\r\n    \"Label\": \"Exotic wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Exotic_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,420 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0019\",\r\n    \"Label\": \"Exquisite wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Exquisite_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,470 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0020\",\r\n    \"Label\": \"Floral wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Floral_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,250 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0021\",\r\n    \"Label\": \"Garden wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Garden_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0022\",\r\n    \"Label\": \"Gold screen wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Gold_Screen_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,180 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0023\",\r\n    \"Label\": \"Green wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Green_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,050 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0024\",\r\n    \"Label\": \"Groovy wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Groovy_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,280 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0025\",\r\n    \"Label\": \"Harvest wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Harvest_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Franklin\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0026\",\r\n    \"Label\": \"Imperial wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Imperial_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,660 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0027\",\r\n    \"Label\": \"Industrial wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Industrial_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0028\",\r\n    \"Label\": \"Ivy wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Ivy_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,250 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0029\",\r\n    \"Label\": \"Jingle wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Jingle_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Jingle\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0030\",\r\n    \"Label\": \"Kiddie wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Kiddie_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,500 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0031\",\r\n    \"Label\": \"Kitchen wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Kitchen_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,120 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0032\",\r\n    \"Label\": \"Kitschy wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Kitschy_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,240 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0033\",\r\n    \"Label\": \"Lattice wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Lattice_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,780 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0034\",\r\n    \"Label\": \"Library wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Library_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,680 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0035\",\r\n    \"Label\": \"Lovely wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Lovely_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,880 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0036\",\r\n    \"Label\": \"Lunar horizon\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Lunar_Horizon_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0037\",\r\n    \"Label\": \"Manor wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Manor_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,050 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0038\",\r\n    \"Label\": \"Meadow vista\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Meadow_Vista_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0039\",\r\n    \"Label\": \"Mod wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Mod_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,200 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0040\",\r\n    \"Label\": \"Modern screen\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Modern_Screen_PG_Texture.png\",\r\n    \"Price\": \"1,150 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0041\",\r\n    \"Label\": \"Modern wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Modern_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,450 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0042\",\r\n    \"Label\": \"Mortar wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Mortar_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0043\",\r\n    \"Label\": \"Mosaic wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Mosaic_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,100 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0044\",\r\n    \"Label\": \"Mushroom mural\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Mushroom_Mural_PG_Texture.png\",\r\n    \"Price\": \"Secret code\",\r\n    \"Obtained\": \"QI6DLEnhm23CqHzrUHk3cXd#HOr9\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0045\",\r\n    \"Label\": \"Music room wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Music_Room_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0046\",\r\n    \"Label\": \"Office wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Office_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0047\",\r\n    \"Label\": \"Old brick wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Old_Brick_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,200 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0048\",\r\n    \"Label\": \"Ornate wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Ornate_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,580 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0049\",\r\n    \"Label\": \"Parlor wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Parlor_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,120 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0050\",\r\n    \"Label\": \"Plaster wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Plaster_Wall_PG_Texture.png\",\r\n    \"Price\": \"880 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0051\",\r\n    \"Label\": \"Playroom wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Playroom_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,320 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0052\",\r\n    \"Label\": \"Plaza wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Plaza_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,960 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0053\",\r\n    \"Label\": \"Ranch wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Ranch_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,450 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0054\",\r\n    \"Label\": \"Regal wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Regal_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,240 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0055\",\r\n    \"Label\": \"Ringside seating\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Ringside_Seating_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0056\",\r\n    \"Label\": \"Rose wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Rose_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,240 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0057\",\r\n    \"Label\": \"Sandlot wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Sandlot_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0058\",\r\n    \"Label\": \"Shanty wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Shanty_Wall_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0059\",\r\n    \"Label\": \"Snowman wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Snowman_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Snowman\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0060\",\r\n    \"Label\": \"Spooky wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Spooky_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Jack\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0061\",\r\n    \"Label\": \"Stately wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Stately_Wall_PG_Texture.png\",\r\n    \"Price\": \"2,450 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0062\",\r\n    \"Label\": \"Stone wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Stone_Wall_PG_Texture.png\",\r\n    \"Price\": \"800 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0063\",\r\n    \"Label\": \"Tea room wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Tea_Room_Wall_PG_Texture.png\",\r\n    \"Price\": \"1,750 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0064\",\r\n    \"Label\": \"Tree-lined wall\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Tree-Lined_Wall_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0065\",\r\n    \"Label\": \"Tropical vista\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Tropical_Vista_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0066\",\r\n    \"Label\": \"Western vista\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Western_Vista_PG_Texture.png\",\r\n    \"Price\": \"Not for sale\",\r\n    \"Obtained\": \"Wendell\",\r\n    \"Checked\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"wallpaper-0067\",\r\n    \"Label\": \"Wood paneling\",\r\n    \"Image\": \"https://acgc.sterner.digital/images/wallpaper/64px-Wood_Paneling_PG_Texture.png\",\r\n    \"Price\": \"1,320 Bells\",\r\n    \"Obtained\": \"Tom Nook's Store\",\r\n    \"Checked\": \"\"\r\n  }\r\n]"},"ports":[],"dynamicports":[],"children":[]},{"id":"7e59506c-6541-5ad4-1db4-68098ea00149","type":"JavaScriptFunction","label":"Trigger Repeater on Page Load","x":317,"y":427,"parameters":{"functionScript":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-Repetitions","displayName":"Repetitions","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Delay","displayName":"Delay","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Signal","displayName":"Signal","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-PageLoaded","displayName":"PageLoaded","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":9}],"children":[],"metadata":{"prompt":{"history":[{"content":"trigger repeater on page load","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the default value for the number of repetitions\nconst repetitions = Inputs.Repetitions || 5;\n\n// Define the default value for the delay between repetitions\nconst delay = Inputs.Delay || 1000;\n\n// Define the default value for the signal to be repeated\nconst signal = Inputs.Signal || 'Signal';\n\n// Check if the page is loaded\nif (Inputs.PageLoaded) {\n  // Repeat the signal for the specified number of repetitions\n  for (let i = 0; i < repetitions; i++) {\n    // Use setTimeout to delay the signal\n    setTimeout(() => {\n      // Trigger the signal\n      Outputs[signal]();\n    }, i * delay);\n  }\n  // Send the Success signal\n  Outputs.Success();\n} else {\n  // If the page is not loaded, send the Failure signal\n  Outputs.Failure();\n}\n"},"snowflakeId":"019110414091-4otbtb","type":"user"},{"type":"assistant","content":"\nThis function triggers a specified signal a number of times with a delay between each repetition when a page is loaded. \n\nThe inputs for this function are <span style=\"color: var(--base-color-yellow-400);\">Inputs.Repetitions</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Delay</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Signal</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.PageLoaded</span>. If these inputs are not set, they will default to 5 repetitions, a delay of 1000 milliseconds, and a signal named 'Signal'. \n\nIf the page is loaded, the function will repeat the signal for the specified number of repetitions with the specified delay between each repetition. After all repetitions are done, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the page is not loaded, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019110417664-scmizh","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a7d62c7f-c0ce-5903-076f-78ba15e277c5","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-237,"y":-8,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        // Check if the key starts with \"fish-\"\n        if (localStorage.key(i).startsWith('wallpaper-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Fish Progress: # / 40\"\n    Outputs.CountText = `Carpet Progress: ${count} / 67`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["9814e4a5-3753-08b1-152b-a8624898e356"]}},{"name":"/Collection Pages/Wallpaper/Wallpaper Logic","id":"10c5ba26-8e09-a9a1-a8f3-caa1dffc6805","graph":{"connections":[{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-ID","toId":"e06217fc-567e-1732-df93-2fc931db2fe7","toProperty":"in-ID"},{"fromId":"e06217fc-567e-1732-df93-2fc931db2fe7","fromProperty":"out-ID","toId":"c23284af-6e4a-dbd4-7232-be11ec5375c2","toProperty":"modelId"},{"fromId":"e06217fc-567e-1732-df93-2fc931db2fe7","fromProperty":"out-Checked","toId":"c23284af-6e4a-dbd4-7232-be11ec5375c2","toProperty":"prop-Checked"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Label","toId":"e06217fc-567e-1732-df93-2fc931db2fe7","toProperty":"in-Label"},{"fromId":"4ab0ff49-df93-91dd-96d9-9eef669e7369","fromProperty":"id","toId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","toProperty":"in-ID"},{"fromId":"4ab0ff49-df93-91dd-96d9-9eef669e7369","fromProperty":"prop-Label","toId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","toProperty":"in-Label"},{"fromId":"4ab0ff49-df93-91dd-96d9-9eef669e7369","fromProperty":"prop-Image","toId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","toProperty":"in-Icon"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Label","toId":"b0d4a6cf-a7a7-5db0-8b0f-fef048fd4237","toProperty":"text"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Icon","toId":"00d3683d-dbee-3a78-1ff0-7eafe714c295","toProperty":"src"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Price","toId":"cb4f99ca-db16-aef3-6cc0-f3c54e46828d","toProperty":"text"},{"fromId":"4ab0ff49-df93-91dd-96d9-9eef669e7369","fromProperty":"prop-Checked","toId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","toProperty":"in-Checked"},{"fromId":"4ab0ff49-df93-91dd-96d9-9eef669e7369","fromProperty":"prop-Price","toId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","toProperty":"in-Price"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Price","toId":"e06217fc-567e-1732-df93-2fc931db2fe7","toProperty":"in-Price"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Icon","toId":"e06217fc-567e-1732-df93-2fc931db2fe7","toProperty":"in-Icon"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Checked","toId":"09c65431-9cd1-604d-2ab9-dcf2775dd160","toProperty":"checked"},{"fromId":"09c65431-9cd1-604d-2ab9-dcf2775dd160","fromProperty":"checked","toId":"e06217fc-567e-1732-df93-2fc931db2fe7","toProperty":"in-Checked"},{"fromId":"09c65431-9cd1-604d-2ab9-dcf2775dd160","fromProperty":"onChange","toId":"e06217fc-567e-1732-df93-2fc931db2fe7","toProperty":"in-Changed"},{"fromId":"09c65431-9cd1-604d-2ab9-dcf2775dd160","fromProperty":"onChange","toId":"c23284af-6e4a-dbd4-7232-be11ec5375c2","toProperty":"store"},{"fromId":"4ab0ff49-df93-91dd-96d9-9eef669e7369","fromProperty":"prop-Obtained","toId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","toProperty":"in-Obtained"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Obtained","toId":"e06217fc-567e-1732-df93-2fc931db2fe7","toProperty":"in-Obtained"},{"fromId":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","fromProperty":"out-Obtained","toId":"9cc5beba-baef-1b90-6249-829873a84068","toProperty":"text"}],"roots":[{"id":"38f09fcf-df65-0e18-2a7c-004d0a4424d9","type":"Group","label":"Group","x":5,"y":7,"parameters":{"flexDirection":"column","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":15,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c76570c5-3f1b-69dc-aaeb-59acf8fb6e1b","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9f535c8c-d724-bf3a-cc0e-689724af83aa","type":"Text","parameters":{"text":"Icon","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"e0312226-cbaf-4dc7-edce-9b635c7fb363","type":"Text","parameters":{"text":"Name","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"1b38c56a-edae-1d52-9eac-087f92d84503","type":"Text","parameters":{"text":"Collected","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"cb44d8fe-eeee-8d1a-c8d1-b35778d38cf3","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginTop":{"value":8,"unit":"px"},"marginBottom":{"value":-72,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"589cbd45-7495-402b-ca91-fbec14c543e4","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"00d3683d-dbee-3a78-1ff0-7eafe714c295","type":"Image","parameters":{"src":"images/paintings/64px-Scary_Painting_PG_Model.png","minWidth":{"value":64,"unit":"px"},"maxWidth":{"value":64,"unit":"px"},"minHeight":{"value":64,"unit":"px"},"maxHeight":{"value":64,"unit":"px"},"alignX":"center","marginTop":{"value":1,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"b0d4a6cf-a7a7-5db0-8b0f-fef048fd4237","type":"Text","parameters":{"text":"Label","textStyle":"Body Small","wordBreak":"normal","minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"marginTop":{"value":26,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f666f1d0-9171-af82-bc32-13d020589a44","type":"Group","parameters":{"minWidth":{"value":33,"unit":"%"},"maxWidth":{"value":33,"unit":"%"},"minHeight":{"value":33,"unit":"%"},"maxHeight":{"value":33,"unit":"%"},"alignX":"right","flexDirection":"row","justifyContent":"center","alignY":"center","marginBottom":{"value":53,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"09c65431-9cd1-604d-2ab9-dcf2775dd160","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/icons/leaf.png","iconSize":{"value":40,"unit":"px"},"width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"checked":false},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"c057ceed-13a8-d7bd-9719-ca2deff8c4ed","type":"Group","label":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":3,"unit":"px"},"borderColor":"Nook Tan Dark","backgroundColor":"Nook Tan","marginTop":{"value":40,"unit":"px"},"marginBottom":{"value":-5,"unit":"px"},"borderRadius":{"value":12,"unit":"px"},"marginRight":{"value":5,"unit":"px"},"marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1a0d6a6f-2cf5-f422-e22d-1096cb6a7fab","type":"Text","parameters":{"text":"Price","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"14d38d5b-e223-9b55-9510-c01b769aad1d","type":"Text","parameters":{"text":"Obtained from","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a37f89e5-1e76-ec21-c48a-a8075ab97413","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","marginLeft":{"value":5,"unit":"px"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"09d8085c-da63-0841-4030-3f9b74af6ae4","type":"Image","parameters":{"src":"be","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"cb4f99ca-db16-aef3-6cc0-f3c54e46828d","type":"Text","parameters":{"text":"Price","textAlignX":"center","marginTop":{"value":10,"unit":"px"},"maxHeight":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minWidth":{"value":50,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]},{"id":"9cc5beba-baef-1b90-6249-829873a84068","type":"Text","parameters":{"text":"HRA Points","minWidth":{"value":50,"unit":"%"},"maxWidth":{"value":50,"unit":"%"},"minHeight":{"value":50,"unit":"%"},"maxHeight":{"value":50,"unit":"%"},"alignX":"center","marginTop":{"value":10,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"4ab0ff49-df93-91dd-96d9-9eef669e7369","type":"Model2","x":-868.3167870105354,"y":-175.92117924202546,"parameters":{"idSource":"foreach","properties":"Image,Label,Price,Checked,id,HRA,Obtained"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Image","displayName":"Image","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Image Changed","name":"changed-Image","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Price","displayName":"Price","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Price Changed","name":"changed-Price","index":12},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":13},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":14},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-id","displayName":"id","index":15},{"type":"signal","plug":"output","group":"Changed Events","displayName":"id Changed","name":"changed-id","index":16},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-HRA","displayName":"HRA","index":17},{"type":"signal","plug":"output","group":"Changed Events","displayName":"HRA Changed","name":"changed-HRA","index":18},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Obtained","displayName":"Obtained","index":19},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Obtained Changed","name":"changed-Obtained","index":20}],"children":[]},{"id":"c23284af-6e4a-dbd4-7232-be11ec5375c2","type":"SetModelProperties","x":665,"y":126,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"6263cb2c-ba70-17ad-2a8d-3b22a3ace73e","type":"JavaScriptFunction","label":"Load and Pass-through Data with Checked State","x":-494.7722623368452,"y":-204.83212989464477,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst obtained = Inputs.Obtained || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Obtained = obtained;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Obtained = result.obtained || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":21}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}},{"content":"Modify to have passthrough: id, Label, Price, Icon, Weather, Time, Months\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || ''; // Added price\nconst icon = Inputs.Icon || ''; // Added icon\nconst weather = Inputs.Weather || ''; // Added weather\nconst time = Inputs.Time || ''; // Added time\nconst months = Inputs.Months || ''; // Added months\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price; // Added price\n    Outputs.Icon = icon; // Added icon\n    Outputs.Weather = weather; // Added weather\n    Outputs.Time = time; // Added time\n    Outputs.Months = months; // Added months\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Weather = result.weather || ''; // Added weather handling\n        Outputs.Time = result.time || ''; // Added time handling\n        Outputs.Months = result.months || ''; // Added months handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"01911077fcf6-xgzdpi","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. \n\nIt takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>. If the data is found in the local storage, it is loaded and sent to the corresponding outputs. If the data is not found, the function passes through the input values to the outputs directly.\n\nThe function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal if the data is successfully loaded from the local storage. If the data is not found in the local storage, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal and passes through the input values to the outputs.\n","snowflakeId":"019110783d63-p3pe7w","metadata":{}},{"content":"Re-add the Checked functions how they were.  I still need those.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst price = Inputs.Price || '';\nconst icon = Inputs.Icon || '';\nconst weather = Inputs.Weather || '';\nconst time = Inputs.Time || '';\nconst months = Inputs.Months || '';\nconst checked = Inputs.Checked || false; // Added checked\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Price = price;\n    Outputs.Icon = icon;\n    Outputs.Weather = weather;\n    Outputs.Time = time;\n    Outputs.Months = months;\n    Outputs.Checked = checked; // Added checked\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Price = result.price || '';\n        Outputs.Icon = result.icon || '';\n        Outputs.Weather = result.weather || '';\n        Outputs.Time = result.time || '';\n        Outputs.Months = result.months || '';\n        Outputs.Checked = result.checked || false; // Added checked handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"snowflakeId":"019110794168-yd4cs3","type":"user"},{"type":"assistant","content":"\nThis function loads data from the local storage and passes it through to the outputs. If the data is not found in the local storage, it passes through the input values to the outputs.\n\nThe function takes several inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Price</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Icon</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Weather</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Time</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Months</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input is a boolean value indicating whether the item is checked or not.\n\nThe function first loads the data from the local storage using the <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span> as the key. If the data is found, it sets the outputs to the values found in the local storage. If the data is not found, it sets the outputs to the input values and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nThe function also handles the \"Checked\" state. If the data is found in the local storage, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the value found in the local storage. If the data is not found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> output to the <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> input value.\n\nIf the data loading is successful, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"019110797ebc-ztw7yg","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"e06217fc-567e-1732-df93-2fc931db2fe7","type":"JavaScriptFunction","x":376.5547532630967,"y":-189.50812225197785,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst time = Inputs.Time || ''; // Added time\r\nconst months = Inputs.Months || ''; // Added months\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.time !== selection.time ||\r\n                    existingItem.months !== selection.months) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Time = time; // Added time\r\n    Outputs.Months = months; // Added months\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, time, months }; // Added obtained, time, and months\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Time","displayName":"Time","plug":"input","type":"*","group":"Inputs","index":11},{"name":"in-Months","displayName":"Months","plug":"input","type":"*","group":"Inputs","index":12},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":14},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":22},{"name":"out-Time","displayName":"Time","plug":"output","type":"*","group":"Outputs","index":23},{"name":"out-Months","displayName":"Months","plug":"output","type":"*","group":"Outputs","index":24}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["38f09fcf-df65-0e18-2a7c-004d0a4424d9"]}},{"name":"/Collection Pages/Wallpaper/Wallpaper Logic/Options","id":"6e1fad74-f156-1add-de5d-154ba81fce36","graph":{"connections":[{"fromId":"a09bb62c-283d-03fe-4838-5eef8aa1ce4f","fromProperty":"id","toId":"30c57329-f333-3d5a-6d5b-28486167fa91","toProperty":"in-ID"},{"fromId":"a09bb62c-283d-03fe-4838-5eef8aa1ce4f","fromProperty":"prop-Label","toId":"30c57329-f333-3d5a-6d5b-28486167fa91","toProperty":"in-Label"},{"fromId":"a09bb62c-283d-03fe-4838-5eef8aa1ce4f","fromProperty":"prop-Checked","toId":"30c57329-f333-3d5a-6d5b-28486167fa91","toProperty":"in-Checked"},{"fromId":"30c57329-f333-3d5a-6d5b-28486167fa91","fromProperty":"out-ID","toId":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","toProperty":"in-ID"},{"fromId":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","fromProperty":"out-ID","toId":"6842d9b0-2719-b86d-a62e-66f304235414","toProperty":"modelId"},{"fromId":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","fromProperty":"out-Checked","toId":"6842d9b0-2719-b86d-a62e-66f304235414","toProperty":"prop-Checked"},{"fromId":"30c57329-f333-3d5a-6d5b-28486167fa91","fromProperty":"out-Label","toId":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","toProperty":"in-Label"},{"fromId":"a09bb62c-283d-03fe-4838-5eef8aa1ce4f","fromProperty":"prop-Icon","toId":"30c57329-f333-3d5a-6d5b-28486167fa91","toProperty":"in-Icon"},{"fromId":"30c57329-f333-3d5a-6d5b-28486167fa91","fromProperty":"out-Icon","toId":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","toProperty":"in-Icon"},{"fromId":"6842d9b0-2719-b86d-a62e-66f304235414","fromProperty":"stored","toId":"729fc135-6b92-4015-70aa-d832eebffd0e","toProperty":"Selection Changed"},{"fromId":"e97df50a-46fb-acd3-528f-511dc56e3a5f","fromProperty":"onChange","toId":"6842d9b0-2719-b86d-a62e-66f304235414","toProperty":"store"},{"fromId":"e97df50a-46fb-acd3-528f-511dc56e3a5f","fromProperty":"onChange","toId":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","toProperty":"in-Changed"},{"fromId":"e97df50a-46fb-acd3-528f-511dc56e3a5f","fromProperty":"checked","toId":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","toProperty":"in-Checked"},{"fromId":"30c57329-f333-3d5a-6d5b-28486167fa91","fromProperty":"out-Checked","toId":"e97df50a-46fb-acd3-528f-511dc56e3a5f","toProperty":"checked"},{"fromId":"30c57329-f333-3d5a-6d5b-28486167fa91","fromProperty":"out-Label","toId":"e97df50a-46fb-acd3-528f-511dc56e3a5f","toProperty":"label"}],"roots":[{"id":"bcfafc5e-9749-fb92-67d0-3e3cf05e5b72","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"e97df50a-46fb-acd3-528f-511dc56e3a5f","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a09bb62c-283d-03fe-4838-5eef8aa1ce4f","type":"Model2","x":-606,"y":175,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"6842d9b0-2719-b86d-a62e-66f304235414","type":"SetModelProperties","x":554,"y":175,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"plug":"input","group":"Property Types","displayName":"Checked","default":"*","name":"type-Checked","index":7}],"children":[]},{"id":"30c57329-f333-3d5a-6d5b-28486167fa91","type":"JavaScriptFunction","label":"Database Query Error","x":-334,"y":87,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a3674e4e-3c48-5fe6-b641-941ba50da5b7","type":"JavaScriptFunction","x":298,"y":71,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"729fc135-6b92-4015-70aa-d832eebffd0e","type":"Component Outputs","x":842,"y":135,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["bcfafc5e-9749-fb92-67d0-3e3cf05e5b72"]}},{"name":"/Multi Choice With Pills","id":"fa8803d5-e820-9426-45f4-2402c6f49034","graph":{"connections":[{"fromId":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","fromProperty":"at-Yes","toId":"831880d2-31b8-b247-6207-38dd2b66b4d6","toProperty":"mounted"},{"fromId":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","fromProperty":"at-No","toId":"a015276f-d4f1-23d8-d4b1-65338f85ddfb","toProperty":"mounted"},{"fromId":"f1d3e577-de7f-e7e4-c95a-461775763e3b","fromProperty":"out-Changed","toId":"951c33c8-8724-65b1-7278-b4b58913a1a8","toProperty":"Selection Changed"},{"fromId":"3fa11ad4-e424-4d15-54fb-e7100fbc1207","fromProperty":"Labels","toId":"eff0629e-740a-0d63-7c05-6d9f0e660b73","toProperty":"in-Labels"},{"fromId":"3fa11ad4-e424-4d15-54fb-e7100fbc1207","fromProperty":"Options","toId":"eff0629e-740a-0d63-7c05-6d9f0e660b73","toProperty":"in-Options"},{"fromId":"3fa11ad4-e424-4d15-54fb-e7100fbc1207","fromProperty":"Selection","toId":"eff0629e-740a-0d63-7c05-6d9f0e660b73","toProperty":"in-Selection"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Align Y","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"alignY"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Align X","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"alignX"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Margin Top","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"marginTop"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Margin Bottom","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"marginBottom"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Margin Left","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"marginLeft"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Margin Right","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"marginRight"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Position","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"position"},{"fromId":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","fromProperty":"Width","toId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","toProperty":"width"},{"fromId":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","fromProperty":"at-No","toId":"c244be23-2eb8-73af-8dc7-89205025d893","toProperty":"mounted"},{"fromId":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","fromProperty":"at-Yes","toId":"faa956a9-bc0c-e1a1-6017-dd473f287c49","toProperty":"mounted"},{"fromId":"db7bd8cc-5a46-5e19-adde-778dec81c0e5","fromProperty":"value-AllOptions","toId":"c239bedf-34d9-9511-93e9-cf664b14e153","toProperty":"items"},{"fromId":"3fa11ad4-e424-4d15-54fb-e7100fbc1207","fromProperty":"Option Template","toId":"c239bedf-34d9-9511-93e9-cf664b14e153","toProperty":"template"},{"fromId":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","fromProperty":"at-Yes","toId":"a52753a7-e571-462a-8057-2ed58e0a15b3","toProperty":"mounted"},{"fromId":"75fb893c-2515-4ec2-0eaf-04dd7b06f8c3","fromProperty":"onClick","toId":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","toProperty":"toggle"},{"fromId":"4a9731cf-2f5b-f0a1-9535-27d681997b78","fromProperty":"focusLost","toId":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","toProperty":"to-No"},{"fromId":"db7bd8cc-5a46-5e19-adde-778dec81c0e5","fromProperty":"value-CheckedOptions","toId":"951c33c8-8724-65b1-7278-b4b58913a1a8","toProperty":"Selection"},{"fromId":"c239bedf-34d9-9511-93e9-cf664b14e153","fromProperty":"itemOutputSignal-Selection Changed","toId":"f1d3e577-de7f-e7e4-c95a-461775763e3b","toProperty":"run"},{"fromId":"c244be23-2eb8-73af-8dc7-89205025d893","fromProperty":"onClick","toId":"21bc553b-c692-6204-5ae2-22a1f33855b7","toProperty":"run"},{"fromId":"faa956a9-bc0c-e1a1-6017-dd473f287c49","fromProperty":"onClick","toId":"21bc553b-c692-6204-5ae2-22a1f33855b7","toProperty":"run"},{"fromId":"c239bedf-34d9-9511-93e9-cf664b14e153","fromProperty":"itemOutputSignal-Selection Changed","toId":"21bc553b-c692-6204-5ae2-22a1f33855b7","toProperty":"run"}],"roots":[{"id":"4a9731cf-2f5b-f0a1-9535-27d681997b78","type":"Group","label":"Multi Choice With Pills","x":66,"y":-235,"parameters":{"backgroundColor":"transparent","sizeMode":"contentHeight"},"stateParameters":{"hover":{"backgroundColor":"transparent"}},"ports":[],"dynamicports":[],"children":[{"id":"7e2552f0-ca24-1b1f-270d-8c344d5da1d6","type":"Group","parameters":{"sizeMode":"contentHeight","height":{"value":40,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"75fb893c-2515-4ec2-0eaf-04dd7b06f8c3","type":"Group","label":"Dropdown wrapper","parameters":{"flexDirection":"row","borderWidth":{"value":1,"unit":"px"},"borderColor":"Grey - 700","paddingLeft":{"value":12,"unit":"px"},"paddingRight":{"value":12,"unit":"px"},"borderRadius":{"value":4,"unit":"px"},"sizeMode":"explicit","height":{"value":40,"unit":"px"},"clip":true,"styleCss":"cursor:pointer;"},"stateParameters":{"hover":{}},"ports":[],"dynamicports":[],"children":[{"id":"c244be23-2eb8-73af-8dc7-89205025d893","type":"Group","label":"Border neutral","parameters":{"position":"absolute","sizeMode":"explicit","borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","borderRadius":{"value":5,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"backgroundColor":"Nook Tan","marginLeft":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"faa956a9-bc0c-e1a1-6017-dd473f287c49","type":"Group","label":"Border active","parameters":{"position":"absolute","sizeMode":"explicit","borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","borderRadius":{"value":4,"unit":"px"},"backgroundColor":"Nook Tan","marginLeft":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"ecdd983b-5103-bfbc-4ea7-ce2593121cd8","type":"Text","parameters":{"text":"Select Villagers","alignY":"center","textStyle":"Label Large","color":"Nookmiles Brown","lineHeight":{"value":1,"unit":""},"sizeMode":"contentSize","pointerEventsMode":"explicit","pointerEventsEnabled":false},"ports":[],"dynamicports":[],"children":[]},{"id":"78043535-50d7-57b0-0157-a19ec1e130c6","type":"Group","label":"Icon wrapper","parameters":{"sizeMode":"contentSize","alignY":"center","alignX":"right","pointerEventsMode":"explicit","pointerEventsEnabled":false},"ports":[],"dynamicports":[],"children":[{"id":"831880d2-31b8-b247-6207-38dd2b66b4d6","type":"net.noodl.visual.icon","parameters":{"iconIconSource":{"class":"material-icons","code":"keyboard_arrow_up"},"iconColor":"Nookmiles Brown","alignY":"center","iconSize":{"value":20,"unit":"px"},"paddingTop":{"value":0,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"},"alignX":"right"},"ports":[],"dynamicports":[],"children":[]},{"id":"a015276f-d4f1-23d8-d4b1-65338f85ddfb","type":"net.noodl.visual.icon","parameters":{"iconIconSource":{"class":"material-icons","code":"keyboard_arrow_down"},"iconColor":"Nookmiles Brown","alignY":"center","iconSize":{"value":20,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"},"paddingTop":{"value":0,"unit":"px"},"alignX":"right"},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"a52753a7-e571-462a-8057-2ed58e0a15b3","type":"Group","label":"Dropdown sheet","parameters":{"sizeMode":"contentHeight","borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","position":"absolute","alignY":"bottom","transformY":{"value":100,"unit":"%"},"zIndex":1000,"backgroundColor":"Nook Tan","maxHeight":{"value":200,"unit":"px"},"scrollEnabled":true,"borderRadius":{"value":4,"unit":"px"},"marginBottom":{"value":-4,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"},"paddingTop":{"value":8,"unit":"px"},"paddingLeft":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c239bedf-34d9-9511-93e9-cf664b14e153","type":"For Each","parameters":{"template":"/Multi Choice With Pills/Option"},"ports":[],"dynamicports":[{"name":"itemOutputSignal-Selection Changed","displayName":"Selection Changed","type":"signal","plug":"output","group":"Item Signals","index":6},{"name":"inputMappingScript","type":{"name":"string","codeeditor":"javascript"},"displayName":"Script","group":"Input Mapping","default":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n})\n","plug":"input","index":7}],"children":[]}]}]},{"id":"f2efe1e4-a3d0-8c98-228f-c00d1217e732","type":"States","x":468.1724272204251,"y":488.7304973620814,"parameters":{"states":"Yes,No","currentState":"No"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To Yes","name":"to-Yes","group":"Go to state","index":6},{"plug":"output","type":"boolean","displayName":"At Yes","name":"at-Yes","group":"Current state","index":7},{"plug":"output","type":"signal","displayName":"Has Reached Yes","name":"reached-Yes","group":"Current state","index":8},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To No","name":"to-No","group":"Go to state","index":9},{"plug":"output","type":"boolean","displayName":"At No","name":"at-No","group":"Current state","index":10},{"plug":"output","type":"signal","displayName":"Has Reached No","name":"reached-No","group":"Current state","index":11},{"plug":"input","type":{"name":"enum","enums":["Yes","No"]},"group":"States","displayName":"State","name":"currentState","default":"Yes","index":12}],"children":[]},{"id":"3fa11ad4-e424-4d15-54fb-e7100fbc1207","type":"Component Inputs","x":-525.7743731243322,"y":62.67310282109537,"parameters":{},"ports":[{"name":"Options","plug":"output","type":{"name":"*"},"index":0,"group":"General"},{"name":"Selection","plug":"output","type":{"name":"*"},"index":1,"group":"General"},{"name":"Option Template","plug":"output","type":{"name":"*"},"index":4,"group":"Style"},{"name":"Pill Template","plug":"output","type":{"name":"*"},"index":5,"group":"Style"},{"name":"Labels","plug":"output","type":{"name":"*"},"group":"General","index":2},{"name":"Reset","plug":"output","type":{"name":"*"},"group":"General","index":3}],"dynamicports":[],"children":[]},{"id":"951c33c8-8724-65b1-7278-b4b58913a1a8","type":"Component Outputs","x":554.2054378772949,"y":261.50353218715463,"parameters":{},"ports":[{"name":"Selection","plug":"input","type":{"name":"*"},"index":1},{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"eff0629e-740a-0d63-7c05-6d9f0e660b73","type":"JavaScriptFunction","label":"Initialize","x":-181.55145953818874,"y":338.75066393811676,"parameters":{"functionScript":"if (!Inputs.Options) return // No options, no fun\n\n// Use the existing input objects if they have the necessary structure\nComponent.Object.AllOptions = Inputs.Options;\n\n// Filter checked options if necessary\nComponent.Object.CheckedOptions = Component.Object.AllOptions.filter(o => o.Checked);\n","scriptInputs":[{"id":"melj","label":"Options"},{"id":"pdiv","label":"Selection"},{"id":"b4i1","label":"Labels"}],"intype-Options":"array","intype-Selection":"array","intype-Labels":"array","in-Options":"['one','two','three']","in-Labels":"[\"One\",\"Two\",\"Three\"]"},"ports":[],"dynamicports":[{"name":"intype-Options","displayName":"Type","editorName":"Options | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"melj","index":4},{"name":"in-Options","displayName":"Options","plug":"input","type":"array","group":"Inputs","index":5},{"name":"intype-Selection","displayName":"Type","editorName":"Selection | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"pdiv","index":6},{"name":"in-Selection","displayName":"Selection","plug":"input","type":"array","group":"Inputs","index":7},{"name":"intype-Labels","displayName":"Type","editorName":"Labels | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"b4i1","index":8},{"name":"in-Labels","displayName":"Labels","plug":"input","type":"array","group":"Inputs","index":9}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"db7bd8cc-5a46-5e19-adde-778dec81c0e5","type":"net.noodl.ComponentObject","x":547,"y":78,"parameters":{"properties":"AllOptions,CheckedOptions,Selection"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"value-AllOptions","displayName":"AllOptions","index":4},{"type":"signal","plug":"output","group":"Changed Events","displayName":"AllOptions Changed","name":"changed-AllOptions","index":5},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"value-CheckedOptions","displayName":"CheckedOptions","index":6},{"type":"signal","plug":"output","group":"Changed Events","displayName":"CheckedOptions Changed","name":"changed-CheckedOptions","index":7},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"value-Selection","displayName":"Selection","index":8},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Selection Changed","name":"changed-Selection","index":9}],"children":[]},{"id":"f1d3e577-de7f-e7e4-c95a-461775763e3b","type":"JavaScriptFunction","label":"Update selection","x":-189.7903085206848,"y":197.4029212750337,"parameters":{"functionScript":"// Filter out checked options, this will have changed when the user clicked\n// a checkbox or pill\nComponent.Object.CheckedOptions = Component.Object.AllOptions.filter(o => o.Checked)\n\n// Create selection from checked options, only return value\nComponent.Object.Selection = Component.Object.CheckedOptions.map(o => o.Value)\n\nOutputs.Changed()","scriptInputs":[{"id":"melj","label":"Options"},{"id":"pdiv","label":"Selection"}],"intype-Options":"array","intype-Selection":"array"},"ports":[],"dynamicports":[{"name":"intype-Options","displayName":"Type","editorName":"Options | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"melj","index":4},{"name":"in-Options","displayName":"Options","plug":"input","type":"array","group":"Inputs","index":5},{"name":"intype-Selection","displayName":"Type","editorName":"Selection | Type","plug":"input","type":{"name":"enum","enums":[{"value":"string","label":"String"},{"value":"boolean","label":"Boolean"},{"value":"number","label":"Number"},{"value":"object","label":"Object"},{"value":"date","label":"Date"},{"value":"array","label":"Array"},{"value":"color","label":"Color"}],"allowEditOnly":true},"default":"string","parent":"scriptInputs","parentItemId":"pdiv","index":6},{"name":"in-Selection","displayName":"Selection","plug":"input","type":"array","group":"Inputs","index":7},{"name":"out-Changed","displayName":"Changed","plug":"output","type":"signal","group":"Outputs","index":8}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"c9864a2a-0e22-079e-7ad9-4689bc3eb323","type":"Component Inputs","x":-273.1814469793802,"y":-357.47432908119515,"parameters":{},"ports":[{"name":"Align X","plug":"output","type":{"name":"*"},"group":"Alignment","index":1},{"name":"Align Y","plug":"output","type":{"name":"*"},"group":"Alignment","index":0},{"name":"Position","plug":"output","type":{"name":"*"},"group":"Layout","index":7},{"name":"Margin Top","plug":"output","type":{"name":"*"},"group":"Margins","index":2},{"name":"Margin Bottom","plug":"output","type":{"name":"*"},"group":"Margins","index":3},{"name":"Margin Left","plug":"output","type":{"name":"*"},"group":"Margins","index":4},{"name":"Margin Right","plug":"output","type":{"name":"*"},"group":"Margins","index":5},{"name":"Width","plug":"output","type":{"name":"*"},"group":"Dimensions","index":8},{"name":"Label","plug":"output","type":{"name":"*"},"group":"Label","index":9},{"name":"Show Label","plug":"output","type":{"name":"*"},"group":"Label","index":10}],"dynamicports":[],"children":[]},{"id":"21bc553b-c692-6204-5ae2-22a1f33855b7","type":"JavaScriptFunction","label":"Play Audio File","x":501,"y":-168,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["4a9731cf-2f5b-f0a1-9535-27d681997b78"]},"metadata":{"canvasPos":{"x":2386.3735291498087,"y":-103.0003449056469},"canvasSize":{"width":"217px","height":"auto"}}},{"name":"/Multi Choice With Pills/Option","id":"3738f753-c0ea-8dfd-ef29-e9405f94a966","graph":{"connections":[{"fromId":"a9f405e4-cc30-3a78-2bb9-8ae23ecb97a8","fromProperty":"id","toId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","toProperty":"in-ID"},{"fromId":"a9f405e4-cc30-3a78-2bb9-8ae23ecb97a8","fromProperty":"prop-Label","toId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","toProperty":"in-Label"},{"fromId":"a9f405e4-cc30-3a78-2bb9-8ae23ecb97a8","fromProperty":"prop-Checked","toId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","toProperty":"in-Checked"},{"fromId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","fromProperty":"out-Label","toId":"d36965f6-7990-2136-3ff4-5df4c9e002db","toProperty":"label"},{"fromId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","fromProperty":"out-Checked","toId":"d36965f6-7990-2136-3ff4-5df4c9e002db","toProperty":"checked"},{"fromId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","fromProperty":"out-ID","toId":"29955b95-c897-2ac4-49cb-31612dfa2162","toProperty":"in-ID"},{"fromId":"29955b95-c897-2ac4-49cb-31612dfa2162","fromProperty":"out-ID","toId":"256b57af-7416-de03-c1cf-0509ee75396b","toProperty":"modelId"},{"fromId":"d36965f6-7990-2136-3ff4-5df4c9e002db","fromProperty":"checked","toId":"29955b95-c897-2ac4-49cb-31612dfa2162","toProperty":"in-Checked"},{"fromId":"29955b95-c897-2ac4-49cb-31612dfa2162","fromProperty":"out-Checked","toId":"256b57af-7416-de03-c1cf-0509ee75396b","toProperty":"prop-Checked"},{"fromId":"d36965f6-7990-2136-3ff4-5df4c9e002db","fromProperty":"onChange","toId":"29955b95-c897-2ac4-49cb-31612dfa2162","toProperty":"in-Changed"},{"fromId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","fromProperty":"out-Label","toId":"29955b95-c897-2ac4-49cb-31612dfa2162","toProperty":"in-Label"},{"fromId":"d36965f6-7990-2136-3ff4-5df4c9e002db","fromProperty":"onChange","toId":"256b57af-7416-de03-c1cf-0509ee75396b","toProperty":"store"},{"fromId":"a9f405e4-cc30-3a78-2bb9-8ae23ecb97a8","fromProperty":"prop-Icon","toId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","toProperty":"in-Icon"},{"fromId":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","fromProperty":"out-Icon","toId":"29955b95-c897-2ac4-49cb-31612dfa2162","toProperty":"in-Icon"},{"fromId":"256b57af-7416-de03-c1cf-0509ee75396b","fromProperty":"stored","toId":"2e4c60da-888c-ddab-b4fb-449c4e27f614","toProperty":"Selection Changed"}],"roots":[{"id":"344de8a3-04e1-ac99-1726-ea6c8d54f824","type":"Group","label":"Option item","x":-237.13418498559759,"y":-86.30538651894608,"parameters":{"sizeMode":"contentHeight","marginBottom":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d36965f6-7990-2136-3ff4-5df4c9e002db","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a9f405e4-cc30-3a78-2bb9-8ae23ecb97a8","type":"Model2","x":-819,"y":-55,"parameters":{"properties":"Label,Checked,Icon","idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Label","displayName":"Label","index":7},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Label Changed","name":"changed-Label","index":8},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Checked","displayName":"Checked","index":9},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Checked Changed","name":"changed-Checked","index":10},{"type":{"name":"*","allowConnectionsOnly":true},"plug":"input/output","group":"Properties","name":"prop-Icon","displayName":"Icon","index":11},{"type":"signal","plug":"output","group":"Changed Events","displayName":"Icon Changed","name":"changed-Icon","index":12}],"children":[]},{"id":"256b57af-7416-de03-c1cf-0509ee75396b","type":"SetModelProperties","x":344.2410381499238,"y":-52.08104732733824,"parameters":{"properties":"Checked"},"ports":[],"dynamicports":[{"type":{"name":"*"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"default":"*","plug":"input","group":"Property Types","displayName":"Checked","name":"type-Checked","index":7}],"children":[]},{"id":"c2e8b55e-a0c6-e68c-a458-eb73746b2729","type":"JavaScriptFunction","label":"Database Query Error","x":-547,"y":-142,"parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\n\n// Function to load data from localStorage\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        callback(JSON.parse(storedData));\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":10},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":13}],"children":[],"metadata":{"prompt":{"history":[{"content":"Inputs: ID, Label, Checked, Outputs: ID, Label, Checked.  Function checks openDatabase 'MyAppDatabase' to find pre-existing object.  If it does not exist, this node will act as passthrough.  If it does exist, it will send existing.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b613cc7-mdiplz","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a Web SQL Database named 'MyAppDatabase'. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs. It then opens the database and checks if an object with the given ID exists. \n\nIf the object exists, it outputs the existing data through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf the object does not exist, it acts as a passthrough, outputting the input data and triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIn case of any errors during the transaction, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nPlease note that the Web SQL Database is a non-standard feature and it's not recommended for use in new projects. It's better to use IndexedDB instead.\n","snowflakeId":"01910b6174b8-kcdt3c","metadata":{}},{"content":"in the case of failure, it should act as passthrough as well","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\n// Open the database\nconst db = openDatabase('MyAppDatabase', '1.0', 'My App Database', 2 * 1024 * 1024);\n\n// Check if the object exists in the database\ndb.transaction(function (tx) {\n  tx.executeSql('SELECT * FROM Objects WHERE ID = ?', [id], function (tx, results) {\n    if (results.rows.length > 0) {\n      // If the object exists, send the existing data\n      Outputs.ID = results.rows.item(0).ID;\n      Outputs.Label = results.rows.item(0).Label;\n      Outputs.Checked = results.rows.item(0).Checked;\n      Outputs.Success();\n    } else {\n      // If the object does not exist, act as a passthrough\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  }, function (tx, error) {\n    // Handle any errors\n    Outputs.error = error;\n    // If there is an error, act as a passthrough\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Failure();\n  });\n});\n"},"snowflakeId":"01910b62e6b7-x332nf","type":"user"},{"type":"assistant","content":"\nThis function checks if an object exists in a database and outputs the object's data if it exists. If the object does not exist or if there is an error, it acts as a passthrough and outputs the original inputs.\n\nThe function takes three inputs: <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span>. It opens a database named 'MyAppDatabase' and checks if an object with the given ID exists in the 'Objects' table.\n\nIf the object exists, it outputs the object's ID, Label, and Checked status through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> respectively, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the object does not exist, it outputs the original inputs through <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n\nIn case of an error during the database transaction, it outputs the error through <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span>, acts as a passthrough by outputting the original inputs, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b631f67-zlp59d","metadata":{}},{"content":"It is not currently outputting anything.  It should be acting as passthrough due to error: Error in JS node run code. ReferenceError: openDatabase is not defined ReferenceError: openDatabase is not defined\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\nconst id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE Objects (ID TEXT, Label TEXT, Checked BOOLEAN)\");\n\n  db.get('SELECT * FROM Objects WHERE ID = ?', [id], function(err, row) {\n    if (err) {\n      Outputs.error = err;\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    } else if (row) {\n      Outputs.ID = row.ID;\n      Outputs.Label = row.Label;\n      Outputs.Checked = row.Checked;\n      Outputs.Success();\n    } else {\n      Outputs.ID = id;\n      Outputs.Label = label;\n      Outputs.Checked = checked;\n      Outputs.Failure();\n    }\n  });\n});\n\ndb.close();\n"},"snowflakeId":"01910b6404e6-6g3c67","type":"user"},{"type":"assistant","content":"\nThe function is designed to interact with a database using the `openDatabase` function, which is part of the Web SQL Database specification. However, the `openDatabase` function is not defined, causing an error. \n\nWeb SQL is no longer recommended for use, and if you're running this code in an environment where Web SQL is not supported, such as Node.js or modern browsers, you'll encounter this error. \n\nIn such cases, you'll need to use a different method to interact with a database. For example, you could use the `sqlite3` package in Node.js or the IndexedDB API in a browser. \n\nThe function takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Inputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Inputs.Checked</span> as inputs, and attempts to select a row from the \"Objects\" table in the database where the ID matches the input ID. \n\nIf there's an error during this process, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.error</span> output to the error message, and the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal. \n\nIf a matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to the values from the row, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf no matching row is found, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.ID</span>, <span style=\"color: var(--base-color-yellow-400);\">Outputs.Label</span>, and <span style=\"color: var(--base-color-yellow-400);\">Outputs.Checked</span> outputs to their respective input values, and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"01910b644fe8-49nvvk","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"29955b95-c897-2ac4-49cb-31612dfa2162","type":"JavaScriptFunction","x":84,"y":-157,"parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon) {\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon }; // Added icon\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[],"dynamicports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":11},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":16}],"children":[],"metadata":{"merge":{"soureCodePorts":["functionScript"]}}},{"id":"2e4c60da-888c-ddab-b4fb-449c4e27f614","type":"Component Outputs","x":625,"y":-96,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["344de8a3-04e1-ac99-1726-ea6c8d54f824"]},"metadata":{"canvasPos":{"x":2385.8948358589055,"y":3.643811689152461},"canvasSize":{"width":"217px","height":"auto"}}},{"name":"/Multi Choice With Pills/Pill","id":"073c86c2-0b19-094d-af22-6357e9ade8e7","graph":{"connections":[{"fromId":"fcdb537a-7794-7916-bbf6-3ab726ccf99b","fromProperty":"onClick","toId":"951c2517-6431-797d-6980-16d285aa222e","toProperty":"store"},{"fromId":"951c2517-6431-797d-6980-16d285aa222e","fromProperty":"stored","toId":"d360d2fd-a5ef-2d8a-420e-a17f3dd14c52","toProperty":"Selection Changed"},{"fromId":"785f189e-f2f9-325b-acfa-a60403c2bcd0","fromProperty":"Label","toId":"90f22133-ba44-262e-74c1-6b440f46be0c","toProperty":"text"}],"roots":[{"id":"a8dc1828-f931-8dca-2232-28830d8b61c5","type":"Group","label":"Pill","x":-143,"y":-55,"parameters":{"backgroundColor":"Primary","borderRadius":{"value":4,"unit":"px"},"sizeMode":"contentWidth","flexDirection":"row","paddingLeft":{"value":12,"unit":"px"},"height":{"value":28,"unit":"px"},"alignItems":"center","paddingRight":{"value":4,"unit":"px"},"marginBottom":{"value":4,"unit":"px"},"marginRight":{"value":4,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"90f22133-ba44-262e-74c1-6b440f46be0c","type":"Text","label":"Label","parameters":{"alignY":"center","color":"#FFFFFF","textStyle":"Label Medium"},"ports":[],"dynamicports":[],"children":[]},{"id":"fcdb537a-7794-7916-bbf6-3ab726ccf99b","type":"net.noodl.controls.button","label":"Cancel Icon","parameters":{"useIcon":true,"useLabel":false,"backgroundColor":"#5836F500","iconIconSource":{"class":"material-icons","code":"close"},"sizeMode":"contentSize","minWidth":{"value":0,"unit":"px"},"paddingLeft":{"value":4,"unit":"px"},"paddingRight":{"value":4,"unit":"px"},"paddingTop":{"value":4,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"},"iconSize":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"785f189e-f2f9-325b-acfa-a60403c2bcd0","type":"Component Inputs","x":-390.8910890537191,"y":11.304641264364761,"parameters":{},"ports":[{"name":"Label","plug":"output","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]},{"id":"951c2517-6431-797d-6980-16d285aa222e","type":"SetModelProperties","x":112.24313539089337,"y":83.21443326892563,"parameters":{"properties":"Checked","type-Checked":"boolean","prop-Checked":false,"idSource":"foreach"},"ports":[],"dynamicports":[{"type":{"name":"boolean"},"plug":"input","group":"Property Values","displayName":"Checked","name":"prop-Checked","index":6},{"type":{"name":"enum","enums":[{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Number","value":"number"},{"label":"Date","value":"date"},{"label":"Array","value":"array"},{"label":"Object","value":"object"},{"label":"Any","value":"*"}],"allowEditOnly":true},"default":"*","plug":"input","group":"Property Types","displayName":"Checked","name":"type-Checked","index":7}],"children":[]},{"id":"d360d2fd-a5ef-2d8a-420e-a17f3dd14c52","type":"Component Outputs","x":355.8106306487431,"y":66.82322831935352,"parameters":{},"ports":[{"name":"Selection Changed","plug":"input","type":{"name":"*"},"index":1}],"dynamicports":[],"children":[]}],"visualRoots":["a8dc1828-f931-8dca-2232-28830d8b61c5"]},"metadata":{"canvasPos":{"x":2388.6230141451306,"y":96.64760895061303},"canvasSize":{"width":"112px","height":"auto"}}},{"name":"/Navbar 2.0/navbar2.0","id":"91ae565a-e51f-cc7e-5f91-ca1aaef96d24","graph":{"connections":[{"fromId":"4c974e43-2210-0d1a-903f-96ded42513a4","fromProperty":"onClick","toId":"375f361d-2b25-f755-f3c6-5685e2cdf04e","toProperty":"navigate"},{"fromId":"d18e8bd1-7713-e260-9354-2022bf8b7724","fromProperty":"onClick","toId":"f3f7bff3-7864-0ab4-e173-1622540cb733","toProperty":"in-OnClick"},{"fromId":"3eb40a3c-5061-d12b-9bda-16f8e26fa54a","fromProperty":"onClick","toId":"70e221bb-74a9-2d27-7ed1-2fdb2993ee7d","toProperty":"do"},{"fromId":"3eb40a3c-5061-d12b-9bda-16f8e26fa54a","fromProperty":"onClick","toId":"671f4fb2-0b46-7191-a648-a44dc07c3559","toProperty":"run"},{"fromId":"d18e8bd1-7713-e260-9354-2022bf8b7724","fromProperty":"onClick","toId":"671f4fb2-0b46-7191-a648-a44dc07c3559","toProperty":"run"},{"fromId":"4c974e43-2210-0d1a-903f-96ded42513a4","fromProperty":"onClick","toId":"671f4fb2-0b46-7191-a648-a44dc07c3559","toProperty":"run"}],"roots":[{"id":"f7d94ce6-2249-3e2e-9259-eccfc8c0e5cb","type":"Group","x":0,"y":0,"parameters":{"backgroundColor":"#000000","flexDirection":"row","alignX":"center"},"ports":[],"dynamicports":[],"children":[{"id":"1efe95ca-e24c-569c-e5b9-ed9f524a268a","type":"Group","parameters":{"flexDirection":"row","maxWidth":{"value":500,"unit":"px"},"alignX":"center"},"ports":[],"dynamicports":[],"children":[{"id":"d18e8bd1-7713-e260-9354-2022bf8b7724","type":"Image","parameters":{"src":"images/back.png","alignX":"center","sizeMode":"explicit"},"ports":[],"dynamicports":[],"children":[]},{"id":"4c974e43-2210-0d1a-903f-96ded42513a4","type":"Image","label":"Image","parameters":{"src":"images/home.png","alignX":"center","sizeMode":"explicit","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"3eb40a3c-5061-d12b-9bda-16f8e26fa54a","type":"Image","parameters":{"src":"images/discord.png","alignX":"center","sizeMode":"explicit","mixBlendMode":"luminosity"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"375f361d-2b25-f755-f3c6-5685e2cdf04e","type":"RouterNavigate","x":238,"y":127,"parameters":{"router":"Main","target":"/Pages/Home"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"f3f7bff3-7864-0ab4-e173-1622540cb733","type":"JavaScriptFunction","label":"Double Back Navigation","x":237,"y":-21,"parameters":{"functionScript":"// Listen for the 'OnClick' signal\nif (Inputs.OnClick) {\n    // Check if the previous page URL includes \"splash\"\n    if (document.referrer.includes(\"splash\")) {\n        // If it does, force navigation to the home page\n        window.location.replace('/#/home');\n    } else {\n        // Otherwise, navigate back one page\n        window.history.back();\n    }\n\n    // Signal that the operation was successful\n    Outputs.Success();\n} else {\n    // If 'OnClick' signal is not received, signal a failure\n    Outputs.Failure();\n}\n"},"ports":[],"dynamicports":[{"name":"in-OnClick","displayName":"OnClick","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"navigate back one page on click","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Listen for the 'OnClick' signal\nif (Inputs.OnClick) {\n    // Use the 'history' object to navigate back one page\n    window.history.back();\n    // Signal that the operation was successful\n    Outputs.Success();\n} else {\n    // If 'OnClick' signal is not received, signal a failure\n    Outputs.Failure();\n}\n"},"snowflakeId":"0191479bba5c-gjk20e","type":"user"},{"type":"assistant","content":"\nThis function listens for an <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnClick</span> signal and uses the browser's history object to navigate back one page when the signal is received. \n\nAfter the navigation, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the operation was successful. \n\nIf the <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnClick</span> signal is not received, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal to indicate a failure. \n\nPlease note that this function might not work in Noodl as it doesn't support direct manipulation of the browser's history. This is just a general JavaScript approach to navigate back one page.\n","snowflakeId":"0191479bd9ad-jxdq7h","metadata":{}},{"content":"if the page name includes \"splash\" when navigating back, navigate back twice.","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Listen for the 'OnClick' signal\nif (Inputs.OnClick) {\n    // Use the 'history' object to navigate back one page\n    window.history.back();\n\n    // Check if the previous page name includes \"splash\"\n    if (document.referrer.includes(\"splash\")) {\n        // If it does, navigate back one more page\n        window.history.back();\n    }\n\n    // Signal that the operation was successful\n    Outputs.Success();\n} else {\n    // If 'OnClick' signal is not received, signal a failure\n    Outputs.Failure();\n}\n"},"snowflakeId":"0191479cc5a5-3wold4","type":"user"},{"type":"assistant","content":"\nThis function listens for an <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnClick</span> signal and navigates back one page using the 'history' object of the window. \n\nIf the previous page's name includes \"splash\", it navigates back one more page. After the navigation, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf the <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnClick</span> signal is not received, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191479ce8de-ostz4n","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"671f4fb2-0b46-7191-a648-a44dc07c3559","type":"JavaScriptFunction","label":"Play Audio File","x":-399,"y":157,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"70e221bb-74a9-2d27-7ed1-2fdb2993ee7d","type":"net.noodl.externallink","x":248.5,"y":284,"parameters":{"link":"https://discord.sterner.digital"},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":["f7d94ce6-2249-3e2e-9259-eccfc8c0e5cb"]}},{"name":"/Pages/Aboot","id":"159b13c7-288d-9163-8186-4c7e726cfeee","graph":{"connections":[{"fromId":"debbecc0-4826-6450-070c-32258121fa89","fromProperty":"onClick","toId":"5302dd65-d2b5-62ae-3b12-d73fb0101c7b","toProperty":"do"},{"fromId":"aac1f34c-8817-c4c0-3f8f-f2fe8ffe11f6","fromProperty":"onClick","toId":"48fe2577-5534-8b9d-8e15-13b6597fc292","toProperty":"do"},{"fromId":"199addc9-bde6-f432-3c4e-4944313d9c24","fromProperty":"onClick","toId":"5254b49d-a08a-c0b2-e480-ad29315ebc15","toProperty":"do"},{"fromId":"fb9be0eb-3d32-077f-43dd-9a5b40298985","fromProperty":"onClick","toId":"29d26c13-f1f4-4c6a-ea92-b16782ecf13f","toProperty":"navigate"},{"fromId":"f8b26939-458a-78e1-86a6-fcf8f5787e94","fromProperty":"onClick","toId":"0d4c15f1-08c1-551f-b0ca-356cbc31ac86","toProperty":"navigate"},{"fromId":"8c7a202f-a55d-1d2f-399c-7f130651ed74","fromProperty":"onClick","toId":"a78c5058-53bd-e0b2-6a9b-1864db94814b","toProperty":"do"}],"roots":[{"id":"b595c49f-39a2-e8db-1ea0-ac298ae11ee1","type":"Group","x":0,"y":0,"parameters":{"alignX":"center","cssClassName":"slideup"},"ports":[],"dynamicports":[],"children":[{"id":"53aa44df-73f9-221d-d8c4-734fe0b5c38d","type":"module.inlineHtml","label":"Star Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/star.png'),\r\n    url('/images/background/star.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"e1047c00-aba6-67d0-dbc5-c769acbfa70e","type":"Group","label":"About Group","parameters":{"borderRadius":{"value":12,"unit":"px"},"styleCss":"/* background: repeating-linear-gradient(\r\n  135deg,\r\n  #595959,\r\n  #595959 10px,\r\n  #707070 10px,\r\n  #707070 20px\r\n); */\r\n"},"ports":[],"dynamicports":[],"children":[{"id":"80307829-1b84-7f47-c651-69687294ad72","type":"Text","label":"About","parameters":{"text":"About","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"#FFFFFF"},"ports":[],"dynamicports":[],"children":[]},{"id":"0b406e9e-58d1-4bbc-e3bb-13514b8ebe04","type":"Group","label":"Privacy Policy","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Settings BG","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cf029684-e6d1-f704-dfe7-cda018970e55","type":"Group","label":"Privacy Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"bd6a426d-ac16-237f-1f0a-a602e797baa1","type":"Text","parameters":{"text":"😑 Ads","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"2cf28216-9404-34f7-dd9c-e0b457219447","type":"Group","label":"Privacy Description","parameters":{"flexDirection":"column","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"none","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"415f5156-1b45-cf53-9afb-5b1d5a16c714","type":"Text","parameters":{"color":"#000000","text":"This app is free and ad-supported. To remove ads and support future development, consider making a purchase.","alignY":"top","textAlignX":"center","marginBottom":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"fb9be0eb-3d32-077f-43dd-9a5b40298985","type":"net.noodl.controls.button","parameters":{"sizeMode":"contentHeight","marginBottom":{"value":10,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginRight":{"value":20,"unit":"px"},"marginLeft":{"value":20,"unit":"px"},"label":"Remove Ads"},"ports":[],"dynamicports":[],"children":[]},{"id":"f8b26939-458a-78e1-86a6-fcf8f5787e94","type":"net.noodl.controls.button","parameters":{"sizeMode":"contentHeight","marginBottom":{"value":0,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginRight":{"value":20,"unit":"px"},"marginLeft":{"value":20,"unit":"px"},"label":"Remove Ads + Buy Me a Coffee"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"cce40136-23b4-6daf-a80b-0075e3b6c9be","type":"Group","label":"Discord","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Settings BG","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"},"marginTop":{"value":20,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2e996264-8bd8-74fe-9b4b-d95524ad9e4f","type":"Group","label":"Discord Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e765fa53-5beb-5aad-0d8a-7355b23fc2f8","type":"Image","label":"Discord","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/discord.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain","alignY":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"bf3d3d95-c4ea-037a-3dcc-47507fc9d9b8","type":"Text","label":"Discord","parameters":{"text":"Discord","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"0c019868-e005-cd3e-e1a6-b065785497f3","type":"Group","label":"Discord Description","parameters":{"flexDirection":"column","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"none","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a8799d70-7b2e-ff99-e1b7-6d93812b0bed","type":"Text","parameters":{"color":"#000000","text":"Found a bug?  Have some feedback?  Want a free ad removal coupon?","alignY":"top","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"199addc9-bde6-f432-3c4e-4944313d9c24","type":"net.noodl.controls.button","label":"Discord","parameters":{"alignY":"bottom","alignX":"center","label":"Join Discord","sizeMode":"contentHeight","paddingTop":{"value":10,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":24,"unit":"px"},"marginLeft":{"value":20,"unit":"%"},"marginRight":{"value":20,"unit":"%"},"marginTop":{"value":10,"unit":"px"},"backgroundColor":"#5865F2"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"65f5a552-f32e-06f9-32dd-4fbe21c06939","type":"Group","label":"Privacy Policy","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Settings BG","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginBottom":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c5d843fc-08c8-6fb4-dcf7-227b3a7e8502","type":"Group","label":"Privacy Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1bb2ab6d-9616-abdf-142c-bec3071ca586","type":"Image","label":"Discord","parameters":{"sizeMode":"explicit","width":{"value":28,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/shield.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain","alignY":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"f87fc0ba-7acf-87e6-e398-39a2ad99c04e","type":"Text","parameters":{"text":"Privacy Policy","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"1e5441e5-9880-e373-0491-e8e8a09b2cb6","type":"Group","label":"Privacy Description","parameters":{"flexDirection":"column","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"none","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cbcb494f-2307-b7f8-98c3-e0a132064b80","type":"Text","parameters":{"color":"#000000","text":"This application collects personal and usage data to improve services and ensure security.","alignY":"top","textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"aac1f34c-8817-c4c0-3f8f-f2fe8ffe11f6","type":"net.noodl.controls.button","parameters":{"alignY":"bottom","alignX":"center","label":"Privacy Policy","sizeMode":"contentHeight","paddingTop":{"value":10,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":24,"unit":"px"},"marginLeft":{"value":20,"unit":"%"},"marginRight":{"value":20,"unit":"%"},"marginTop":{"value":5,"unit":"px"},"backgroundColor":"#761515"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"cff31047-20f3-3cf8-a9ce-12064a733111","type":"Group","label":"About Me","parameters":{"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Settings BG","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"marginLeft":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7755b089-5be4-9c69-c5b5-b4509efec363","type":"Group","label":"Aboot Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"54035cc9-891d-9616-ff1e-8f491ea7cd2f","type":"Image","label":"Aboot","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/sterner_logo.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"828c3692-7c8c-6965-bb05-dfff9a05d50e","type":"Text","label":"Aboot","parameters":{"text":"About me","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a6756c83-36d9-611c-3f5d-d18132536845","type":"Group","label":"Privacy Description","parameters":{"flexDirection":"column","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":-1,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"none","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"219fcced-2876-9e1b-edc8-3997dabd090d","type":"Text","parameters":{"color":"#000000","text":"I make websites and apps that are financially irresponsible to make.  I aim to create high quality apps and websites for niche products and games.","alignY":"top","marginBottom":{"value":10,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"8c7a202f-a55d-1d2f-399c-7f130651ed74","type":"net.noodl.controls.button","parameters":{"sizeMode":"contentHeight","marginBottom":{"value":0,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginRight":{"value":20,"unit":"px"},"marginLeft":{"value":20,"unit":"px"},"label":"Github","backgroundColor":"#FFFFFF","color":"#000000","useIcon":true,"iconIconSource":{"class":"fa-solid","code":"fa-code","codeAsClass":true},"iconColor":"#000000","iconSize":{"value":18,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"120a3ee0-7b7e-ace6-2edb-2b70ae78ddc3","type":"Group","label":"About App","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Settings BG","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3e181e9d-604a-4a04-597c-5698e240f9c8","type":"Group","label":"Aboot Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"05f4337d-01f3-702f-5b48-a67501394ff0","type":"Image","label":"Aboot","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/phone.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"7040301e-a38f-dd8a-df85-a6b9ce859353","type":"Text","label":"Aboot","parameters":{"text":"About this App\n","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"39bb74fe-8d31-80ca-786e-56fceb9af85e","type":"Group","label":"Privacy Description","parameters":{"flexDirection":"column","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"none","borderWidth":{"value":5,"unit":"px"},"borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6ec6c56d-2365-849c-a444-15738380a34b","type":"Text","parameters":{"color":"#000000","text":"RetroAchievements.org recently released support for Gamecube games, which included Animal Crossing.  \n\nI wasn't all that impressed with the options available, so I decided to make my own.\n\nThis app was built in Noodl.","alignY":"top","marginBottom":{"value":15,"unit":"px"},"textAlignX":"center"},"ports":[],"dynamicports":[],"children":[]},{"id":"461d8bf5-461e-c683-ccd5-90d0a8cd1290","type":"Group","parameters":{"flexDirection":"row","alignX":"center","sizeMode":"contentHeight","alignItems":"flex-end","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"debbecc0-4826-6450-070c-32258121fa89","type":"net.noodl.controls.button","label":"RetroAchievements","parameters":{"alignY":"bottom","alignX":"left","label":"RetroAchievements","paddingTop":{"value":15,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"backgroundColor":"#252525","color":"#FFFFFF","useIcon":true,"iconIconSource":{"class":"fa-solid","code":"fa-code","codeAsClass":true},"iconColor":"#000000","iconSourceType":"image","iconImageSource":"images/retroachievements.png","iconSize":{"value":30,"unit":"px"},"maxWidth":{"value":75,"unit":"%"},"minHeight":{"value":50,"unit":"px"},"maxHeight":{"value":50,"unit":"px"},"minWidth":{"value":50,"unit":"%"},"marginRight":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]}]}]},{"id":"5254b49d-a08a-c0b2-e480-ad29315ebc15","type":"net.noodl.externallink","x":332,"y":1127,"parameters":{"link":"https://discord.sterner.digital/"},"ports":[],"dynamicports":[],"children":[]},{"id":"48fe2577-5534-8b9d-8e15-13b6597fc292","type":"net.noodl.externallink","x":308,"y":1596,"parameters":{"link":"https://nicholas.sterner.digital/app-privacy-policy/"},"ports":[],"dynamicports":[],"children":[]},{"id":"5302dd65-d2b5-62ae-3b12-d73fb0101c7b","type":"net.noodl.externallink","x":342,"y":2593,"parameters":{"link":"https://retroachievements.org/game/2901"},"ports":[],"dynamicports":[],"children":[]},{"id":"a78c5058-53bd-e0b2-6a9b-1864db94814b","type":"net.noodl.externallink","x":346,"y":2066,"parameters":{"link":"https://github.com/SK-Crow/Animal-Crossing-Gamecube-Checklist"},"ports":[],"dynamicports":[],"children":[]},{"id":"8a7ee363-0514-9133-d007-c1e85f229bb5","type":"Group","label":"Backgrounds","x":-447,"y":-245,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"4e556ba7-f92f-4581-882c-4068a97167d4","type":"module.inlineHtml","label":"Art Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #ffacbe; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/art.png'),\r\n    url('/images/background/art.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"fa0c379c-ff39-7518-c15d-de13f759cd95","type":"module.inlineHtml","label":"Bugs Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/bugs.png'),\r\n    url('/images/background/bugs.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"8f151708-dc74-49c2-8df9-569bbc8a822d","type":"module.inlineHtml","label":"Carpet Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/carpet.png'),\r\n    url('/images/background/carpet.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"85f4d377-cd99-d12a-ff15-035bd88a450e","type":"module.inlineHtml","label":"Clothing Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/clothing.png'),\r\n    url('/images/background/clothing.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"50c09a35-0dc3-3f6d-c2e0-85249bb8d90b","type":"module.inlineHtml","label":"Collections Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #296549; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/leaf.png'),\r\n    url('/images/background/leaf.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 192px 192px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"ec29e424-c4f4-af76-5692-514831bc6804","type":"module.inlineHtml","label":"Daily Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/daily.png'),\r\n    url('/images/background/daily.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"74687505-37b6-4b1b-bef0-f7655407aef2","type":"module.inlineHtml","label":"Fish Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fish.png'),\r\n    url('/images/background/fish.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"1712c35a-64c0-d822-9e64-cd4e8b75f133","type":"module.inlineHtml","label":"Fossil Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fossil.png'),\r\n    url('/images/background/fossil.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"1b5a9fe9-1f79-e181-261e-46a2b443c455","type":"module.inlineHtml","label":"Fruit Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/fruit.png'),\r\n    url('/images/background/fruit.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"5511b200-06de-7bc5-5ad7-c87951668fae","type":"module.inlineHtml","label":"Furniture Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/furniture.png'),\r\n    url('/images/background/furniture.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"ff726dd5-0e5f-d246-d5e8-1376056ebd50","type":"module.inlineHtml","label":"Gyroid Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/gyroid.png'),\r\n    url('/images/background/gyroid.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"c2aa0fb1-7153-2ab1-8083-06ed76871698","type":"module.inlineHtml","label":"Mail Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/mail.png'),\r\n    url('/images/background/mail.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"3c97e051-2255-9c3f-522d-07a2ed0949a8","type":"module.inlineHtml","label":"Music Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/music.png'),\r\n    url('/images/background/music.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"5827d762-44fc-e078-b538-fd1bc965aa28","type":"module.inlineHtml","label":"Tools Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/tools.png'),\r\n    url('/images/background/tools.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"50b76e20-d77c-afe7-e453-dcc92350f10c","type":"module.inlineHtml","label":"Wallpaper Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #8c96ee; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/wallpaper.png'),\r\n    url('/images/background/wallpaper.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 96px 96px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"bd4ff6e2-4723-ae29-7044-fcdc96248ff8","type":"JavaScriptFunction","label":"Play Audio File","x":-85,"y":-155,"parameters":{"functionScript":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Delay the audio playback by 5000ms (5 seconds)\nsetTimeout(() => {\n    // Play the audio file\n    audio.play().then(() => {\n      // If the audio file is successfully played, send the Success signal\n      Outputs.Success();\n    }).catch((error) => {\n      // If there is an error, send the error to the Error output and send the Failure signal\n      Outputs.Error = error;\n      Outputs.Failure();\n    });\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"in-AudioFile","displayName":"AudioFile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Error","displayName":"Error","plug":"output","type":"*","group":"Outputs","index":7}],"children":[],"metadata":{"prompt":{"history":[{"content":"on page load, play /audio/loading.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Load the audio file\nconst audioFile = Inputs.AudioFile || '/audio/loading.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFile);\n\n// Play the audio file\naudio.play().then(() => {\n  // If the audio file is successfully played, send the Success signal\n  Outputs.Success();\n}).catch((error) => {\n  // If there is an error, send the error to the Error output and send the Failure signal\n  Outputs.Error = error;\n  Outputs.Failure();\n});\n"},"snowflakeId":"01914392589a-ugopsd","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the node is triggered. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFile</span> as an input, which is the path to the audio file. If no audio file is specified, it defaults to '/audio/loading.mp3'. \n\nThe function creates a new Audio object with the specified file, and attempts to play it. If the audio file is successfully played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nIf there is an error while trying to play the audio file, it sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Error</span> output to the error message and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"019143926d79-fukizs","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"29d26c13-f1f4-4c6a-ea92-b16782ecf13f","type":"RouterNavigate","x":314,"y":547,"parameters":{"router":"Main","target":"/Pages/buy-remove-ads"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"0d4c15f1-08c1-551f-b0ca-356cbc31ac86","type":"RouterNavigate","x":314,"y":666,"parameters":{"router":"Main","target":"/Pages/coffee"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]}],"visualRoots":["b595c49f-39a2-e8db-1ea0-ac298ae11ee1","8a7ee363-0514-9133-d007-c1e85f229bb5"]}},{"name":"/Pages/About","id":"991cc21f-0870-03fc-9064-141f252b1f64","graph":{"connections":[],"roots":[{"id":"a6efa8c2-2088-18c6-4e49-7d643d79031d","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"About","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"about","index":32}],"children":[{"id":"69c2c1cc-2e4c-394c-2fc9-206ffbec3edb","type":"/Pages/about-splash","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"be984a6b-717d-7486-b435-9d1f7042eb64","type":"/Pages/Aboot","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"788207f7-7188-12e3-6e34-2947d3777890","type":"PageInputs","x":-100,"y":-50,"parameters":{},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":["a6efa8c2-2088-18c6-4e49-7d643d79031d"]}},{"name":"/Pages/about-splash","id":"28d802ee-0ca4-49a6-df18-0f51a9f3bf82","graph":{"connections":[{"fromId":"9cb4559d-fa9f-ed7b-d2b8-4111fb5156a3","fromProperty":"out-Success","toId":"627864fc-b19b-1cdd-a620-0e2db05c540a","toProperty":"play"}],"roots":[{"id":"33ffc49f-4541-9f52-07f5-66cbfb650ff5","type":"Group","x":0,"y":0,"parameters":{"alignY":"center","alignX":"center","position":"fixed"},"ports":[],"dynamicports":[],"children":[{"id":"4dffd70d-061b-d7a8-62cc-5200621e81c3","type":"Group","parameters":{"alignX":"center","alignY":"center","position":"fixed","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"9993442f-b6cd-4ec3-742d-d84efd381aa8","type":"module.inlineHtml","parameters":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        /* Body Styling to Center the Animation */\r\n        body {\r\n            margin: 0;\r\n            height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            position: relative; /* Ensure child elements are positioned relative to the body */\r\n            overflow: hidden; /* Prevent scrollbars if necessary */\r\n        }\r\n\r\n        /* Fullscreen Background Overlay */\r\n        .background-overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #9d9d9d; /* The color of the overlay */\r\n            opacity: 1;\r\n            animation: fadeOutOverlay 0.5s ease-in forwards;\r\n            animation-delay: 1.4s; /* Start fading out with the enlargeFade animation */\r\n        }\r\n\r\n        /* General Styling */\r\n        .nookphone-splash {\r\n            position: relative;\r\n            width: 100px;\r\n            height: 100px;\r\n            z-index: 1; /* Ensure the icon is above the background overlay */\r\n        }\r\n\r\n        .icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            opacity: 0;\r\n            animation: popIn 0.3s ease-out forwards, enlargeFade 0.5s ease-in forwards;\r\n            animation-delay: 900ms, 1.4s; /* Delay for the second animation: 900ms + 300ms + 500ms */\r\n        }\r\n\r\n        .icon img {\r\n            display: block;\r\n\r\n        }\r\n\r\n        /* Icon Pop-in and Rotate Animation without Fade-Out */\r\n        @keyframes popIn {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(0) rotate(-150deg);\r\n                opacity: 0;\r\n            }\r\n            40% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-75deg);\r\n                opacity: 1;\r\n            }\r\n            70% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(25deg);\r\n            }\r\n            85% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(-25deg);\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(1) rotate(0deg);\r\n                opacity: 1; /* Ensure opacity stays at 1 */\r\n            }\r\n        }\r\n\r\n        /* Enlarge and Fade to Invisible Animation */\r\n        @keyframes enlargeFade {\r\n            0% {\r\n                transform: translate(-50%, -50%) scale(1);\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                transform: translate(-50%, -50%) scale(2);\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        /* Background Overlay Fade Out Animation */\r\n        @keyframes fadeOutOverlay {\r\n            0% {\r\n                opacity: 1;\r\n            }\r\n            100% {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div class=\"background-overlay\"></div> <!-- Fullscreen Background Overlay -->\r\n\r\n<div class=\"nookphone-splash\">\r\n    <div class=\"icon\">\r\n        <img src=\"images/nookphone/nicholas.png\" alt=\"NookPhone Icon\">\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n","runJs":true},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e26566c5-2947-411a-9c83-165985099676","type":"Group","parameters":{"position":"absolute","alignX":"center","alignY":"center","minWidth":{"value":250,"unit":"px"},"maxWidth":{"value":250,"unit":"px"},"minHeight":{"value":250,"unit":"px"},"maxHeight":{"value":250,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"627864fc-b19b-1cdd-a620-0e2db05c540a","type":"Lottie","parameters":{"path":"/lottie/pop.json","loop":false,"autoplay":false,"renderer":"svg"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"9cb4559d-fa9f-ed7b-d2b8-4111fb5156a3","type":"JavaScriptFunction","label":"Play Audio and Navigate Away","x":-220,"y":161,"parameters":{"functionScript":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 2000);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-NavigateAway","displayName":"NavigateAway","plug":"output","type":"signal","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Wait one second, then play sound effect /audio/splash.mp3\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n"},"snowflakeId":"01914339f363-pfmfw6","type":"user"},{"type":"assistant","content":"\nThis function plays a sound effect after a delay of one second. \n\nIt uses the <span style=\"color: var(--base-color-yellow-400);\">Inputs.setTimeout</span> function to wait for 1 second, then creates a new audio object with the source '/audio/splash.mp3'. After creating the audio object, it plays the sound. \n\nOnce the sound has been played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal to indicate that the sound has been successfully played.\n","snowflakeId":"0191433a0028-ocw0gy","metadata":{}},{"content":"Add a 0.5 second timer with an output so I can navigate away after time.\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Wait for 1 second\nsetTimeout(() => {\n    // Create new audio object\n    const audio = new Audio('/audio/splash.mp3');\n    // Play the audio\n    audio.play();\n    // Signal success\n    Outputs.Success();\n}, 1000);\n\n// Wait for 0.5 seconds\nsetTimeout(() => {\n    // Signal to navigate away\n    Outputs.NavigateAway();\n}, 500);\n"},"snowflakeId":"0191434bfa0c-5wwydd","type":"user"},{"type":"assistant","content":"\nThis function waits for 1 second, then plays an audio file and signals a success. It also waits for 0.5 seconds, then signals to navigate away from the current page.\n\nThe function uses the setTimeout method to create two timers. The first timer waits for 1 second, then creates a new audio object using the Audio constructor with '/audio/splash.mp3' as the input. It then plays the audio file and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n\nThe second timer waits for 0.5 seconds, then triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.NavigateAway</span> output signal. This can be used to navigate away from the current page after a certain amount of time.\n","snowflakeId":"0191434c0a6f-f13v4h","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["33ffc49f-4541-9f52-07f5-66cbfb650ff5"]}},{"name":"/Pages/buy-remove-ads","id":"ecf6d85c-db60-500f-51cf-2fa42926197e","graph":{"connections":[{"fromId":"898d3917-4e5a-ec41-bedc-aa8026a5e856","fromProperty":"out-run","toId":"8d194116-3259-c795-d89d-d2feb33bd2fd","toProperty":"navigate"}],"roots":[{"id":"3b0ea82a-a2f5-32b5-1b98-93a33b5ae63b","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"buy-remove-ads","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"buy-remove-ads","index":32}],"children":[{"id":"56835494-4978-0a39-0b83-a036de3b1be7","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"41e8e2ef-e706-2c8b-2911-83fc2b3f628b","type":"PageInputs","x":-100,"y":-50,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"8d194116-3259-c795-d89d-d2feb33bd2fd","type":"RouterNavigate","x":238,"y":55,"parameters":{"router":"Main","target":"/Pages/About"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"898d3917-4e5a-ec41-bedc-aa8026a5e856","type":"JavaScriptFunction","label":"Trigger Run on Page Load","x":-212,"y":99,"parameters":{"functionScript":"// The 'run' output is triggered as soon as the page loads\nOutputs.run();\n"},"ports":[],"dynamicports":[{"name":"out-run","displayName":"run","plug":"output","type":"signal","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Create output called \"run\" that outputs a signal on page load\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// The 'run' output is triggered as soon as the page loads\nOutputs.run();\n"},"snowflakeId":"01917b3726fe-brvuq6","type":"user"},{"type":"assistant","content":"\nThis function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.run</span> output signal as soon as the page loads. It doesn't require any input. This can be used to initiate any action or process that needs to start immediately when the page is loaded.\n","snowflakeId":"01917b373149-29p9rd","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["3b0ea82a-a2f5-32b5-1b98-93a33b5ae63b"]}},{"name":"/Pages/coffee","id":"6f385056-cecc-bc22-e8af-8665ff51d3a0","graph":{"connections":[{"fromId":"f304b826-cf7c-805a-4d23-79684c42d47d","fromProperty":"out-run","toId":"b918287e-16f8-8aa0-e8ce-8fc62c54d585","toProperty":"navigate"}],"roots":[{"id":"0208f875-749c-1221-0e31-b7912923c8c3","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"coffee","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"coffee","index":32}],"children":[{"id":"3699d039-a9e6-9f92-df9f-86376c7a1bfe","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"32819145-17ca-8674-597e-28017eda6a1f","type":"PageInputs","x":-100,"y":-50,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"b918287e-16f8-8aa0-e8ce-8fc62c54d585","type":"RouterNavigate","x":238,"y":55,"parameters":{"router":"Main","target":"/Pages/About"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"f304b826-cf7c-805a-4d23-79684c42d47d","type":"JavaScriptFunction","label":"Trigger Run on Page Load","x":-212,"y":99,"parameters":{"functionScript":"// The 'run' output is triggered as soon as the page loads\nOutputs.run();\n"},"ports":[],"dynamicports":[{"name":"out-run","displayName":"run","plug":"output","type":"signal","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Create output called \"run\" that outputs a signal on page load\n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// The 'run' output is triggered as soon as the page loads\nOutputs.run();\n"},"snowflakeId":"01917b3726fe-brvuq6","type":"user"},{"type":"assistant","content":"\nThis function triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.run</span> output signal as soon as the page loads. It doesn't require any input. This can be used to initiate any action or process that needs to start immediately when the page is loaded.\n","snowflakeId":"01917b373149-29p9rd","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["0208f875-749c-1221-0e31-b7912923c8c3"]}},{"name":"/Pages/Collection Progress","id":"0ba09c34-3d7b-51dc-6f1d-31c02a127564","graph":{"connections":[{"fromId":"c0e5c917-0502-136f-59fb-93ed7ac5f41a","fromProperty":"onClick","toId":"1c8995af-eedd-8b90-d6b4-7921ce62ccd0","toProperty":"navigate"},{"fromId":"22056822-9794-58a4-3b44-75e88948a13a","fromProperty":"out-CountText","toId":"586a3fe2-9431-ddf1-e044-29a5e5312997","toProperty":"text"},{"fromId":"cfd368d4-16a9-7186-3833-b7fb7b1f0152","fromProperty":"onClick","toId":"73aae593-0d46-2ee0-e101-1a746ccbb3f4","toProperty":"navigate"},{"fromId":"42c25f7f-40dc-0bdb-a58f-1f3bff0957ee","fromProperty":"out-CountText","toId":"5a343b90-110f-ec74-5771-ddb0cd1b6ec8","toProperty":"text"},{"fromId":"6a18caea-d392-9000-8679-021d494e42b0","fromProperty":"onClick","toId":"4771f7b1-d3b6-5b80-e5c0-a57dbd77d334","toProperty":"navigate"},{"fromId":"e18894df-fb3e-62e8-8488-20e290c7c17f","fromProperty":"out-CountText","toId":"4d98f274-0db0-f31b-8972-ee24bb7b2e7a","toProperty":"text"},{"fromId":"2533a679-04cc-bb35-de02-788b7ee37507","fromProperty":"onClick","toId":"f0397f65-9ead-8bbf-6e1f-b62729c7ae37","toProperty":"navigate"},{"fromId":"0627ad32-7d3f-e337-f827-a15ef8f4119b","fromProperty":"out-CountText","toId":"79358bed-07c8-42d9-acdd-00c7992bb2cd","toProperty":"text"},{"fromId":"f5f0aa9b-af28-e976-de48-a4b8187f5d96","fromProperty":"onClick","toId":"bcd281cf-0d93-d2f3-92f4-d8c871c5b37c","toProperty":"navigate"},{"fromId":"57a10796-22ca-7f50-8f94-117529df8444","fromProperty":"out-CountText","toId":"2ab30dfa-82e8-62ab-3447-855e38d15c5b","toProperty":"text"},{"fromId":"e96a5837-dda3-a449-5e37-bbf8a1549983","fromProperty":"onClick","toId":"9eadcc4e-2c3f-c327-80d5-d062d56343d6","toProperty":"navigate"},{"fromId":"9612eae4-7359-21da-50f8-ccdada624d98","fromProperty":"out-CountText","toId":"518d87d7-8085-1a6f-e051-7c7de02183bd","toProperty":"text"},{"fromId":"ab87bf51-519e-692f-126e-2d756e73c8f9","fromProperty":"out-CountText","toId":"3c7f537a-d91b-1b5e-e7f7-2a8f48667496","toProperty":"text"},{"fromId":"bc0e3877-35b0-bc49-92c2-9f543fd859da","fromProperty":"out-CountText","toId":"25009765-06cf-8cc4-f5b9-1cc7cbba60ba","toProperty":"text"},{"fromId":"a0450caa-eca2-6437-d5a9-4c3ed15cae52","fromProperty":"out-CountText","toId":"7b77307e-2784-33dd-3002-81883f57be34","toProperty":"text"},{"fromId":"bc32f568-e74a-7357-5f63-219395b1a6d1","fromProperty":"out-CountText","toId":"42685f55-7a5f-491e-779f-c1521c8a4cd6","toProperty":"text"},{"fromId":"4edeab40-f06a-eb7b-b909-8bfb345b5db6","fromProperty":"out-CountText","toId":"68068a84-4b6c-954e-e641-12633d820357","toProperty":"text"},{"fromId":"c5f34226-e2be-9474-4a05-4c0a44dbb062","fromProperty":"onClick","toId":"f1074474-4190-7395-a587-93427cd893f9","toProperty":"navigate"},{"fromId":"10bd5b56-adb8-f81f-80fd-c4566e14a291","fromProperty":"onClick","toId":"10b0ce24-ba45-e46a-df7a-369fe9febe51","toProperty":"navigate"},{"fromId":"611a3e3d-c5a8-eed2-f848-32d85bdcab96","fromProperty":"onClick","toId":"9c330782-bab3-fc81-0937-350c80ee718a","toProperty":"navigate"},{"fromId":"f745b75c-78f3-49a4-767b-7ebf865947e5","fromProperty":"onClick","toId":"aa7802f6-b917-d641-3ec2-704db4aeed4a","toProperty":"navigate"},{"fromId":"47387023-0d2d-f46b-4697-1f20bbf41210","fromProperty":"onClick","toId":"397bd0bf-303d-c369-9bc3-89a50735ea45","toProperty":"navigate"},{"fromId":"a4ab8d2c-9a69-4eab-511c-63eb43715564","fromProperty":"onClick","toId":"64332713-332e-10a5-43de-b9a9f1f8f8ed","toProperty":"navigate"},{"fromId":"f7962fc9-f97a-2719-7590-6efb168b81fe","fromProperty":"onClick","toId":"33fbc095-0ba7-692a-fa49-3719fde275d5","toProperty":"navigate"},{"fromId":"d835da7b-c6aa-83b7-cc4c-9ae73591a13b","fromProperty":"out-CountText","toId":"2b2b6049-d057-90a4-2e49-622eb5762889","toProperty":"text"},{"fromId":"1676c74d-2eec-8767-c3b7-35e9ca35d727","fromProperty":"out-CountText","toId":"dfa20100-5fe6-8c34-c36d-82fc54f46b6d","toProperty":"text"},{"fromId":"4ea2a65d-a2d1-ba69-6414-b1bce8fa8c5d","fromProperty":"out-CountText","toId":"384b3fc6-505e-beaa-39b3-f8e34e390a67","toProperty":"text"},{"fromId":"7110b007-aa59-0a84-6f91-7d6dd79b9271","fromProperty":"out-CountText","toId":"642badc3-d36c-7f4e-3ab2-f72ad7a82e65","toProperty":"text"},{"fromId":"70930fe9-7487-a977-03c3-20bac735f238","fromProperty":"out-CountText","toId":"a78a2af8-937f-cf78-67cc-8ceeaf762a1c","toProperty":"text"},{"fromId":"04c287da-e02b-dfc9-b771-d425e80f3974","fromProperty":"out-CountText","toId":"686e807e-00e4-0aec-a2b2-039946f51cef","toProperty":"text"},{"fromId":"8e534cb8-24e0-b6b5-abbb-46f0f4d66f93","fromProperty":"out-CountText","toId":"3d7c5fdb-178a-78f2-a19d-63fd2105d169","toProperty":"text"},{"fromId":"66d96d2b-11ce-50cc-1e51-f7353828e870","fromProperty":"onClick","toId":"13f81f9f-3615-0a57-67f1-1dec4964c1fd","toProperty":"navigate"},{"fromId":"61e734d0-2139-33e1-fc6e-e7a2b5070a56","fromProperty":"onClick","toId":"ff7e5067-1573-9d01-688d-a923f382531b","toProperty":"navigate"},{"fromId":"f207848c-a01e-02a4-750c-b8b6e8790efb","fromProperty":"onClick","toId":"d927361d-1b79-ce33-a87e-c1a0a433b5bc","toProperty":"navigate"},{"fromId":"3434cbbe-1ed1-6a1b-61e0-f1f4006fa300","fromProperty":"onClick","toId":"733c033a-2bb6-0ada-c65a-1f9f832bdee4","toProperty":"navigate"},{"fromId":"7f8c9148-0a73-2731-2cc4-2d0e256ed9e9","fromProperty":"out-CountText","toId":"681c8143-a6c7-5f74-a53a-d33b4e5b11c3","toProperty":"text"},{"fromId":"40a56aa4-905e-596e-29ec-e79a2d058e78","fromProperty":"out-CountText","toId":"c2b4ccc4-bcc4-16ac-38f4-d17d52b3685c","toProperty":"text"},{"fromId":"e80c7ff5-9ef3-0b09-ee8f-c657a6d5776f","fromProperty":"out-CountText","toId":"08f58fd7-9102-e599-ae9d-81e1242fb6dd","toProperty":"text"},{"fromId":"650cb340-c713-7904-350c-cb0e9dba1174","fromProperty":"onClick","toId":"3ef83ef5-087a-09c8-a30c-ffb3b61ac39e","toProperty":"navigate"},{"fromId":"ba91172b-a4e1-5df0-ed01-f5c0ae753a3e","fromProperty":"onClick","toId":"42240d14-df34-ea74-ed1e-37224642627b","toProperty":"navigate"},{"fromId":"28f251bb-8597-e3d1-58a9-3b571c1265e5","fromProperty":"onClick","toId":"4b766bea-eebf-f7de-95a7-03ce5f2187e3","toProperty":"navigate"},{"fromId":"bdb0fc1d-dab9-03d7-c07e-5a4a0eb0f806","fromProperty":"out-CountText","toId":"575b5e2a-3b1d-39f4-47b3-35236626eb0f","toProperty":"text"},{"fromId":"28cf3f38-3625-f15d-0005-80885d670404","fromProperty":"out-CountText","toId":"2bf52c98-61fa-59ae-2389-55cd82f841ea","toProperty":"text"},{"fromId":"6ce03983-37e8-567a-b312-49eee7a5b8c7","fromProperty":"onClick","toId":"94b04d27-9417-921b-f548-9eed71bf57e0","toProperty":"navigate"},{"fromId":"3b6fef44-4e94-7643-f014-17c95b837db7","fromProperty":"out-CountText","toId":"aed63181-958a-2af3-36bf-3429e800a2f7","toProperty":"text"},{"fromId":"12527fbe-7e72-67e7-8888-1ebe696b1dc4","fromProperty":"onClick","toId":"40da21d1-325d-afde-1a8e-7a87d2159639","toProperty":"navigate"},{"fromId":"c5c444e3-b031-f7ad-7db9-4b2019e017a9","fromProperty":"onClick","toId":"4d282f97-3697-69f8-f0cf-bb6cbbae0c4c","toProperty":"navigate"},{"fromId":"512e9083-2f43-cfb7-f27e-4469353429b1","fromProperty":"out-CountText","toId":"06263773-8930-b0d3-7116-491d1e9f4969","toProperty":"text"},{"fromId":"f4f65fed-e8e8-e45b-ed43-06af712d6d81","fromProperty":"out-CountText","toId":"64eae430-1c4a-028b-6536-5865ce790942","toProperty":"text"},{"fromId":"5a06c11f-00f4-f9b8-9ef2-cc21e9b6f5e8","fromProperty":"onClick","toId":"c83bdbd9-651f-de00-4cee-0dde00c67e0f","toProperty":"navigate"},{"fromId":"4023d87d-c454-f16a-5e0e-ebe300d1cd82","fromProperty":"out-CountText","toId":"a20eb42f-58eb-1b08-54ea-11b3cb0b894a","toProperty":"text"},{"fromId":"a68c7998-d904-4a71-559b-cd3995e2d504","fromProperty":"out-CountText","toId":"f2caa2d3-80a5-3a4a-eadd-b51aa80c4c9e","toProperty":"text"},{"fromId":"778e9c61-097c-d1cb-3380-1eee59f0f588","fromProperty":"onClick","toId":"5427778d-12a8-9335-46cc-acdc997ad8ce","toProperty":"navigate"},{"fromId":"9c8f2a46-8f1c-d1f4-73ea-84ad937d5932","fromProperty":"onClick","toId":"438dc6b5-a8fa-a4bb-227e-3e03d02dfe03","toProperty":"navigate"},{"fromId":"d9b4c387-0176-66f7-abff-d5b05376e16d","fromProperty":"out-CountText","toId":"95d81b26-ca73-2874-7faa-5dc7adb70b78","toProperty":"text"}],"roots":[{"id":"ed314a24-6119-0d29-5822-183ba25d4fd8","type":"Group","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"12961d6b-d5d0-fc6e-5d6e-ba7e1991f81a","type":"module.inlineHtml","label":"Collections Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #296549; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/leaf.png'),\r\n    url('/images/background/leaf.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 192px 192px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"2bf52c98-61fa-59ae-2389-55cd82f841ea","type":"Text","label":"Collection Progress","parameters":{"text":"Collection Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginTop":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"color":"Nook Pale Green","textAlignX":"left"},"ports":[],"dynamicports":[],"children":[]},{"id":"5336ebcd-f1d4-07a0-fc1d-f561e8ba14bb","type":"Group","label":"Collection Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6aaa2cfd-84f0-6c87-370b-05707b852fa8","type":"Group","label":"Museum","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nook Pale Green","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d97ef304-bf6a-81f5-fb85-aeea04d3c1b3","type":"Group","label":"Museum Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"bd4dc68c-d05a-8049-1762-b2c43bd88ec6","type":"Image","label":"Museum","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/museum.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"f62e6d6c-0eaf-33e4-8c04-d49760990ccd","type":"Text","parameters":{"text":"Museum","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"cfd368d4-16a9-7186-3833-b7fb7b1f0152","type":"Group","label":"Bug Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"650f84af-4701-78ca-f2c6-6d0496625fc2","type":"Image","label":"Bug","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/swallow_tail_butterfly.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"78f8806c-aef6-bb54-e329-a08ed56c34f6","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Bugs","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"5a343b90-110f-ec74-5771-ddb0cd1b6ec8","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6a18caea-d392-9000-8679-021d494e42b0","type":"Group","label":"Fish Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"33dc1d6a-f317-83bb-2b48-60e4ccef5099","type":"Image","label":"Fish","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/sea_bass.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"e8278425-3d58-40c0-9d21-48d89fe758fb","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Fish","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"4d98f274-0db0-f31b-8972-ee24bb7b2e7a","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"2533a679-04cc-bb35-de02-788b7ee37507","type":"Group","label":"Fossil Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b7e02981-252f-7214-183b-8e5041b098e4","type":"Image","label":"Fossil","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/fossil_bones.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"ec8a49c5-9a3d-ad18-07bd-68aa1b64dde1","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Fossils","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"79358bed-07c8-42d9-acdd-00c7992bb2cd","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/25","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c0e5c917-0502-136f-59fb-93ed7ac5f41a","type":"Group","label":"Painting Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cf9f77a3-9167-130e-20bb-949440d0e09c","type":"Image","label":"Painting","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/redd.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"1b8a5acb-4b22-2872-128d-b8a191e0f14a","type":"Text","label":"Paintings","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Paintings","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"586a3fe2-9431-ddf1-e044-29a5e5312997","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/15","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"c2c0e975-f7e9-c4d5-2eea-9169aa669136","type":"Group","label":"Collection Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"575b5e2a-3b1d-39f4-47b3-35236626eb0f","type":"Text","label":"Furniture Progress","parameters":{"text":"Furniture Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"color":"Nook Pale Green","textAlignX":"left","marginTop":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"34c70fb5-af97-0927-a9fd-a8b888c2e59e","type":"Group","label":"Items","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nook Pale Green","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"25adb552-85ab-f6ec-c2ec-747ebce53888","type":"Group","label":"Items Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"0dda07ad-2dbf-c7d5-124a-2dc1b457ad00","type":"Image","label":"Items","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/leaf.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":0,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"b253de88-ab25-c30e-e663-ba60983e613a","type":"Text","parameters":{"text":"Items","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"778e9c61-097c-d1cb-3380-1eee59f0f588","type":"Group","label":"Carpet Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f53e424e-8cb7-a82e-7360-204b47eb778e","type":"Image","label":"Carpet","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/carpet.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"0358dc3b-6b91-55ae-053b-2e90af0bd801","type":"Text","label":"Carpet","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Carpet","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a20eb42f-58eb-1b08-54ea-11b3cb0b894a","type":"Text","label":"0 / 67","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0 / 67","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f5f0aa9b-af28-e976-de48-a4b8187f5d96","type":"Group","label":"Clothing Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6b7659cd-c9de-c87d-47ea-fd0d7d836841","type":"Image","label":"Clothing","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/clothing.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"94ee547f-7219-7525-bf94-7d92c8983802","type":"Text","label":"Clothing","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Clothing","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"2ab30dfa-82e8-62ab-3447-855e38d15c5b","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/247\n","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e96a5837-dda3-a449-5e37-bbf8a1549983","type":"Group","label":"Fruit Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a632b851-3d03-ad4c-bada-464338a2f491","type":"Image","label":"Fruit","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/apple.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"738762a7-7ed5-a2eb-99a7-cd5e619c22c5","type":"Text","label":"Fruit","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Fruit","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"518d87d7-8085-1a6f-e051-7c7de02183bd","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/6\n","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6ce03983-37e8-567a-b312-49eee7a5b8c7","type":"Group","label":"Gyroid Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f591b8a2-85e5-cc3c-3eff-bc49102eec2e","type":"Image","label":"Gyroids","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/gyroid.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"94c8d728-871c-8c13-b33d-88e0801f26f2","type":"Text","label":"Gyroids","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Gyroids","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"aed63181-958a-2af3-36bf-3429e800a2f7","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/127","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"12527fbe-7e72-67e7-8888-1ebe696b1dc4","type":"Group","label":"Handheld Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"e8728b6c-1194-0e72-4ee3-c56bafa8b09f","type":"Image","label":"Handheld","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/shovel.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"deccd68a-9d00-24bc-2640-2f3ab228cb8d","type":"Text","label":"Handheld / Tools","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Handheld / Tools","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"95d81b26-ca73-2874-7faa-5dc7adb70b78","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/24\n","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c5c444e3-b031-f7ad-7db9-4b2019e017a9","type":"Group","label":"K.K. Slider Songs Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9fc429fa-8498-adf3-d5f3-992a55b8e148","type":"Image","label":"K.K. Slider Songs","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/music.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"b3599cd5-918c-3807-e117-0f4967333e63","type":"Text","label":"K.K. Slider Songs","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"K.K. Slider Songs","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"06263773-8930-b0d3-7116-491d1e9f4969","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/55\n","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"5a06c11f-00f4-f9b8-9ef2-cc21e9b6f5e8","type":"Group","label":"Stationery Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"d60c8c43-ad9a-2f30-0054-2e677cc4aabc","type":"Image","label":"Stationery","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/diary.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"99482500-2233-8d08-853f-ca76fe29d2a1","type":"Text","label":"Stationery","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Stationery","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"64eae430-1c4a-028b-6536-5865ce790942","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/64","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"9c8f2a46-8f1c-d1f4-73ea-84ad937d5932","type":"Group","label":"Wallpaper Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"f96b198e-2003-7503-8089-42598ad1ef5e","type":"Image","label":"Wallpaper","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/wallpaper.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"d97e8837-7065-8d36-fb43-b8e85f18cfd6","type":"Text","label":"Wallpaper","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Wallpaper","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"f2caa2d3-80a5-3a4a-eadd-b51aa80c4c9e","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0 / 67","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"398ae11a-1bf0-0482-3ce0-46ed76c2d073","type":"Group","label":"Collection Group","parameters":{"sizeMode":"contentHeight","borderRadius":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"384b3fc6-505e-beaa-39b3-f8e34e390a67","type":"Text","label":"Furniture Progress","parameters":{"text":"Furniture Progress","textStyle":"Title Medium","sizeMode":"contentHeight","marginLeft":{"value":10,"unit":"px"},"color":"Nook Pale Green","textAlignX":"left","marginTop":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a0a07fad-9b73-181a-1ce1-5137be07f1f2","type":"Group","label":"Furniture","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nook Pale Green","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"bb5675fd-b5c3-83ed-4f18-71278f939ca2","type":"Group","label":"Furniture Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"883d9349-4200-d6c4-a941-4580b7e878a6","type":"Image","label":"Furniture","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/villager.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"8f2d8393-ec0d-1d46-456f-92ff7783ea03","type":"Text","parameters":{"text":"Furniture from Villagers","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"c5f34226-e2be-9474-4a05-4c0a44dbb062","type":"Group","label":"Animal Island Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"da761ba7-8dcd-76a5-8f82-a16dedc46014","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/animal_island.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"94135a75-4ebb-cb5d-8f45-83042284e5cf","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Animal Island","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"3c7f537a-d91b-1b5e-e7f7-2a8f48667496","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"10bd5b56-adb8-f81f-80fd-c4566e14a291","type":"Group","label":"Summer Camper Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"3935c69e-0c63-ca14-0d9f-6e5c12397e05","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/furniture/campers/summer/64px-Tent_Model_PG_Model.png","marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"a24788a8-ab2f-19b5-d81a-b5db715e5d43","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Summer Camper","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"2b2b6049-d057-90a4-2e49-622eb5762889","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"611a3e3d-c5a8-eed2-f848-32d85bdcab96","type":"Group","label":"Winter Camper Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"417175f9-3197-d9c3-5205-32d21867dd18","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/furniture/campers/winter/64px-Igloo_Model_PG_Model.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"d2fef848-a78e-0409-e8e2-5187c745a356","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Igloos","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"dfa20100-5fe6-8c34-c36d-82fc54f46b6d","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f745b75c-78f3-49a4-767b-7ebf865947e5","type":"Group","label":"Gulliver","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"9b71bff8-b21c-a79a-45c6-2848ac2cc6f8","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/gulliver.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"023e96a3-76fd-65a7-16bd-386d66a61eee","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Gulliver","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"25009765-06cf-8cc4-f5b9-1cc7cbba60ba","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"47387023-0d2d-f46b-4697-1f20bbf41210","type":"Group","label":"Nook's Store","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6fe5cbe9-d67a-b58f-4eb3-7730a98d282e","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/tom_nook.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"8d0c3a9f-2537-7d85-4ba5-f70541753897","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Nook's Store","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"7b77307e-2784-33dd-3002-81883f57be34","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"a4ab8d2c-9a69-4eab-511c-63eb43715564","type":"Group","label":"Redd","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"351c247e-e55b-2205-c4e3-09cd536e7a4a","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/redd.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"0d7503e5-c295-cbc9-5a77-3f345572a66e","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Redd","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"42685f55-7a5f-491e-779f-c1521c8a4cd6","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f7962fc9-f97a-2719-7590-6efb168b81fe","type":"Group","label":"Tortimer","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"cf0541e0-cc58-91dd-5d8b-970d33bfb0d2","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/Tortimer_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"061a01f3-8524-981d-edd0-0dc5e735745f","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Tortimer","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"68068a84-4b6c-954e-e641-12633d820357","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"942707f5-625f-323f-e61f-0bf917203573","type":"Group","parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"3db5bcbc-10ae-20b9-1022-d2468377156a","type":"Group","label":"Furniture","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nook Pale Green","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"87ee0fbb-970b-31ea-33eb-7fea03954aaf","type":"Group","label":"Furniture Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"6e94cae0-70a2-c639-4918-0ff83e22dd98","type":"Image","label":"Furniture","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/leaf.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"cb8ea052-57b8-37bd-77c8-18111942899a","type":"Text","parameters":{"text":"Seasonal Furniture","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3434cbbe-1ed1-6a1b-61e0-f1f4006fa300","type":"Group","label":"Thanksgiving","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"266a9748-50d1-7c14-d53b-374baca71c09","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/Franklin_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"86c7d3a5-115b-6a21-decf-21d7be8f1dd2","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Harvest Festival","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"3d7c5fdb-178a-78f2-a19d-63fd2105d169","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"f207848c-a01e-02a4-750c-b8b6e8790efb","type":"Group","label":"Halloween","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"a9e82ad6-b8b4-28c0-2f57-911335f18638","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/jack.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"e547c103-ba99-c061-bcb8-bf58ae052268","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Halloween","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"a78a2af8-937f-cf78-67cc-8ceeaf762a1c","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"61e734d0-2139-33e1-fc6e-e7a2b5070a56","type":"Group","label":"Snowman","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"1d6e2db3-ec65-4708-7b48-bc1ec8765682","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"objectFit":"contain","src":"images/snowman.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"1144c313-3e16-57d6-b06e-092445bb75e2","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Snowman","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"686e807e-00e4-0aec-a2b2-039946f51cef","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"66d96d2b-11ce-50cc-1e51-f7353828e870","type":"Group","label":"Christmas Group","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"35453f15-8a3b-2eae-c064-785c73ae5a45","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/Jingle_NH_Character_Icon.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"4bbeba82-a305-a371-07c8-f9d79123cdb8","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Toy Day","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"642badc3-d36c-7f4e-3ab2-f72ad7a82e65","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"c93cfb82-d61c-f470-4b57-ca7f69306ac6","type":"Group","label":"Furniture","parameters":{"marginLeft":{"value":16,"unit":"px"},"paddingTop":{"value":10,"unit":"px"},"marginTop":{"value":22,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight","alignX":"center","alignY":"center","backgroundColor":"Nook Pale Green","borderRadius":{"value":12,"unit":"px"},"paddingBottom":{"value":10,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"69f6ff5c-41e0-8b7e-a5d1-f450faf6f050","type":"Group","label":"Furniture Title","parameters":{"flexDirection":"row","sizeMode":"contentSize","marginTop":{"value":-20,"unit":"px"},"backgroundColor":"Nook Tan","borderRadius":{"value":12,"unit":"px"},"paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c6046c2c-28ca-498a-cb65-fee274856fce","type":"Image","label":"Furniture","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"src":"images/leaf.png","marginRight":{"value":0,"unit":"px"},"objectFit":"contain"},"ports":[],"dynamicports":[],"children":[]},{"id":"fb56f35f-ce7c-d313-9a92-4f2bbd4b9286","type":"Text","parameters":{"text":"Other Furniture","marginRight":{"value":10,"unit":"px"},"marginTop":{"value":4,"unit":"px"},"sizeMode":"contentSize","textStyle":"Title Medium","color":"Nookmiles Brown","marginLeft":{"value":5,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"650cb340-c713-7904-350c-cb0e9dba1174","type":"Group","label":"Miscellaneous","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2dfde09a-5f81-2846-5ff6-cdc933b0b8d0","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/furniture/misc/64px-Piggy_Bank_PG_Model.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"01a84368-99b7-10b2-caf7-81f8a5fcfda1","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Miscellaneous","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"681c8143-a6c7-5f74-a53a-d33b4e5b11c3","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"ba91172b-a4e1-5df0-ed01-f5c0ae753a3e","type":"Group","label":"Raffle","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"7bf6fa14-e25a-14f5-c960-fe60558f1498","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/ticket.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"c7481df1-2227-9985-464f-e388ca13f7f6","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Raffle","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"c2b4ccc4-bcc4-16ac-38f4-d17d52b3685c","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"28f251bb-8597-e3d1-58a9-3b571c1265e5","type":"Group","label":"Secret Codes","parameters":{"flexDirection":"row","paddingTop":{"value":0,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"justifyContent":"center","position":"relative","alignX":"center","borderRadius":{"value":25,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"borderStyle":"solid","borderWidth":{"value":5,"unit":"px"},"backgroundColor":"Nook Tan","borderColor":"Nook Tan Dark","marginRight":{"value":8,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"023a62f7-4c94-9479-dafd-8af01a530d36","type":"Image","label":"","parameters":{"sizeMode":"explicit","width":{"value":32,"unit":"px"},"height":{"value":32,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginTop":{"value":5,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginBottom":{"value":5,"unit":"px"},"alignX":"center","objectFit":"contain","src":"images/key.png"},"ports":[],"dynamicports":[],"children":[]},{"id":"84dc5451-dbd0-6a98-b1cb-3a51dbdc8e33","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"Secret Codes","alignX":"left","position":"relative","textAlignX":"left","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginLeft":{"value":2,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"08f58fd7-9102-e599-ae9d-81e1242fb6dd","type":"Text","parameters":{"color":"Nookmiles Brown","textStyle":"Label Large","marginTop":{"value":12,"unit":"px"},"text":"0/40","alignX":"left","position":"relative","textAlignX":"right","fontSize":{"value":18,"unit":"px"},"width":{"value":50,"unit":"%"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"1c8995af-eedd-8b90-d6b4-7921ce62ccd0","type":"RouterNavigate","x":304,"y":1376,"parameters":{"router":"Main","target":"/Collection Pages/Paintings/Paintings"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"22056822-9794-58a4-3b44-75e88948a13a","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-192,"y":1576,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"73aae593-0d46-2ee0-e101-1a746ccbb3f4","type":"RouterNavigate","x":302,"y":454,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"42c25f7f-40dc-0bdb-a58f-1f3bff0957ee","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-216,"y":646,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"bugs-\"\nconst bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n// Count the number of bug keys\nconst count = bugsKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 40`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4771f7b1-d3b6-5b80-e5c0-a57dbd77d334","type":"RouterNavigate","x":319,"y":778,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"e18894df-fb3e-62e8-8488-20e290c7c17f","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-219,"y":953,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"fish-\"\nconst fishKeys = keys.filter(key => key.startsWith('fish-'));\n\n// Count the number of bug keys\nconst count = fishKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 40`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"f0397f65-9ead-8bbf-6e1f-b62729c7ae37","type":"RouterNavigate","x":293,"y":1084,"parameters":{"router":"Main","target":"/Collection Pages/Fossils/Fossils"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"0627ad32-7d3f-e337-f827-a15ef8f4119b","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-195,"y":1263,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"fossil-\"\nconst fossil = keys.filter(key => key.startsWith('fossil-'));\n\n// Count the number of bug keys\nconst count = fossil.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 25`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"bcd281cf-0d93-d2f3-92f4-d8c871c5b37c","type":"RouterNavigate","x":316.5952136221656,"y":2459.1675232242014,"parameters":{"router":"Main","target":"/Collection Pages/Clothing/Clothing"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"57a10796-22ca-7f50-8f94-117529df8444","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-198.73777708815362,"y":2633.5972693602503,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"clothing-\"\nconst clothingKeys = keys.filter(key => key.startsWith('clothing-'));\n\n// Count the number of clothing keys\nconst count = clothingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 247`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"9eadcc4e-2c3f-c327-80d5-d062d56343d6","type":"RouterNavigate","x":311.4047863778344,"y":2768.882396292226,"parameters":{"router":"Main","target":"/Collection Pages/Fruit/Fruit"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"9612eae4-7359-21da-50f8-ccdada624d98","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-208,"y":2946.928204332485,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"clothing-\"\nconst clothingKeys = keys.filter(key => key.startsWith('fruit-'));\n\n// Count the number of clothing keys\nconst count = clothingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 6`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"ab87bf51-519e-692f-126e-2d756e73c8f9","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-195.42769039796383,"y":5217.367201289913,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"animalisland-\"\nconst animalislandKeys = keys.filter(key => key.startsWith('animalisland-'));\n\n// Count the number of animalisland keys\nconst count = animalislandKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 11`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"bc0e3877-35b0-bc49-92c2-9f543fd859da","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-216.65292240956512,"y":6160.859240685357,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"gulliver-\"\nconst gulliverKeys = keys.filter(key => key.startsWith('gulliver-'));\n\n// Count the number of gulliver keys\nconst count = gulliverKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 20`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a0450caa-eca2-6437-d5a9-4c3ed15cae52","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-200.8781660653667,"y":6448.876382095215,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"nookstore-\"\nconst nookstoreKeys = keys.filter(key => key.startsWith('nook-'));\n\n// Count the number of nookstore keys\nconst count = nookstoreKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 307`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"bc32f568-e74a-7357-5f63-219395b1a6d1","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-202.7479589091629,"y":6738.27663051162,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"redd-\" or \"painting-\"\nconst filteredKeys = keys.filter(key => key.startsWith('redd-') || key.startsWith('painting-'));\n\n// Count the number of filtered keys\nconst count = filteredKeys.length;\n\n// Output the count in the format \"# / 71\"\nOutputs.CountText = `${count} / 71`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4edeab40-f06a-eb7b-b909-8bfb345b5db6","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-240.53496445665542,"y":7054.4156838852205,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"tortimer-\"\nconst tortimerKeys = keys.filter(key => key.startsWith('tortimer-'));\n\n// Count the number of tortimer keys\nconst count = tortimerKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 53`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"1676c74d-2eec-8767-c3b7-35e9ca35d727","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-210.914012286579,"y":5848.06826369385,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"igloo-\"\nconst iglooKeys = keys.filter(key => key.startsWith('igloo-'));\n\n// Count the number of igloo keys\nconst count = iglooKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 8`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"d835da7b-c6aa-83b7-cc4c-9ae73591a13b","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-209.45162228713548,"y":5538.036266317678,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"summercamper-\"\nconst summercamperKeys = keys.filter(key => key.startsWith('summercamper-'));\n\n// Count the number of summercamper keys\nconst count = summercamperKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"f1074474-4190-7395-a587-93427cd893f9","type":"RouterNavigate","x":267,"y":5036,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Animal Island/Animal Island"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"10b0ce24-ba45-e46a-df7a-369fe9febe51","type":"RouterNavigate","x":262,"y":5330,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Summer Camper/Summer Camper"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"9c330782-bab3-fc81-0937-350c80ee718a","type":"RouterNavigate","x":269,"y":5645,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Igloo/Igloo"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"aa7802f6-b917-d641-3ec2-704db4aeed4a","type":"RouterNavigate","x":263.494515829806,"y":5952.905070606892,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Gulliver/Gulliver"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"397bd0bf-303d-c369-9bc3-89a50735ea45","type":"RouterNavigate","x":273.4047863778344,"y":6274.14359133503,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Nook Store/Nook Store"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"64332713-332e-10a5-43de-b9a9f1f8f8ed","type":"RouterNavigate","x":299.23829102267473,"y":6568.884452030311,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Redd/Redd"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"33fbc095-0ba7-692a-fa49-3719fde275d5","type":"RouterNavigate","x":279.88136842318363,"y":6897.458817370431,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Tortimer/Tortimer"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"4ea2a65d-a2d1-ba69-6414-b1bce8fa8c5d","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-230.76068110828294,"y":4776.527529430819,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Define the prefixes\nconst prefixes = [\n  'animalisland-', 'christmas-', 'gulliver-', \n  'halloween-', 'misc-', 'nook-', \n  'raffle-', 'redd-', 'painting-', \n  'secret-', 'snowman-', 'summercamper-','thanksgiving-', \n  'tortimer-', 'igloo-'\n];\n\n// Filter keys that start with any of the prefixes\nconst matchingKeys = keys.filter(key => prefixes.some(prefix => key.startsWith(prefix)));\n\n// Count the number of matching keys\nconst count = matchingKeys.length;\n\n// Output the count in the format \"# / 601\"\nOutputs.CountText = `Furniture Progress: ${count} / 601`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"7110b007-aa59-0a84-6f91-7d6dd79b9271","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-231.42871826700605,"y":8540.895758589775,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"christmas-\"\nconst christmasKeys = keys.filter(key => key.startsWith('christmas-'));\n\n// Count the number of christmas keys\nconst count = christmasKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"70930fe9-7487-a977-03c3-20bac735f238","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-195.42769039796383,"y":7922.204817410922,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"halloween-\"\nconst halloweenKeys = keys.filter(key => key.startsWith('halloween-'));\n\n// Count the number of halloween keys\nconst count = halloweenKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"04c287da-e02b-dfc9-b771-d425e80f3974","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-240.38085448866264,"y":8231.228749300095,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"snowman-\"\nconst snowmanKeys = keys.filter(key => key.startsWith('snowman-'));\n\n// Count the number of snowman keys\nconst count = snowmanKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"8e534cb8-24e0-b6b5-abbb-46f0f4d66f93","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-194.61811764229503,"y":7613.371312766083,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"thanksgiving-\"\nconst thanksgivingKeys = keys.filter(key => key.startsWith('thanksgiving-'));\n\n// Count the number of thanksgiving keys\nconst count = thanksgivingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 10`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"13f81f9f-3615-0a57-67f1-1dec4964c1fd","type":"RouterNavigate","x":299.0478637783435,"y":8368.443108433597,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Toy Day/Toy Day"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"ff7e5067-1573-9d01-688d-a923f382531b","type":"RouterNavigate","x":323.47658204534946,"y":8056.0143901665915,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Snowman/Snowman"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"d927361d-1b79-ce33-a87e-c1a0a433b5bc","type":"RouterNavigate","x":303.38085448866264,"y":7763.609603788757,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Halloween/Halloween"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"733c033a-2bb6-0ada-c65a-1f9f832bdee4","type":"RouterNavigate","x":296.0957275566866,"y":7466.228749300095,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Harvest/Harvest"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"7f8c9148-0a73-2731-2cc4-2d0e256ed9e9","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-254.47555417630724,"y":9075.871826700602,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"misc-\"\nconst miscKeys = keys.filter(key => key.startsWith('misc-'));\n\n// Count the number of misc keys\nconst count = miscKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 25`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"40a56aa4-905e-596e-29ec-e79a2d058e78","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-282.8095727556687,"y":9343.204817410924,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"raffle-\"\nconst raffleKeys = keys.filter(key => key.startsWith('raffle-'));\n\n// Count the number of raffle keys\nconst count = raffleKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 36`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"e80c7ff5-9ef3-0b09-ee8f-c657a6d5776f","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-270.5473498438223,"y":9642.395244655254,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"secretcode-\"\nconst secretcodeKeys = keys.filter(key => key.startsWith('secret-'));\n\n// Count the number of secretcode keys\nconst count = secretcodeKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 18`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"3ef83ef5-087a-09c8-a30c-ffb3b61ac39e","type":"RouterNavigate","x":287.11863157681637,"y":8895.800031033088,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Miscellaneous/Miscellaneous"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"42240d14-df34-ea74-ed1e-37224642627b","type":"RouterNavigate","x":317.19042724433143,"y":9193.847894811432,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Raffle/Raffle"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"4b766bea-eebf-f7de-95a7-03ce5f2187e3","type":"RouterNavigate","x":320.80957275566857,"y":9492.63353567793,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Secret Codes/Secret Codes"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"bdb0fc1d-dab9-03d7-c07e-5a4a0eb0f806","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-250.39813889863228,"y":1859.9559613828267,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Define the prefixes\nconst prefixes = [\n  'clothing-', 'fruit-', 'tools-', 'gyroid-', 'tools-', 'songs-', 'stationery-',\n  'wallpaper-', 'carpet-', 'parasol-'\n];\n\n// Filter keys that start with any of the prefixes\nconst matchingKeys = keys.filter(key => prefixes.some(prefix => key.startsWith(prefix)));\n\n// Count the number of matching keys\nconst count = matchingKeys.length;\n\n// Output the count in the format \"# / 601\"\nOutputs.CountText = `Item Progress: ${count} / 697`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"28cf3f38-3625-f15d-0005-80885d670404","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-294,"y":145,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Define the prefixes\nconst prefixes = [\n  'fossil-', 'bugs-', 'fish-', 'painting-'\n];\n\n// Filter keys that start with any of the prefixes\nconst matchingKeys = keys.filter(key => prefixes.some(prefix => key.startsWith(prefix)));\n\n// Count the number of matching keys\nconst count = matchingKeys.length;\n\n// Output the count in the format \"# / 601\"\nOutputs.CountText = `Progress: ${count} / 120`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"94b04d27-9417-921b-f548-9eed71bf57e0","type":"RouterNavigate","x":318.02393188917176,"y":3075.5764210782054,"parameters":{"router":"Main","target":"/Collection Pages/Gyroids/Gyroids"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"3b6fef44-4e94-7643-f014-17c95b837db7","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-199.33401857936144,"y":3255.029071234383,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"clothing-\"\nconst clothingKeys = keys.filter(key => key.startsWith('gyroid-'));\n\n// Count the number of clothing keys\nconst count = clothingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 127`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"40da21d1-325d-afde-1a8e-7a87d2159639","type":"RouterNavigate","x":337.4047863778344,"y":3393.2861548010183,"parameters":{"router":"Main","target":"/Collection Pages/Tools/Tools"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"4d282f97-3697-69f8-f0cf-bb6cbbae0c4c","type":"RouterNavigate","x":314.97606811082824,"y":3711.0051393452113,"parameters":{"router":"Main","target":"/Collection Pages/Songs/Songs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"512e9083-2f43-cfb7-f27e-4469353429b1","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-219.11965944585847,"y":3891.173690438455,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Define the prefixes\nconst prefixes = [\n  'songs-'\n];\n\n// Filter keys that start with any of the prefixes\nconst matchingKeys = keys.filter(key => prefixes.some(prefix => key.startsWith(prefix)));\n\n// Count the number of matching keys\nconst count = matchingKeys.length;\n\n// Output the count in the format \"# / 601\"\nOutputs.CountText = `${count} / 55`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"f4f65fed-e8e8-e45b-ed43-06af712d6d81","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-196.7846129974547,"y":4189.746000040492,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Define the prefixes\nconst prefixes = [\n  'stationery-'\n];\n\n// Filter keys that start with any of the prefixes\nconst matchingKeys = keys.filter(key => prefixes.some(prefix => key.startsWith(prefix)));\n\n// Count the number of matching keys\nconst count = matchingKeys.length;\n\n// Output the count in the format \"# / 601\"\nOutputs.CountText = `${count} / 64`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"c83bdbd9-651f-de00-4cee-0dde00c67e0f","type":"RouterNavigate","x":331.97606811082824,"y":4020.9801795869976,"parameters":{"router":"Main","target":"/Collection Pages/Stationery/Stationery"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"4023d87d-c454-f16a-5e0e-ebe300d1cd82","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-207.57128173299395,"y":2325.1446192040726,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"clothing-\"\nconst clothingKeys = keys.filter(key => key.startsWith('carpet-'));\n\n// Count the number of clothing keys\nconst count = clothingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 67`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"a68c7998-d904-4a71-559b-cd3995e2d504","type":"JavaScriptFunction","label":"Count Painting Keys in Local Storage","x":-193.37982661962042,"y":4435.764792584452,"parameters":{"functionScript":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"clothing-\"\nconst clothingKeys = keys.filter(key => key.startsWith('wallpaper-'));\n\n// Count the number of clothing keys\nconst count = clothingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 67`;\n\n// Signal success\nOutputs.Success();\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"5427778d-12a8-9335-46cc-acdc997ad8ce","type":"RouterNavigate","x":319,"y":2153,"parameters":{"router":"Main","target":"/Collection Pages/Carpet/Carpet"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"438dc6b5-a8fa-a4bb-227e-3e03d02dfe03","type":"RouterNavigate","x":328,"y":4356,"parameters":{"router":"Main","target":"/Collection Pages/Wallpaper/Wallpaper"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"d9b4c387-0176-66f7-abff-d5b05376e16d","type":"JavaScriptFunction","label":"Count Bug Keys Every Second","x":-253,"y":3621,"parameters":{"functionScript":"function getFishKeys() {\n    let count = 0;\n\n    // Iterate over all keys in local storage\n    for (let i = 0; i < localStorage.length; i++) {\n        let key = localStorage.key(i);\n        // Check if the key starts with \"tools-\" or \"parasol-\"\n        if (key.startsWith('tools-') || key.startsWith('parasol-')) {\n            count++;\n        }\n    }\n\n    // Output the count in the format \"Tool / Handheld Progress: # / 339\"\n    Outputs.CountText = `${count} / 64`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function every 100 milliseconds\nsetInterval(getFishKeys, 100);\n"},"ports":[],"dynamicports":[{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-CountText","displayName":"CountText","plug":"output","type":"*","group":"Outputs","index":5}],"children":[],"metadata":{"prompt":{"history":[{"content":"Pull total number of \"painting-\" keys from Local Storage, count them, then output text \"# / 15\"","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Get all keys from local storage\nconst keys = Object.keys(localStorage);\n\n// Filter keys that start with \"painting-\"\nconst paintingKeys = keys.filter(key => key.startsWith('painting-'));\n\n// Count the number of painting keys\nconst count = paintingKeys.length;\n\n// Output the count in the format \"# / 15\"\nOutputs.CountText = `${count} / 15`;\n\n// Signal success\nOutputs.Success();\n"},"snowflakeId":"01910f8316e6-z0lu10","type":"user"},{"type":"assistant","content":"\nThis function retrieves all keys from the Local Storage, filters out the keys that start with \"painting-\", and counts the number of these keys. \n\nThe count is then formatted as a string in the format \"# / 15\", which is sent to the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is sent, the function signals that it has successfully completed by triggering the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"01910f832e75-bmqo4g","metadata":{}},{"content":"Run once per second","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define a function to get and count bug keys\nfunction getAndCountBugKeys() {\n    // Get all keys from local storage\n    const keys = Object.keys(localStorage);\n\n    // Filter keys that start with \"bugs-\"\n    const bugsKeys = keys.filter(key => key.startsWith('bugs-'));\n\n    // Count the number of bug keys\n    const count = bugsKeys.length;\n\n    // Output the count in the format \"# / 15\"\n    Outputs.CountText = `Bugs Progress: ${count} / 40`;\n\n    // Signal success\n    Outputs.Success();\n}\n\n// Run the function once per second\nsetInterval(getAndCountBugKeys, 1000);\n"},"snowflakeId":"01911e4b0f38-wruxb2","type":"user"},{"type":"assistant","content":"\nThis function retrieves and counts keys from the local storage that start with \"bugs-\" every second. \n\nIt defines a function called `getAndCountBugKeys` that retrieves all keys from the local storage, filters out the keys that start with \"bugs-\", and counts the number of these keys. The count is then formatted as \"Bugs Progress: # / 40\" and set as the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CountText</span> output. \n\nAfter the count is set, the function signals the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output. \n\nThe `getAndCountBugKeys` function is set to run every 1000 milliseconds (or one second) using the `setInterval` method.\n","snowflakeId":"01911e4b304a-fnuvrz","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["ed314a24-6119-0d29-5822-183ba25d4fd8"]}},{"name":"/Pages/Collections","id":"d864f062-61f1-b14a-9add-883265800103","graph":{"connections":[],"roots":[{"id":"67cd9af7-3ce9-159c-bc4c-07f1ae51b2d7","type":"Page","x":0,"y":0,"parameters":{},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Collections","index":31},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"collections","index":32}],"children":[{"id":"30a6e1c3-3cd8-2775-3dba-ed5a5fb95e5c","type":"/Pages/Collection Progress","parameters":{},"ports":[],"dynamicports":[],"children":[]}]},{"id":"3d7d60a0-acaf-5f03-b8d5-92410924497f","type":"PageInputs","x":-327,"y":-35,"parameters":{},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":["67cd9af7-3ce9-159c-bc4c-07f1ae51b2d7"]}},{"name":"/Pages/Furniture Logic","id":"b7fc3ecf-da74-3e9c-af05-e882c82d1067","graph":{"connections":[],"roots":[],"visualRoots":[]}},{"name":"/Pages/Home","id":"f013e8ce-4f75-b408-6586-3c84d5594b55","graph":{"connections":[{"fromId":"77fc358a-4f30-1ac0-111a-0847892fad3a","fromProperty":"out-CurrentTime","toId":"461b8104-87b3-f024-f536-ec994d4b9ff8","toProperty":"text"},{"fromId":"e401dd03-d313-e53d-d265-e3ceb6ab8c0b","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"e401dd03-d313-e53d-d265-e3ceb6ab8c0b","fromProperty":"onClick","toId":"e0c327df-5928-e9ca-5c96-21b7fd1511c6","toProperty":"navigate"},{"fromId":"26bc403d-6035-c9d3-daeb-d5a66f886e7e","fromProperty":"onClick","toId":"4abff953-2e2d-ba51-e0be-5666e9407460","toProperty":"navigate"},{"fromId":"26bc403d-6035-c9d3-daeb-d5a66f886e7e","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"6e8e1cde-89cc-0a46-91a7-275c7f9e4e5c","fromProperty":"onClick","toId":"55789c8a-b349-c340-1d95-98bd5c13658a","toProperty":"navigate"},{"fromId":"6e8e1cde-89cc-0a46-91a7-275c7f9e4e5c","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"2ddd3e4d-0ac2-6d3b-0622-4ec3d713714f","fromProperty":"onClick","toId":"90faf74b-d9e8-7d64-22b5-1f9f13c7a667","toProperty":"navigate"},{"fromId":"2ddd3e4d-0ac2-6d3b-0622-4ec3d713714f","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"8d75f829-582d-f392-1276-92c516c80fb7","fromProperty":"onClick","toId":"333173d2-cf6a-eddf-26f4-656681489256","toProperty":"navigate"},{"fromId":"8d75f829-582d-f392-1276-92c516c80fb7","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"469f2e48-38f3-0687-0a78-c1dddf5ea801","fromProperty":"onClick","toId":"3745e786-4aed-910e-1cac-e611488b5f2f","toProperty":"navigate"},{"fromId":"469f2e48-38f3-0687-0a78-c1dddf5ea801","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"e3178660-2812-b9c2-33cb-0b9031073c23","fromProperty":"onClick","toId":"3bb0a3dd-4a9e-9359-76ac-bf9849c44305","toProperty":"navigate"},{"fromId":"e3178660-2812-b9c2-33cb-0b9031073c23","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"4d9471c3-6f31-9d69-a4e6-efdd2f0a5d27","fromProperty":"onClick","toId":"f11af4cb-3818-0413-d24f-adeb82707d45","toProperty":"navigate"},{"fromId":"4d9471c3-6f31-9d69-a4e6-efdd2f0a5d27","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"18523594-280b-00a5-0025-9e6385e97513","fromProperty":"onClick","toId":"a8836687-ed5e-0204-9b5a-726c472b3d75","toProperty":"run"},{"fromId":"18523594-280b-00a5-0025-9e6385e97513","fromProperty":"onClick","toId":"34afcd8a-2c18-1f88-9c9b-65b6b975f540","toProperty":"navigate"}],"roots":[{"id":"73a69caf-3d68-5ae0-ebf3-2c570e65eff5","type":"Page","label":"Home Page","x":0,"y":0,"parameters":{"cssClassName":"animated"},"ports":[],"dynamicports":[{"name":"title","displayName":"Title","type":"string","group":"General","plug":"input","default":"Home","index":14},{"name":"urlPath","displayName":"Url Path","type":"string","group":"General","plug":"input","default":"home","index":15}],"children":[{"id":"32f8580d-f566-4b88-ccb5-eaa821004e76","type":"module.inlineHtml","label":"Collections Background","parameters":{"html":"<style>\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #296549; /* Set background color */\r\n  will-change: background-position; /* Hint to optimize rendering */\r\n  position: relative; /* Ensure pseudo-element is positioned correctly */\r\n}\r\n\r\nbody::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: \r\n    url('/images/background/leaf.png'),\r\n    url('/images/background/leaf.png');\r\n  background-size: 96px 96px; /* Size of the image */\r\n  background-repeat: repeat; /* Repeat the image */\r\n  background-position: 0 0, 96px 96px; /* Offset second layer by 50% */\r\n  animation: move-images 30s linear infinite; /* Infinite animation */\r\n  z-index: -1; /* Place behind other content */\r\n}\r\n\r\n@keyframes move-images {\r\n  0% {\r\n    background-position: 0 0, 96px 96px;\r\n  }\r\n  100% {\r\n    background-position: 192px 192px, 288px 288px; /* Move background to create seamless loop */\r\n  }\r\n}\r\n</style>","runJs":true},"ports":[],"dynamicports":[],"children":[]},{"id":"6a610c94-4ae7-7ab6-e699-e50b301a277b","type":"Group","parameters":{"justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"00c9ed23-1e98-6041-501a-96c53e5811a5","type":"Group","label":"Phone","parameters":{"styleCss":"background-color: #fdf8e3;","borderRadius":{"value":120,"unit":"px"},"paddingBottom":{"value":50,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"maxHeight":{"value":1000,"unit":"px"},"marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"},"sizeMode":"contentHeight","justifyContent":"center","borderColor":"Nook Text"},"ports":[],"dynamicports":[],"children":[{"id":"c4b1cc9d-160f-56c0-03ba-97425e19834b","type":"Group","label":"Top bar","parameters":{"flexDirection":"row","marginTop":{"value":40,"unit":"px"},"marginLeft":{"value":45,"unit":"px"},"marginRight":{"value":45,"unit":"px"},"minHeight":{"value":75,"unit":"px"},"maxHeight":{"value":75,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"2721a3cf-0253-1fa3-2187-f7d15407be67","type":"Image","label":"Signal","parameters":{"src":"images/nookphone/signal.png","transformScale":0.75},"ports":[],"dynamicports":[],"children":[]},{"id":"461b8104-87b3-f024-f536-ec994d4b9ff8","type":"Text","label":"Time","parameters":{"text":"12:00 AM","textAlignX":"center","color":"#e0daca","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","minHeight":{"value":15,"unit":"px"},"textStyle":"Title Large","textAlignY":"center","maxHeight":{"value":28,"unit":"px"},"position":"relative","marginLeft":{"value":-10,"unit":"px"},"marginRight":{"value":-10,"unit":"px"},"sizeMode":"contentHeight","fontSize":{"value":18,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"180257f4-98d2-d197-0708-90019700593a","type":"Group","parameters":{"minWidth":{"value":60,"unit":"px"},"maxWidth":{"value":60,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"c40fc4fa-a31a-d2d0-5b09-d1c12743a683","type":"Image","label":"Location Icon","parameters":{"src":"images/nookphone/location.png","marginTop":{"value":-4,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"alignX":"center","transformScale":0.75},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"7320ef08-1261-fab4-7d6e-c78ac179f1e4","type":"Text","label":"Primary Text","parameters":{"text":"GameCube Tracker","textStyle":"Title Large","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":-35,"unit":"px"},"fontSize":{"value":25,"unit":"px"},"textAlignX":"center","lineHeight":{"value":30,"unit":"px"},"alignY":"center","sizeMode":"contentHeight"},"ports":[],"dynamicports":[],"children":[]},{"id":"64d7c668-60b8-988e-215b-a19730900736","type":"Group","label":"Apps 1","parameters":{"marginTop":{"value":20,"unit":"px"},"marginBottom":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"06358471-64f4-a9d1-a712-b36ec770d642","type":"Group","label":"Row 1 Buttons","parameters":{"flexDirection":"row","sizeMode":"contentHeight","width":{"value":100,"unit":"%","isFixed":false},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"4d9471c3-6f31-9d69-a4e6-efdd2f0a5d27","type":"Group","label":"Group","parameters":{"backgroundColor":"#bf84f1","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"justifyContent":"center","alignItems":"center","flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"44f3ca1e-d9fc-12a1-0653-29686005a3f0","type":"Image","parameters":{"sizeMode":"explicit","src":"images/nookphone/calendar.png","width":{"value":75,"unit":"%"},"height":{"value":75,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"26bc403d-6035-c9d3-daeb-d5a66f886e7e","type":"Group","label":"Group","parameters":{"backgroundColor":"#e9cb68","alignY":"center","marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"justifyContent":"center","alignItems":"center","flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"6f0299ed-cdc8-41f5-b183-3d53481cb27c","type":"Image","parameters":{"sizeMode":"explicit","src":"images/nookphone/bugs.png","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"position":"relative","alignX":"center","width":{"value":75,"unit":"%"},"height":{"value":75,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e401dd03-d313-e53d-d265-e3ceb6ab8c0b","type":"Group","label":"Group","parameters":{"backgroundColor":"Nookmiles Blue Text","alignY":"center","marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"alignItems":"center","justifyContent":"center","flexDirection":"row"},"ports":[],"dynamicports":[],"children":[{"id":"7d2d765c-8059-914c-5e1d-7064f7351144","type":"Image","parameters":{"sizeMode":"explicit","src":"images/nookphone/fish.png","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"width":{"value":75,"unit":"%","isFixed":true},"position":"relative","alignY":"center","alignX":"center","height":{"value":75,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"2437353e-4ce5-de51-537a-58f2bca0f4f5","type":"Group","label":"Row 1 Text","parameters":{"flexDirection":"row","sizeMode":"contentHeight","width":{"value":100,"unit":"%","isFixed":false},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginTop":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"33fe3624-35ca-d37f-a2de-04b7e7ceca2b","type":"Text","label":"Primary Text","parameters":{"text":"Daily Tasks","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"b61c9408-34ec-77d8-5f07-727ee504c50f","type":"Text","label":"Primary Text","parameters":{"text":"Bug Guide","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"dc19b2bc-7b8f-a8b7-5cf6-8ee7683a2c1e","type":"Text","label":"Primary Text","parameters":{"text":"Fish Index","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"b8b574a3-7fac-b483-0345-ed5f53ca14a8","type":"Group","label":"Apps 2","parameters":{"marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"b62ead79-66c0-a572-c91b-9b25df2f0491","type":"Group","label":"Row 1 Buttons","parameters":{"flexDirection":"row","sizeMode":"contentHeight","width":{"value":100,"unit":"%","isFixed":false},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"18523594-280b-00a5-0025-9e6385e97513","type":"Group","label":"Group","parameters":{"backgroundColor":"#7ab785","alignY":"center","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"flexDirection":"row","justifyContent":"center","alignItems":"center"},"ports":[],"dynamicports":[],"children":[{"id":"a8d7a615-1b58-00d7-87cb-f0455654e3b9","type":"Image","parameters":{"sizeMode":"explicit","src":"images/passport2.png"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"6e8e1cde-89cc-0a46-91a7-275c7f9e4e5c","type":"Group","label":"Group","parameters":{"backgroundColor":"#3f4089","alignY":"center","marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"flexDirection":"row","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"77dac3f0-e593-50ea-43b6-e73000af66d9","type":"Image","parameters":{"sizeMode":"explicit","src":"images/nookphone/fossil.png","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"height":{"value":75,"unit":"%","isFixed":true},"width":{"value":75,"unit":"%","isFixed":true},"alignX":"center","position":"relative"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"2ddd3e4d-0ac2-6d3b-0622-4ec3d713714f","type":"Group","label":"Group","parameters":{"backgroundColor":"#ffacbe","alignY":"center","marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"flexDirection":"row","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"3a2268a4-3905-0357-7402-388d33fef3d3","type":"Image","parameters":{"src":"images/nookphone/art.png","sizeMode":"explicit"},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"33598961-9747-59ee-a975-234bdf54ed28","type":"Group","label":"Row 1 Text","parameters":{"flexDirection":"row","sizeMode":"contentHeight","width":{"value":100,"unit":"%","isFixed":false},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginTop":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"82b23f8e-054c-1549-0be3-d17a416c9f11","type":"Text","label":"Primary Text","parameters":{"text":"Passport","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"997f2d58-978b-51da-b8de-298db0168b6d","type":"Text","label":"Primary Text","parameters":{"text":"Fossil Catalog","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"62e079cb-b248-84f0-690a-112f3df33877","type":"Text","label":"Primary Text","parameters":{"text":"Art Gallery","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"caebd8bb-1b16-452d-e53e-cf2e2e4eb1b0","type":"Group","label":"Apps 3","parameters":{"marginTop":{"value":10,"unit":"px"},"marginBottom":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"83c3e21a-3b70-e192-7c20-fb4f550cc0f0","type":"Group","label":"Row 1 Buttons","parameters":{"flexDirection":"row","sizeMode":"contentHeight","width":{"value":100,"unit":"%","isFixed":false},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"8d75f829-582d-f392-1276-92c516c80fb7","type":"Group","label":"Group","parameters":{"backgroundColor":"#7ec8b9","marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"mixBlendMode":"normal","flexDirection":"row","justifyContent":"center","alignItems":"center"},"ports":[],"dynamicports":[],"children":[{"id":"65900a93-3daf-ab5e-5942-bc998e8e86d3","type":"Image","parameters":{"sizeMode":"explicit","src":"images/nookphone/items.png","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"height":{"value":75,"unit":"%","isFixed":true},"width":{"value":75,"unit":"%","isFixed":true},"alignX":"center","position":"relative"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"469f2e48-38f3-0687-0a78-c1dddf5ea801","type":"Group","label":"Group","parameters":{"backgroundColor":"#f9d776","alignY":"center","marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"boxShadowEnabled":false,"flexDirection":"row","justifyContent":"center","alignItems":"center"},"ports":[],"dynamicports":[],"children":[{"id":"207a26d4-7d4f-62cf-3cf0-250df8eee19c","type":"Image","parameters":{"sizeMode":"explicit","src":"images/nookphone/furniture.png","marginTop":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"height":{"value":70,"unit":"%","isFixed":true},"width":{"value":70,"unit":"%","isFixed":true},"alignX":"center","position":"relative"},"ports":[],"dynamicports":[],"children":[]}]},{"id":"e3178660-2812-b9c2-33cb-0b9031073c23","type":"Group","label":"Group","parameters":{"backgroundColor":"#8D8D8D","alignY":"center","marginRight":{"value":10,"unit":"px"},"marginLeft":{"value":10,"unit":"px"},"borderRadius":{"value":40,"unit":"px"},"flexDirection":"row","alignItems":"center","justifyContent":"center"},"ports":[],"dynamicports":[],"children":[{"id":"66150f82-88ad-c85d-e09b-327753dc1df1","type":"Image","parameters":{"src":"images/nookphone/coffee.png","sizeMode":"explicit","alignX":"center","alignY":"center","width":{"value":90,"unit":"%"},"height":{"value":90,"unit":"%"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"0feeeb19-6561-8703-fdd0-1a7319f633a5","type":"Group","label":"Row 1 Text","parameters":{"flexDirection":"row","sizeMode":"contentHeight","width":{"value":100,"unit":"%","isFixed":false},"marginLeft":{"value":10,"unit":"px"},"marginRight":{"value":10,"unit":"px"},"marginTop":{"value":10,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"09718b89-4df3-06fd-b6da-2758b72c1d48","type":"Text","label":"Primary Text","parameters":{"text":"All Items","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"1bee8941-9400-29c2-06e9-7f6db6159895","type":"Text","label":"Primary Text","parameters":{"text":"All Furniture","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"97f5b905-fd28-b182-82d9-1e800b3a1d67","type":"Text","label":"Primary Text","parameters":{"text":"About","textAlignX":"center","textStyle":"Title Small","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"#807256","marginTop":{"value":0,"unit":"px"},"fontSize":{"value":14,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]},{"id":"703be27f-24e7-f612-ff5e-cb9bee294c09","type":"Text","label":"Version number","parameters":{"text":"v1.0.3","textStyle":"Title Large","fontFamily":"fonts/FOT-Seurat Pro B/FOT-Seurat Pro B.otf","color":"Nook Tan Dark","fontSize":{"value":12,"unit":"px"},"lineHeight":{"value":30,"unit":"px"},"sizeMode":"contentHeight","textAlignX":"center","transformY":{"value":25,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"77fc358a-4f30-1ac0-111a-0847892fad3a","type":"JavaScriptFunction","label":"Current Time in 12h Format","x":-303,"y":216,"parameters":{"functionScript":"// Function to format the time in 12-hour format\nfunction formatAMPM(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    const strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n}\n\n// Function to update the current time\nfunction updateTime() {\n    const date = new Date();\n    const currentTime = formatAMPM(date);\n    Outputs.CurrentTime = currentTime; // Assuming Outputs.CurrentTime is a valid reference\n}\n\n// Run updateTime immediately upon script execution\nupdateTime();\n\n// Create an interval that updates the current time every second\nsetInterval(updateTime, 1000);\n"},"ports":[],"dynamicports":[{"name":"out-CurrentTime","displayName":"CurrentTime","plug":"output","type":"*","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Output that constantly outputs current time in 12h clock format.  Example: 12:00 AM","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Create a function to format the time in 12h format\nfunction formatAMPM(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    const strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n}\n\n// Create an interval that updates the current time every second\nsetInterval(() => {\n    const date = new Date();\n    const currentTime = formatAMPM(date);\n    Outputs.CurrentTime = currentTime;\n}, 1000);\n"},"snowflakeId":"019134862aa8-mktpms","type":"user"},{"type":"assistant","content":"\nThis function continuously outputs the current time in a 12-hour format (e.g., 12:00 AM). \n\nIt uses a helper function, formatAMPM, to convert a Date object into a string representing the time in 12-hour format. This function takes into account whether the time is AM or PM and formats the hours and minutes accordingly.\n\nThe main function then sets an interval that updates every second. On each update, it creates a new Date object representing the current time, formats this time using the formatAMPM function, and sets the <span style=\"color: var(--base-color-yellow-400);\">Outputs.CurrentTime</span> output to this formatted time string.\n","snowflakeId":"019134864c00-jtsvig","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"e0c327df-5928-e9ca-5c96-21b7fd1511c6","type":"RouterNavigate","x":319,"y":949,"parameters":{"router":"Main","target":"/Collection Pages/Fish/Fish"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"a8836687-ed5e-0204-9b5a-726c472b3d75","type":"JavaScriptFunction","label":"Play Audio File","x":969.3636363636365,"y":1487.060606060606,"parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[],"dynamicports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[],"metadata":{"prompt":{"history":[{"content":"on button pressed, play /audio/press.mp3","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the button is pressed\nInputs.OnButtonPressed = function() {\n    audio.play();\n    Outputs.Success();\n}\n"},"snowflakeId":"0191433b7cc2-8tehq2","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when a button is pressed. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> and <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> as inputs. The <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> is the path to the audio file to be played, and if it's not provided, it defaults to '/audio/press.mp3'. \n\nThe <span style=\"color: var(--base-color-yellow-400);\">Inputs.OnButtonPressed</span> is a signal that is triggered when the button is pressed. When this signal is received, the function creates a new Audio object with the specified file path and plays the audio file. \n\nAfter the audio file is played, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal.\n","snowflakeId":"0191433b9173-u82xub","metadata":{}},{"content":"Change it so it plays when the script runs.  \n","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"snowflakeId":"0191433d99d4-2i9lsg","type":"user"},{"type":"assistant","content":"\nThis function plays an audio file when the script runs. \n\nIt takes <span style=\"color: var(--base-color-yellow-400);\">Inputs.AudioFilePath</span> as an input, which is the path to the audio file. If no path is provided, it defaults to '/audio/press.mp3'. \n\nIt creates a new Audio object with the provided file path and attempts to play the audio file. \n\nIf the audio file plays successfully, it triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Success</span> output signal. \n\nIf there's an error while trying to play the audio file, it logs the error to the console and triggers the <span style=\"color: var(--base-color-yellow-400);\">Outputs.Failure</span> output signal.\n","snowflakeId":"0191433da7ba-mxljw9","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}},{"id":"4abff953-2e2d-ba51-e0be-5666e9407460","type":"RouterNavigate","x":464,"y":842,"parameters":{"router":"Main","target":"/Collection Pages/Bugs/Bugs"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"55789c8a-b349-c340-1d95-98bd5c13658a","type":"RouterNavigate","x":386.5,"y":1496,"parameters":{"router":"Main","target":"/Collection Pages/Fossils/Fossils"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"90faf74b-d9e8-7d64-22b5-1f9f13c7a667","type":"RouterNavigate","x":379.5,"y":1657,"parameters":{"router":"Main","target":"/Collection Pages/Paintings/Paintings"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"333173d2-cf6a-eddf-26f4-656681489256","type":"RouterNavigate","x":394.5,"y":2250,"parameters":{"router":"Main","target":"/Collection Pages/Tools/Tools"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"3745e786-4aed-910e-1cac-e611488b5f2f","type":"RouterNavigate","x":390,"y":2382,"parameters":{"router":"Main","target":"/Collection Pages/Furniture/Furniture"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"3bb0a3dd-4a9e-9359-76ac-bf9849c44305","type":"RouterNavigate","x":395,"y":2521,"parameters":{"router":"Main","target":"/Pages/About"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"f11af4cb-3818-0413-d24f-adeb82707d45","type":"RouterNavigate","x":385.5,"y":703,"parameters":{"router":"Main","target":"/Collection Pages/Daily/Daily"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"34afcd8a-2c18-1f88-9c9b-65b6b975f540","type":"RouterNavigate","x":379.5,"y":1404,"parameters":{"router":"Main","target":"/Collection Pages/Passport/Passport"},"ports":[],"dynamicports":[{"plug":"input","type":{"name":"component","title":"Choose page component","components":["/Collection Pages/Paintings/Paintings","/Collection Pages/Bugs/Bugs","/Collection Pages/Fish/Fish","/Collection Pages/Fossils/Fossils","/Collection Pages/Clothing/Clothing","/Collection Pages/Fruit/Fruit","/Collection Pages/Furniture/Furniture","/Collection Pages/Furniture/Animal Island/Animal Island","/Collection Pages/Furniture/Summer Camper/Summer Camper","/Collection Pages/Furniture/Igloo/Igloo","/Collection Pages/Furniture/Gulliver/Gulliver","/Collection Pages/Furniture/Nook Store/Nook Store","/Collection Pages/Furniture/Redd/Redd","/Collection Pages/Furniture/Tortimer/Tortimer","/Collection Pages/Furniture/Harvest/Harvest","/Collection Pages/Furniture/Halloween/Halloween","/Collection Pages/Furniture/Snowman/Snowman","/Collection Pages/Furniture/Toy Day/Toy Day","/Collection Pages/Furniture/Miscellaneous/Miscellaneous","/Collection Pages/Furniture/Raffle/Raffle","/Collection Pages/Furniture/Secret Codes/Secret Codes","/Collection Pages/Gyroids/Gyroids","/Collection Pages/Tools/Tools","/Collection Pages/Songs/Songs","/Collection Pages/Stationery/Stationery","/Collection Pages/Carpet/Carpet","/Collection Pages/Wallpaper/Wallpaper","/Collection Pages/Bugs/Spring Bugs","/Collection Pages/Bugs/Summer Bugs","/Collection Pages/Bugs/Fall Bugs","/Collection Pages/Bugs/Winter Bugs","/Collection Pages/Daily/Daily","/Collection Pages/Daily/Daily Fossil","/Pages/Home","/Pages/About","/Pages/Collections","/Collection Pages/Passport/Passport","/Collection Pages/Fish/Summer Fish","/Collection Pages/Fish/Spring Fish","/Collection Pages/Fish/Fall Fish","/Collection Pages/Fish/Winter Fish","/Collection Pages/Daily/Daily Events","/Pages/buy-remove-ads","/Pages/coffee"],"allowEditOnly":true},"group":"General","displayName":"Target Page","name":"target","index":3}],"children":[]},{"id":"85be07bd-27e5-0275-bfd3-a76000e238f3","type":"/Pop-ups/WIP Warning/Popup Modal","x":221.74157656862667,"y":-258.8131766944699,"parameters":{"Title":"Just a heads up","Description":"This app is mostly complete, but some sections are still a work in progress (WIP).  If you see \"WIP\" on any page, expect that some of the functionality is not yet implemented.","Primary Button Label":"I understand","Secondary Button Label":"View roadmap","Second Text":"You will only see this notification once."},"ports":[],"dynamicports":[],"children":[]},{"id":"57b72584-d71b-6c36-5313-9ad0e6e874da","type":"JavaScriptFunction","label":"Popup On First Load","x":-62,"y":-276.2686520207794,"parameters":{"functionScript":"// Check if the \"WIP-Popup\" key exists in the local storage\nconst popupShown = localStorage.getItem('WIP-Popup');\n\n// If the key does not exist, show the popup and store the key\nif (!popupShown) {\n  Outputs.ShowPopup(); // This will trigger the popup in the Noodl interface\n  localStorage.setItem('WIP-Popup', true); // This will store the key in the local storage\n}\n"},"ports":[],"dynamicports":[{"name":"out-ShowPopup","displayName":"ShowPopup","plug":"output","type":"signal","group":"Outputs","index":4}],"children":[],"metadata":{"prompt":{"history":[{"content":"Opens a popup via output on first page load, stores localstorage key \"WIP-Popup\" to true.  Only runs output if WIP-Popup true does not already exist.","metadata":{"user":{"name":"Local","id":"local","email":""},"code":"// Check if the \"WIP-Popup\" key exists in the local storage\nconst popupShown = localStorage.getItem('WIP-Popup');\n\n// If the key does not exist, show the popup and store the key\nif (!popupShown) {\n  Outputs.ShowPopup(); // This will trigger the popup in the Noodl interface\n  localStorage.setItem('WIP-Popup', true); // This will store the key in the local storage\n}\n"},"snowflakeId":"019166e9d2bf-ty1igk","type":"user"},{"type":"assistant","content":"\nThis function checks if a key named \"WIP-Popup\" exists in the local storage. If it does not exist, it triggers a popup in the Noodl interface and stores the \"WIP-Popup\" key in the local storage. This ensures that the popup is only shown once per user, on their first visit to the page. The function does not have any inputs or outputs.\n","snowflakeId":"019166e9e8e8-hrnzqy","metadata":{}}],"metadata":{"templateId":"function"}},"AiAssistant":"old","merge":{"soureCodePorts":["functionScript"]}}}],"visualRoots":["73a69caf-3d68-5ae0-ebf3-2c570e65eff5"]}},{"name":"/Pop-ups/WIP Warning/Popup Modal","id":"9d443c89-aa3e-f331-12b9-a602d3f8c491","graph":{"connections":[{"fromId":"b18d74b7-4e79-ed27-92af-59c17b961006","fromProperty":"Show popup","toId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","toProperty":"show"},{"fromId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","fromProperty":"Closed","toId":"a94c0d70-76e7-7b5f-84b4-f4a84333f5c3","toProperty":"Closed"},{"fromId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","fromProperty":"closeAction-Confirmed","toId":"a94c0d70-76e7-7b5f-84b4-f4a84333f5c3","toProperty":"Confirm Clicked"},{"fromId":"b18d74b7-4e79-ed27-92af-59c17b961006","fromProperty":"Title","toId":"29a4c6d2-c4b8-b0e1-1fda-1da6ef0e03cd","toProperty":"value"},{"fromId":"29a4c6d2-c4b8-b0e1-1fda-1da6ef0e03cd","fromProperty":"savedValue","toId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","toProperty":"popupParam-Title"},{"fromId":"b18d74b7-4e79-ed27-92af-59c17b961006","fromProperty":"Description","toId":"e48180e6-99e1-1c5a-40ce-1ae6bfc6fd73","toProperty":"value"},{"fromId":"e48180e6-99e1-1c5a-40ce-1ae6bfc6fd73","fromProperty":"savedValue","toId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","toProperty":"popupParam-Description"},{"fromId":"b18d74b7-4e79-ed27-92af-59c17b961006","fromProperty":"Primary Button Label","toId":"3bb85a03-91b8-38a9-5cae-5ee5ebb5002f","toProperty":"value"},{"fromId":"3bb85a03-91b8-38a9-5cae-5ee5ebb5002f","fromProperty":"savedValue","toId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","toProperty":"popupParam-Primary Button Label"},{"fromId":"b18d74b7-4e79-ed27-92af-59c17b961006","fromProperty":"Secondary Button Label","toId":"b02bb1ef-5891-7f1b-7095-3308460a24b1","toProperty":"value"},{"fromId":"b02bb1ef-5891-7f1b-7095-3308460a24b1","fromProperty":"savedValue","toId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","toProperty":"popupParam-Secondary Button Label"},{"fromId":"b18d74b7-4e79-ed27-92af-59c17b961006","fromProperty":"Component to show","toId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","toProperty":"target"},{"fromId":"b18d74b7-4e79-ed27-92af-59c17b961006","fromProperty":"Second Text","toId":"08a53b3d-f996-7980-5c36-4857f83b8072","toProperty":"value"},{"fromId":"08a53b3d-f996-7980-5c36-4857f83b8072","fromProperty":"savedValue","toId":"28b6059f-8459-f4ee-15bf-21ea80090c2d","toProperty":"popupParam-Second text"}],"roots":[{"id":"28b6059f-8459-f4ee-15bf-21ea80090c2d","type":"NavigationShowPopup","x":91.96418347009899,"y":135.4363398491261,"parameters":{"target":"/Pop-ups/WIP Warning/Popup Modal/Modal Component"},"ports":[],"dynamicports":[{"name":"popupParam-Title","displayName":"Title","type":{"name":"string","multiline":true},"plug":"input","group":"Params","index":3},{"name":"popupParam-Description","displayName":"Description","type":{"name":"string","multiline":true},"plug":"input","group":"Params","index":4},{"name":"popupParam-Primary Button Label","displayName":"Primary Button Label","type":"string","plug":"input","group":"Params","index":5},{"name":"popupParam-Secondary Button Label","displayName":"Secondary Button Label","type":"string","plug":"input","group":"Params","index":6},{"name":"popupParam-Second text","displayName":"Second text","type":{"name":"string","multiline":true},"plug":"input","group":"Params","index":7},{"name":"closeAction-Confirmed","displayName":"Confirmed","type":"signal","plug":"output","group":"Close Actions","index":8}],"children":[]},{"id":"b18d74b7-4e79-ed27-92af-59c17b961006","type":"Component Inputs","x":-591.5947745170042,"y":133,"parameters":{},"ports":[{"name":"Show popup","plug":"output","type":{"name":"*"},"index":5,"group":"Action"},{"name":"Title","plug":"output","type":{"name":"*"},"group":"Text","index":0},{"name":"Description","plug":"output","type":{"name":"*"},"group":"Text","index":1},{"name":"Primary Button Label","plug":"output","type":{"name":"*"},"group":"Text","index":2},{"name":"Secondary Button Label","plug":"output","type":{"name":"*"},"group":"Text","index":3},{"name":"Component to show","plug":"output","type":{"name":"*"},"group":"General","index":6},{"name":"Second Text","plug":"output","type":{"name":"*"},"group":"Text","index":4}],"dynamicports":[],"children":[]},{"id":"a94c0d70-76e7-7b5f-84b4-f4a84333f5c3","type":"Component Outputs","x":346.2378145694978,"y":169.59043267494678,"parameters":{},"ports":[{"name":"Closed","plug":"input","type":{"name":"*"},"index":1},{"name":"Confirm Clicked","plug":"input","type":{"name":"*"},"index":2}],"dynamicports":[],"children":[]},{"id":"29a4c6d2-c4b8-b0e1-1fda-1da6ef0e03cd","type":"String","x":-200.74416819137218,"y":64.27295381410153,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"e48180e6-99e1-1c5a-40ce-1ae6bfc6fd73","type":"String","x":-198.18050804049824,"y":162.97386962274555,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"3bb85a03-91b8-38a9-5cae-5ee5ebb5002f","type":"String","x":-194.33501781418738,"y":271.92942603488507,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"b02bb1ef-5891-7f1b-7095-3308460a24b1","type":"String","x":-195.61684788962435,"y":369.34851176809235,"parameters":{},"ports":[],"dynamicports":[],"children":[]},{"id":"08a53b3d-f996-7980-5c36-4857f83b8072","type":"String","x":-199.1099026304414,"y":467.7930762519853,"parameters":{},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":[]}},{"name":"/Pop-ups/WIP Warning/Popup Modal/Modal Component","id":"8f6c0795-698c-ebf7-822e-c0bc6bbde9f8","graph":{"connections":[{"fromId":"3e081541-ca3e-b93c-d947-dd83c0481590","fromProperty":"onClick","toId":"7115ef1c-a9a0-5d25-0bce-d5d724a43b2c","toProperty":"close"},{"fromId":"42fa371a-7790-17af-b935-46844768cf50","fromProperty":"onClick","toId":"7115ef1c-a9a0-5d25-0bce-d5d724a43b2c","toProperty":"close"},{"fromId":"0022e8ce-bd39-607b-e727-e6d62493603e","fromProperty":"onClick","toId":"7115ef1c-a9a0-5d25-0bce-d5d724a43b2c","toProperty":"closeAction-Confirmed"},{"fromId":"0ce053ce-82b0-cf20-7bde-54c172e725bf","fromProperty":"didMount","toId":"4921193d-3697-61bd-7953-aa88f59823e0","toProperty":"to-show"},{"fromId":"4921193d-3697-61bd-7953-aa88f59823e0","fromProperty":"size","toId":"7680bd61-32b7-74d1-5c93-04ad35df8547","toProperty":"transformScale"},{"fromId":"4921193d-3697-61bd-7953-aa88f59823e0","fromProperty":"opacity","toId":"7680bd61-32b7-74d1-5c93-04ad35df8547","toProperty":"opacity"},{"fromId":"18c7c4d3-46cf-16a5-21eb-521bccc3e275","fromProperty":"Title","toId":"71d67915-bb1d-f6aa-6d67-f28f397ffd33","toProperty":"text"},{"fromId":"18c7c4d3-46cf-16a5-21eb-521bccc3e275","fromProperty":"Description","toId":"295e7798-c015-3979-24d6-c17c4072984a","toProperty":"text"},{"fromId":"18c7c4d3-46cf-16a5-21eb-521bccc3e275","fromProperty":"Secondary Button Label","toId":"07a6bc0c-be7b-88e7-f358-437ec3884939","toProperty":"label"},{"fromId":"18c7c4d3-46cf-16a5-21eb-521bccc3e275","fromProperty":"Primary Button Label","toId":"0022e8ce-bd39-607b-e727-e6d62493603e","toProperty":"label"},{"fromId":"4921193d-3697-61bd-7953-aa88f59823e0","fromProperty":"opacity","toId":"3e081541-ca3e-b93c-d947-dd83c0481590","toProperty":"opacity"},{"fromId":"18c7c4d3-46cf-16a5-21eb-521bccc3e275","fromProperty":"Second text","toId":"ded7d638-7896-654c-ed32-5e5b9269097e","toProperty":"text"},{"fromId":"07a6bc0c-be7b-88e7-f358-437ec3884939","fromProperty":"onClick","toId":"64f9e2fa-c260-d746-dbc3-2115b7e9f637","toProperty":"do"}],"roots":[{"id":"7115ef1c-a9a0-5d25-0bce-d5d724a43b2c","type":"NavigationClosePopup","x":397,"y":349.3146799870558,"parameters":{"closeActions":"Confirmed"},"ports":[],"dynamicports":[{"type":"signal","plug":"input","group":"Close Actions","name":"closeAction-Confirmed","displayName":"Confirmed","index":3}],"children":[]},{"id":"0ce053ce-82b0-cf20-7bde-54c172e725bf","type":"Group","x":-16,"y":-78,"parameters":{},"ports":[],"dynamicports":[],"children":[{"id":"3e081541-ca3e-b93c-d947-dd83c0481590","type":"Group","label":"Dark BG Fullscreen","parameters":{"backgroundColor":"#000000A5"},"ports":[],"dynamicports":[],"children":[]},{"id":"7680bd61-32b7-74d1-5c93-04ad35df8547","type":"Group","label":"Modal","parameters":{"position":"absolute","alignY":"center","alignX":"center","width":{"value":420,"unit":"px"},"sizeMode":"contentHeight","backgroundColor":"Grey - 100","boxShadowEnabled":true,"blockTouch":true,"borderRadius":{"value":4,"unit":"px"},"paddingBottom":{"value":24,"unit":"px"},"paddingTop":{"value":24,"unit":"px"},"paddingRight":{"value":24,"unit":"px"},"paddingLeft":{"value":24,"unit":"px"},"boxShadowBlurRadius":{"value":8,"unit":"px"},"boxShadowSpreadRadius":{"value":0,"unit":"px"},"boxShadowOffsetY":{"value":4,"unit":"px"},"boxShadowColor":"#00000026"},"ports":[],"dynamicports":[],"children":[{"id":"42fa371a-7790-17af-b935-46844768cf50","type":"net.noodl.controls.button","label":"Close icon","parameters":{"position":"absolute","alignX":"right","alignY":"top","backgroundColor":"#5836F500","useIcon":true,"useLabel":false,"iconColor":"Grey - 700","iconIconSource":{"class":"material-icons","code":"close"},"iconSize":{"value":24,"unit":"px"},"paddingLeft":{"value":4,"unit":"px"},"paddingRight":{"value":4,"unit":"px"},"iconSpacing":{"value":0,"unit":"px"},"minWidth":{"value":0,"unit":"px"},"sizeMode":"contentSize","paddingTop":{"value":4,"unit":"px"},"paddingBottom":{"value":4,"unit":"px"},"marginRight":{"value":12,"unit":"px"},"marginTop":{"value":12,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"71d67915-bb1d-f6aa-6d67-f28f397ffd33","type":"Text","label":"Title","parameters":{"textStyle":"Title Medium","text":"Modal Title","marginRight":{"value":24,"unit":"px"}},"ports":[],"dynamicports":[],"children":[]},{"id":"295e7798-c015-3979-24d6-c17c4072984a","type":"Text","label":"Description","parameters":{"marginTop":{"value":16,"unit":"px"},"text":"Modal description that tells you something you shoul react to."},"ports":[],"dynamicports":[],"children":[]},{"id":"ded7d638-7896-654c-ed32-5e5b9269097e","type":"Text","label":"Description","parameters":{"marginTop":{"value":16,"unit":"px"},"text":"Modal description that tells you something you shoul react to."},"ports":[],"dynamicports":[],"children":[]},{"id":"0480fc77-d605-cd3e-5f27-7f22464c6a87","type":"Group","label":"Button section","parameters":{"flexDirection":"row","justifyContent":"flex-end","marginTop":{"value":24,"unit":"px"}},"ports":[],"dynamicports":[],"children":[{"id":"07a6bc0c-be7b-88e7-f358-437ec3884939","type":"net.noodl.controls.button","label":"Secondary Button","parameters":{"marginRight":{"value":16,"unit":"px"},"label":"Cancel","borderStyle":"solid","borderColor":"Primary","borderWidth":{"value":1,"unit":"px"},"backgroundColor":"transparent","color":"Primary Dark"},"stateParameters":{"hover":{"borderColor":"Primary Dark"}},"ports":[],"dynamicports":[],"children":[]},{"id":"0022e8ce-bd39-607b-e727-e6d62493603e","type":"net.noodl.controls.button","label":"Primary Button","parameters":{"label":"Confirm"},"ports":[],"dynamicports":[],"children":[]}]}]}]},{"id":"4921193d-3697-61bd-7953-aa88f59823e0","type":"States","label":"Show animation","x":349.40031396109833,"y":-164.70626405198828,"parameters":{"states":"hide,show","values":"size,opacity","value-hide-size":0,"value-show-size":1,"value-hide-opacity":0,"value-show-opacity":1,"currentState":"hide","transitiondef-hide":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"transitiondef-show":{"curve":[0,0,0.58,1],"dur":150,"delay":0}},"ports":[],"dynamicports":[{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"size","index":6},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"size","name":"type-size","index":7},{"type":{"name":"number","allowConnectionsOnly":true},"plug":"output","group":"Values","name":"opacity","index":8},{"type":{"name":"enum","enums":[{"label":"Number","value":"number"},{"label":"String","value":"string"},{"label":"Boolean","value":"boolean"},{"label":"Color","value":"color"},{"label":"Text Style","value":"textStyle"}],"allowEditOnly":true},"default":"number","plug":"input","group":"Types","displayName":"opacity","name":"type-opacity","index":9},{"plug":"input","type":"number","group":"hide Values","name":"value-hide-size","displayName":"size","editorName":"hide|size","index":10},{"plug":"input","type":"number","group":"hide Values","name":"value-hide-opacity","displayName":"opacity","editorName":"hide|opacity","index":11},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"hide Transitions","name":"transitiondef-hide","index":12},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"hide Transitions","name":"transition-hide-size","displayName":"size","editorName":"Transition hide|size","index":13},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"hide Transitions","name":"transition-hide-opacity","displayName":"opacity","editorName":"Transition hide|opacity","index":14},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To hide","name":"to-hide","group":"Go to state","index":15},{"plug":"output","type":"boolean","displayName":"At hide","name":"at-hide","group":"Current state","index":16},{"plug":"output","type":"signal","displayName":"Has Reached hide","name":"reached-hide","group":"Current state","index":17},{"plug":"input","type":"number","group":"show Values","name":"value-show-size","displayName":"size","editorName":"show|size","index":18},{"plug":"input","type":"number","group":"show Values","name":"value-show-opacity","displayName":"opacity","editorName":"show|opacity","index":19},{"plug":"input","type":"curve","displayName":"Default","default":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"group":"show Transitions","name":"transitiondef-show","index":20},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"show Transitions","name":"transition-show-size","displayName":"size","editorName":"Transition show|size","index":21},{"plug":"input","type":{"name":"curve"},"default":{"curve":[0,0,0.58,1],"dur":150,"delay":0},"group":"show Transitions","name":"transition-show-opacity","displayName":"opacity","editorName":"Transition show|opacity","index":22},{"plug":"input","type":{"name":"signal","allowConnectionsOnly":true},"displayName":"To show","name":"to-show","group":"Go to state","index":23},{"plug":"output","type":"boolean","displayName":"At show","name":"at-show","group":"Current state","index":24},{"plug":"output","type":"signal","displayName":"Has Reached show","name":"reached-show","group":"Current state","index":25},{"plug":"input","type":{"name":"enum","enums":["hide","show"]},"group":"States","displayName":"State","name":"currentState","default":"hide","index":26}],"children":[]},{"id":"18c7c4d3-46cf-16a5-21eb-521bccc3e275","type":"Component Inputs","x":-284.43267743823577,"y":453.2708708053495,"parameters":{},"ports":[{"name":"Title","plug":"output","type":{"name":"*"},"index":1},{"name":"Description","plug":"output","type":{"name":"*"},"index":2},{"name":"Primary Button Label","plug":"output","type":{"name":"*"},"index":3},{"name":"Secondary Button Label","plug":"output","type":{"name":"*"},"index":4},{"name":"Second text","plug":"output","type":{"name":"*"},"index":5}],"dynamicports":[],"children":[]},{"id":"64f9e2fa-c260-d746-dbc3-2115b7e9f637","type":"net.noodl.externallink","x":382.9919091307156,"y":730.2198216851043,"parameters":{"link":"https://github.com/users/SK-Crow/projects/4/"},"ports":[],"dynamicports":[],"children":[]}],"visualRoots":["0ce053ce-82b0-cf20-7bde-54c172e725bf"]}}],"settings":{"htmlTitle":"Animal Crossing Gamecube Checklist","baseUrl":"https://raytrac3r.github.io/AC-Deluxe-Gamecube-Checklist","sitemap.enabled":true},"rootNodeId":"246f9453-a119-ac78-171e-3806cf596ecc","version":"4","metadata":{"styles":{"text":{"Display":{"letterSpacing":"Auto","lineHeight":{"value":"120","unit":"%"},"textTransform":"none","fontSize":{"value":"40","unit":"px"},"fontFamily":"fonts/Roboto/Roboto-Regular.ttf","color":"#000000"},"Headline":{"fontFamily":"fonts/Roboto/Roboto-Regular.ttf","fontSize":{"value":"32","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"120","unit":"%"},"textTransform":"none"},"Title Large":{"fontFamily":"fonts/Roboto/Roboto-Bold.ttf","fontSize":{"value":"24","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"120%","unit":"px"},"textTransform":"none"},"Title Medium":{"fontFamily":"fonts/Roboto/Roboto-Medium.ttf","fontSize":{"value":"20","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"120","unit":"%"},"textTransform":"none"},"Title Small":{"fontFamily":"fonts/Roboto/Roboto-Bold.ttf","fontSize":{"value":"16","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"120","unit":"%"},"textTransform":"none"},"Label Large":{"fontFamily":"fonts/Roboto/Roboto-Medium.ttf","fontSize":{"value":"16","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"120","unit":"%"},"textTransform":"none"},"Label Medium":{"fontFamily":"fonts/Roboto/Roboto-Medium.ttf","fontSize":{"value":"14","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"120","unit":"%"},"textTransform":"none"},"Label Small":{"fontFamily":"fonts/Roboto/Roboto-Medium.ttf","fontSize":{"value":"12","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"120","unit":"%"},"textTransform":"none"},"Body Large":{"fontFamily":"fonts/Roboto/Roboto-Regular.ttf","fontSize":{"value":"20","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"150","unit":"%"},"textTransform":"none"},"Body Medium":{"fontFamily":"fonts/Roboto/Roboto-Regular.ttf","fontSize":{"value":"16","unit":"px"},"color":"#000000","letterSpacing":"Auto","lineHeight":{"value":"150","unit":"%"},"textTransform":"none"},"Body Small":{"letterSpacing":"Auto","lineHeight":{"value":"150","unit":"%"},"textTransform":"none","fontFamily":"fonts/Roboto/Roboto-Regular.ttf","fontSize":{"value":"14","unit":"px"},"color":"#000000"}},"colors":{"Grey - 100":"#FBFBFB","Grey - 400":"#CECECE","Grey - 200":"#F4F4F4","Grey - 500":"#A5A5A5","Grey - 700":"#4C4C4C","Grey - 300":"#E9E9E9","Grey - 900":"#1F1F1F","Primary":"#42A14A","Primary Dark":"#3F22B8","Primary Subtle":"#C9BFFC","Primary Light":"#F7F5FF","White":"#FFFFFF","Black":"#000000","Nook Text":"#74664B","Nook Text Light":"#e0daca","Nookmiles Blue":"#5B7AD7","Nookmiles Blue Text":"#C0E2FD","Nookmiles Green":"#D6E69D","Nookmiles Brown":"#625544","Mailbox Red":"#F51F18","Police Blue":"#2040A0","Garbage Gray":"#2D3741","Fossil Blue":"#474599","Nook Tan":"#F8F5DF","Nook Tan Dark":"#B9A999","Nook Pale Green":"#80BF70","Nook light red":"#D6A7A7","Settings Gray":"#BCBCBC","Settings BG":"#D0D0D0","Nook Orange":"#FFE1AE","Nookmiles BG Light":"#C2F4FF"}}},"variants":[{"typename":"net.noodl.controls.button","parameters":{"height":{"value":40,"unit":"px"},"sizeMode":"contentWidth","backgroundColor":"Primary","iconIconSource":{"class":"material-icons","code":"home"},"iconSpacing":{"value":8,"unit":"px"},"borderRadius":{"value":4,"unit":"px"},"textStyle":"Label Medium","paddingTop":{"value":0,"unit":"px"},"paddingLeft":{"value":24,"unit":"px"},"paddingRight":{"value":24,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"},"color":"#FFFFFF","fontFamily":"fonts/Roboto/Roboto-Medium.ttf","minWidth":{"value":80,"unit":"px"},"useIcon":false,"iconSize":{"value":20,"unit":"px"}},"stateParamaters":{"hover":{"backgroundColor":"Primary Dark"},"pressed":{"backgroundColor":"Primary","color":"White"},"disabled":{"backgroundColor":"Grey - 300","color":"Grey - 600"}},"stateTransitions":{},"defaultStateTransitions":{"neutral":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"hover":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"pressed":{"curve":[0,0,0.58,1],"dur":0,"delay":0}}},{"typename":"net.noodl.controls.radiobutton","parameters":{"width":{"value":20,"unit":"px"},"height":{"value":20,"unit":"px"},"useLabel":true,"labeltextStyle":"Body Large","borderWidth":{"value":1,"unit":"px"},"value":"0","useIcon":false,"fillColor":"transparent","borderColor":"Grey - 700","labelfontSize":{"value":16,"unit":"px"},"marginBottom":{"value":8,"unit":"px"},"labelcolor":"Grey - 900","labelSpacing":{"value":12,"unit":"px"}},"stateParamaters":{"checked":{"fillColor":"Primary","borderColor":"Primary","borderWidth":{"value":1,"unit":"px"},"backgroundColor":"transparent","width":{"value":20,"unit":"px"},"height":{"value":20,"unit":"px"},"fillSpacing":{"value":2,"unit":"px"}},"hover":{"backgroundColor":"transparent","borderColor":"Grey - 700","width":{"value":20,"unit":"px"},"height":{"value":20,"unit":"px"}},"disabled":{"borderColor":"Grey - 500","labelcolor":"Grey - 500","fillColor":"transparent"}},"stateTransitions":{},"defaultStateTransitions":{"neutral":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"hover":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"checked":{"curve":[0,0,0.58,1],"dur":0,"delay":0}}},{"typename":"Text","parameters":{"textStyle":"Body Medium"},"stateParamaters":{},"stateTransitions":{}},{"typename":"net.noodl.controls.range","parameters":{"thumbColor":"Primary","thumbBorderRadius":{"value":100,"unit":"%"},"trackHeight":{"value":4,"unit":"px"},"trackActiveColor":"Primary","trackColor":"Primary Subtle","width":{"value":100,"unit":"%"},"trackBorderRadius":{"value":100,"unit":"px"},"thumbHeight":{"value":16,"unit":"px"},"thumbWidth":{"value":16,"unit":"px"}},"stateParamaters":{"hover":{"thumbColor":"Primary Dark","trackActiveColor":"Primary Dark"},"disabled":{"trackActiveColor":"Grey - 500","trackColor":"Grey - 300","thumbColor":"Grey - 500"}},"stateTransitions":{}},{"typename":"net.noodl.controls.checkbox","parameters":{"width":{"value":20,"unit":"px"},"height":{"value":20,"unit":"px"},"useIcon":false,"borderWidth":{"value":1,"unit":"px"},"useLabel":true,"labeltextStyle":"Body Medium","borderRadius":{"value":2,"unit":"px"},"borderColor":"Grey - 700","labelfontSize":{"value":16,"unit":"px"},"labelcolor":"Grey - 900","labelSpacing":{"value":12,"unit":"px"}},"stateParamaters":{"checked":{"useIcon":true,"iconIconSource":{"class":"material-icons","code":"check"},"backgroundColor":"Primary","borderColor":"Primary","iconSize":{"value":16,"unit":"px"}},"disabled":{"opacity":0.5},"hover":{"borderColor":"Grey - 700"},"pressed":{}},"stateTransitions":{},"defaultStateTransitions":{"neutral":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"hover":{"curve":[0,0,0.58,1],"dur":300,"delay":0},"checked":{"curve":[0,0,0.58,1],"dur":0,"delay":0}}},{"typename":"net.noodl.controls.textinput","parameters":{"useLabel":true,"sizeMode":"explicit","height":{"value":40,"unit":"px"},"textStyle":"Body Medium","borderStyle":"solid","borderRadius":{"value":4,"unit":"px"},"borderWidth":{"value":1,"unit":"px"},"borderColor":"Grey - 700","labeltextStyle":"Label Small","paddingLeft":{"value":12,"unit":"px"},"paddingRight":{"value":8,"unit":"px"},"labelSpacing":{"value":4,"unit":"px"},"placeholder":"Type here","color":"Grey - 900","placeHolderOpacity":0.65,"enabled":true,"blockTouch":false,"useIcon":false,"iconIconSource":{"class":"material-icons","code":"home"},"iconSize":{"value":20,"unit":"px"},"iconSpacing":{"value":4,"unit":"px"},"iconColor":"Grey - 700","labelcolor":"Grey - 700"},"stateParamaters":{"hover":{"labelcolor":"Grey - 700","borderColor":"Grey - 700","borderStyle":"solid","color":"Grey - 900"},"focused":{"borderColor":"Primary","labelcolor":"Primary","borderWidth":{"value":1,"unit":"px"},"boxShadowEnabled":false,"boxShadowColor":"Primary","borderStyle":"solid"},"disabled":{"labelcolor":"Grey - 500","backgroundColor":"Grey - 200","borderWidth":{"value":1,"unit":"px"},"borderColor":"Grey - 500","color":"Grey - 600"}},"stateTransitions":{},"defaultStateTransitions":{"neutral":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"focused":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"hover":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"disabled":{"curve":[0,0,0.58,1],"dur":0,"delay":0}}},{"typename":"net.noodl.controls.options","parameters":{"sizeMode":"explicit","height":{"value":40,"unit":"px"},"borderWidth":{"value":1,"unit":"px"},"borderRadius":{"value":4,"unit":"px"},"borderColor":"Grey - 700","boxShadowColor":"Dark Gray","useIcon":true,"iconIconSource":{"class":"material-icons","code":"expand_more"},"iconPlacement":"right","iconSize":{"value":20,"unit":"px"},"paddingRight":{"value":12,"unit":"px"},"textStyle":"Body Medium","paddingLeft":{"value":12,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"width":{"value":100,"unit":"%"},"iconColor":"Grey - 700","placeholderOpacity":0.65,"placeholder":"Select option","useLabel":true,"labelSpacing":{"value":4,"unit":"px"},"labeltextStyle":"Label Small","labelcolor":"Grey - 700","items":"[\n    {\"Label\":\"Option 1\", \"Value\":\"1\"},\n    {\"Label\":\"Option 2\", \"Value\":\"2\"},\n    {\"Label\":\"Option 3\", \"Value\":\"3\"}\n]"},"stateParamaters":{"hover":{"borderColor":"Grey - 700","borderRadius":{"value":4,"unit":"px"},"iconColor":"Grey - 900","iconSize":{"value":20,"unit":"px"},"iconPlacement":"right","color":"Grey - 900","labelcolor":"Grey - 700"},"focused":{"borderColor":"Primary","boxShadowColor":"Primary","borderRadius":{"value":4,"unit":"px"},"useIcon":true,"iconColor":"Primary","iconIconSource":{"class":"material-icons","code":"keyboard_arrow_up"},"iconPlacement":"right","color":"Grey - 900","labelcolor":"Primary"},"pressed":{"borderRadius":{"value":4,"unit":"px"}},"disabled":{"labelcolor":"Grey - 500","iconColor":"Grey - 500","borderColor":"Grey - 500","color":"Grey - 600","backgroundColor":"Grey - 200"}},"stateTransitions":{},"defaultStateTransitions":{"neutral":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"focused":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"hover":{"curve":[0,0,0.58,1],"dur":0,"delay":0},"pressed":{"curve":[0,0,0.58,1],"dur":0,"delay":0}}}]}