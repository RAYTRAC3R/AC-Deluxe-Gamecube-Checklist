[{"name":"/Collection Pages/Daily/Daily Fossil Logic","nodes":[{"id":"7626d385-a3bf-f714-d1a1-b109e3bdb0f4","type":"Group","parameters":{"borderWidth":{"value":3,"unit":"px"},"justifyContent":"center","alignItems":"center","alignY":"center","alignX":"center","marginTop":{"value":39,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"borderColor":"Nook Tan Dark"},"ports":[],"children":[{"id":"2661c29b-95bf-5d51-bfed-00953409dc03","type":"net.noodl.controls.checkbox","parameters":{"labeltextStyle":"Title Medium","labelcolor":"Nookmiles Brown","useLabel":false,"useIcon":true,"iconSourceType":"image","iconImageSource":"images/fossil.png","iconSize":{"value":48,"unit":"px"},"alignX":"center","alignY":"center","width":{"value":48,"unit":"px"},"height":{"value":48,"unit":"px"},"borderRadius":{"value":50,"unit":"px"}},"ports":[],"children":[]}]},{"id":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","type":"Model2","parameters":{"idSource":"foreach","properties":"Image,Label,Price,Obtained,Checked,id"},"ports":[],"children":[]},{"id":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","type":"SetModelProperties","parameters":{"properties":"Checked"},"ports":[],"children":[]},{"id":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","type":"JavaScriptFunction","parameters":{"functionScript":"const id = Inputs.ID || '';\nconst label = Inputs.Label || '';\nconst checked = Inputs.Checked || false;\nconst icon = Inputs.Icon || ''; // Added icon\nconst obtained = Inputs.Obtained || ''; // Added obtained\nconst price = Inputs.Price || ''; // Added price\n\n// Function to get the current date in the desired format\nfunction getCurrentDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, '0');\n    const day = String(today.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n}\n\n// Function to load data from localStorage and check the date\nfunction loadSelection(id, callback) {\n    const storedData = localStorage.getItem(id);\n    if (storedData) {\n        const parsedData = JSON.parse(storedData);\n        const currentDate = getCurrentDate();\n        if (parsedData.date !== currentDate) {\n            // If the stored date is not today, delete the key from localStorage\n            localStorage.removeItem(id);\n            callback(null);\n        } else {\n            callback(parsedData);\n        }\n    } else {\n        callback(null);\n    }\n}\n\n// Function to handle passthrough\nfunction passthrough() {\n    Outputs.ID = id;\n    Outputs.Label = label;\n    Outputs.Checked = checked;\n    Outputs.Icon = icon; // Added icon\n    Outputs.Obtained = obtained; // Added obtained\n    Outputs.Price = price; // Added price\n    Outputs.Date = getCurrentDate(); // Added current date\n    Outputs.Failure();\n}\n\n// Main logic\nloadSelection(id, function(result) {\n    if (result) {\n        Outputs.ID = result.id;\n        Outputs.Label = result.label;\n        Outputs.Checked = result.checked;\n        Outputs.Icon = result.icon || ''; // Added icon handling\n        Outputs.Obtained = result.obtained || ''; // Added obtained handling\n        Outputs.Price = result.price || ''; // Added price handling\n        Outputs.Date = getCurrentDate(); // Added current date\n        Outputs.Success();\n    } else {\n        passthrough();\n    }\n});\n"},"ports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":9},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":10},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":11},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":12},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Date","displayName":"Date","plug":"output","type":"*","group":"Outputs","index":18}],"children":[]},{"id":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","type":"JavaScriptFunction","parameters":{"functionScript":"const id = Inputs.ID || '';\r\nconst label = Inputs.Label || '';\r\nconst checked = Inputs.Checked; // Expecting a boolean input\r\nconst changed = Inputs.Changed; // Signal input, used as a trigger\r\nconst icon = Inputs.Icon || ''; // Added icon\r\nconst obtained = Inputs.Obtained || ''; // Added obtained\r\nconst price = Inputs.Price || ''; // Added price\r\nconst date = Inputs.Date || ''; // Added date\r\n\r\n// Function to load data from localStorage\r\nfunction loadSelection(id, callback) {\r\n    const storedData = localStorage.getItem(id);\r\n    if (storedData) {\r\n        callback(JSON.parse(storedData));\r\n    } else {\r\n        callback(null);\r\n    }\r\n}\r\n\r\n// Function to save data to localStorage\r\nfunction saveSelection(selection) {\r\n    localStorage.setItem(selection.id, JSON.stringify(selection));\r\n}\r\n\r\n// Function to delete data from localStorage\r\nfunction deleteSelection(id) {\r\n    localStorage.removeItem(id);\r\n}\r\n\r\n// Function to check if data has changed and save or delete if necessary\r\nfunction checkAndUpdateSelection(selection) {\r\n    loadSelection(selection.id, function(existingItem) {\r\n        let dataChanged = false;\r\n\r\n        if (existingItem) {\r\n            if (selection.checked === false) {\r\n                // If the checkbox is unchecked, delete the entry\r\n                deleteSelection(selection.id);\r\n                Outputs.SavedSelection = null; // Indicate that nothing was saved\r\n                Outputs.Success();\r\n            } else {\r\n                // Check if the existing data is different from the new data\r\n                if (existingItem.label !== selection.label ||\r\n                    existingItem.checked !== selection.checked ||\r\n                    existingItem.icon !== selection.icon ||\r\n                    existingItem.obtained !== selection.obtained ||\r\n                    existingItem.price !== selection.price ||\r\n                    existingItem.date !== selection.date) { // Added date comparison\r\n                    dataChanged = true;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    saveSelection(selection);\r\n                    Outputs.SavedSelection = selection;\r\n                    Outputs.Success();\r\n                } else {\r\n                    passthrough();\r\n                }\r\n            }\r\n        } else {\r\n            if (selection.checked) {\r\n                // If the checkbox is checked and no existing item, save the new item\r\n                saveSelection(selection);\r\n                Outputs.SavedSelection = selection;\r\n                Outputs.Success();\r\n            } else {\r\n                passthrough();\r\n            }\r\n        }\r\n        // Signal completion\r\n        Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n    });\r\n}\r\n\r\n// Function to handle passthrough\r\nfunction passthrough() {\r\n    Outputs.ID = id;\r\n    Outputs.Label = label;\r\n    Outputs.Checked = checked;\r\n    Outputs.Icon = icon; // Added icon\r\n    Outputs.Obtained = obtained; // Added obtained\r\n    Outputs.Price = price; // Added price\r\n    Outputs.Date = date; // Added date\r\n    Outputs.Failure();\r\n    // Signal completion\r\n    Outputs.Completed = true; // or you can use Outputs.Completed = new Date().getTime(); for a timestamp\r\n}\r\n\r\n// Main logic\r\nconst selection = { id, label, checked, icon, obtained, price, date }; // Added date\r\nif (changed) {\r\n    checkAndUpdateSelection(selection);\r\n} else {\r\n    passthrough();\r\n}\r\n"},"ports":[{"name":"in-ID","displayName":"ID","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Label","displayName":"Label","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Checked","displayName":"Checked","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Changed","displayName":"Changed","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Icon","displayName":"Icon","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-Obtained","displayName":"Obtained","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-Price","displayName":"Price","plug":"input","type":"*","group":"Inputs","index":10},{"name":"in-Date","displayName":"Date","plug":"input","type":"*","group":"Inputs","index":11},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":13},{"name":"out-SavedSelection","displayName":"SavedSelection","plug":"output","type":"*","group":"Outputs","index":14},{"name":"out-Completed","displayName":"Completed","plug":"output","type":"*","group":"Outputs","index":15},{"name":"out-ID","displayName":"ID","plug":"output","type":"*","group":"Outputs","index":16},{"name":"out-Label","displayName":"Label","plug":"output","type":"*","group":"Outputs","index":17},{"name":"out-Checked","displayName":"Checked","plug":"output","type":"*","group":"Outputs","index":18},{"name":"out-Icon","displayName":"Icon","plug":"output","type":"*","group":"Outputs","index":19},{"name":"out-Obtained","displayName":"Obtained","plug":"output","type":"*","group":"Outputs","index":20},{"name":"out-Price","displayName":"Price","plug":"output","type":"*","group":"Outputs","index":21},{"name":"out-Date","displayName":"Date","plug":"output","type":"*","group":"Outputs","index":22}],"children":[]},{"id":"08f765c8-36cc-ff65-5611-48ab7bf58e46","type":"JavaScriptFunction","parameters":{"functionScript":"// Define the audio file path\nconst audioFilePath = Inputs.AudioFilePath || '/audio/press.mp3';\n\n// Create a new Audio object\nconst audio = new Audio(audioFilePath);\n\n// Play the audio file when the script runs\naudio.play().then(() => {\n    Outputs.Success();\n}).catch((error) => {\n    console.error(\"Error playing audio:\", error);\n    Outputs.Failure();\n});\n"},"ports":[{"name":"in-AudioFilePath","displayName":"AudioFilePath","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":6}],"children":[]}],"connections":[{"sourceId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","sourcePort":"out-ID","targetId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","targetPort":"in-ID"},{"sourceId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","sourcePort":"out-ID","targetId":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","targetPort":"modelId"},{"sourceId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","sourcePort":"out-Checked","targetId":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","targetPort":"prop-Checked"},{"sourceId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","sourcePort":"id","targetId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","targetPort":"in-ID"},{"sourceId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","sourcePort":"prop-Label","targetId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","targetPort":"in-Label"},{"sourceId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","sourcePort":"prop-Checked","targetId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","targetPort":"in-Checked"},{"sourceId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","sourcePort":"prop-Image","targetId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","targetPort":"in-Icon"},{"sourceId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","sourcePort":"prop-Price","targetId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","targetPort":"in-Price"},{"sourceId":"ddd16ade-24d2-65ac-6b09-2b161a2a841c","sourcePort":"prop-Obtained","targetId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","targetPort":"in-Obtained"},{"sourceId":"2661c29b-95bf-5d51-bfed-00953409dc03","sourcePort":"onChange","targetId":"2b4ae49b-14d9-036d-2b92-17f3dbb13fea","targetPort":"store"},{"sourceId":"2661c29b-95bf-5d51-bfed-00953409dc03","sourcePort":"onChange","targetId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","targetPort":"in-Changed"},{"sourceId":"2661c29b-95bf-5d51-bfed-00953409dc03","sourcePort":"checked","targetId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","targetPort":"in-Checked"},{"sourceId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","sourcePort":"out-Checked","targetId":"2661c29b-95bf-5d51-bfed-00953409dc03","targetPort":"checked"},{"sourceId":"b0c2ed87-16b6-4e00-72aa-7e12504f809c","sourcePort":"out-Date","targetId":"78bbc7da-2ef7-b2c9-5a86-8f8cbd25fa55","targetPort":"in-Date"},{"sourceId":"2661c29b-95bf-5d51-bfed-00953409dc03","sourcePort":"onChange","targetId":"08f765c8-36cc-ff65-5611-48ab7bf58e46","targetPort":"run"}],"ports":[],"roots":["7626d385-a3bf-f714-d1a1-b109e3bdb0f4"]}]